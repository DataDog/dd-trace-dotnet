name: Auto tag version bump commit

on:
  push:
    branches: [ master, main ]
    tags-ignore:
      - '**'

jobs:
  tag_version_bump_commit:
    if: startsWith(github.event.head_commit.message, '[Version Bump]')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: "Output current version"
        id: versions
        run: ./tracer/build.sh OutputCurrentVersionToGitHub

      - name: "Configure Git Credentials"
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: "Create and push git tag"
        id: version
        run: |
          git tag "v${{steps.versions.outputs.full_version}}"
          git push origin "v${{steps.versions.outputs.full_version}}"

      -name: "Clean up old benchmark branches"
       run: |
         # find all remote benchmarks/* branches (by literal string)
         # Exclude the branches we want to permenantly keep using -e for each value
         # trim "remotes/origin" from start
         # Reverse the order
         # Skip the 1st result (so we will have 2 benchmarks at most)
         # Then do the complex dance to rename all the branches
         BRANCHES=$(git branch -a  \
           | grep -F 'origin/benchmarks' \
           | grep -Fv -e 'benchmarks/1.27.1' \
           | cut -c 18- \
           | tac | tail -n +2)
         for orig in $BRANCHES; do
          archived=archived_$orig;
          git branch $orig origin/$orig
          git branch -m $orig $archived;
          git push origin --delete $orig;
          git branch --unset-upstream $archived;
          git push origin -u $archived;
          git branch -d $archived;
         done

      - name: Create benchmarks branch
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'benchmarks/${{steps.versions.outputs.full_version}}'