name: "Create System Test docker base images"
on:
  # This GitHub Action is invoked automatically from the main Azure DevOps
  # build when building the main branch (a snapshot). It is launched from
  # Azure DevOps instead of using a GitHub event, as it requires the assets
  # that are created by the Azure DevOps build. The build only produces
  # snapshots, not releases.
  workflow_dispatch:
    inputs:
      azdo_build_id:
        description: 'The specific AzDo build from which the release artifacts will be downloaded.'
        required: true

      is_release_version:
        description: 'Is this run generating release artifacts? Set to "True" to publish `:latest` tags, otherwise generates `:latest-snapshot` tags'
        required: true
        default: 'False'

      branch_name:
        description: 'Branch name for tagging (optional). If provided, tags as branch name instead of latest_snapshot'
        required: false

jobs:
  build-and-publish-base-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read # read secrets
      packages: write # pushing to ghcr.io
    env:
      AZURE_DEVOPS_TOKEN: "${{ secrets.AZURE_DEVOPS_TOKEN }}"
    steps:
    - name: Checkout
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        fetch-depth: 0

    - uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
      with:
        dotnet-version: '9.0.203'

    - name: "Get current version"
      id: versions
      run: ./tracer/build.sh OutputCurrentVersionToGitHub

    - name: "Download build assets from Azure Pipelines"
      id: assets
      run: ./tracer/build.sh DownloadAzurePipelineFromBuild
      env:
        AzureDevopsBuildId: "${{ github.event.inputs.azdo_build_id }}"

    - name: "Sanitize branch name"
      id: image_tag
      run: |
        BRANCH="${{github.event.inputs.branch_name}}"
        if [[ -z "$BRANCH" ]]; then
          echo "ERROR: Missing required 'branch_name' input. Aborting docker image build."
          exit 1
        fi
        SAFE_TAG="${BRANCH//\//_}"
        echo "tag=$SAFE_TAG" >> $GITHUB_OUTPUT

    - uses: ./.github/actions/create-system-test-docker-base-images
      name: 'Create system test docker images'
      with:
        artifacts_path: "${{steps.assets.outputs.artifacts_path}}"
        package_version: "${{steps.versions.outputs.version}}"
        lib_waf_version: "${{steps.versions.outputs.lib_waf_version}}"
        waf_rules_version: "${{steps.versions.outputs.waf_rules_version}}"
        github_token: ${{ secrets.GITHUB_TOKEN }}
        image_tag: ${{steps.image_tag.outputs.tag}}
