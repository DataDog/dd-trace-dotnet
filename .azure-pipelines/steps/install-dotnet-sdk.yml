parameters:
  - name: sdkVersion
    type: string
    default: ''

  - name: channel
    type: string
    default: ''

steps:
  - bash: |
      if [ -n "$CHANNEL" ] && [ -n "$SDKVERSION" ]; then
        echo "##vso[task.logissue type=error;]You can't provide both \"channel\" and \"sdkVersion\". Pick one."
        echo "##vso[task.complete result=Failed;]"
      elif [ -z "$CHANNEL" ] && [ -z "$SDKVERSION" ]; then
        echo "##vso[task.logissue type=error;]You must provide either \"channel\" or \"sdkVersion\"."
        echo "##vso[task.complete result=Failed;]"
      fi
    env:
      CHANNEL: ${{ parameters.channel }}
      SDKVERSION: ${{ parameters.sdkVersion }}
    displayName: Validate parameters

  - ${{if ne(parameters.sdkVersion, '') }}:
    - powershell: |
        echo "Downloading dotnet-install.ps1"
        Invoke-WebRequest -Uri "https://dot.net/v1/dotnet-install.ps1" -OutFile dotnet-install.ps1
        $path = "C:\Users\VssAdministrator\AppData\Local\Microsoft\dotnet"
        echo "Installing dotnet to $path"
        ./dotnet-install.ps1 -version ${{ parameters.sdkVersion }} -NoPath -InstallDir $path
        echo "Exporting path to DOTNET_EXE"
        echo "##vso[task.setvariable variable=DOTNET_EXE]$path\dotnet.exe"
      displayName: install dotnet core sdk ${{ parameters.sdkVersion }} 
  - ${{if ne(parameters.channel, '') }}:
    - powershell: |
        echo "Downloading dotnet-install.ps1"
        Invoke-WebRequest -Uri "https://dot.net/v1/dotnet-install.ps1" -OutFile dotnet-install.ps1
        $path = "C:\Users\VssAdministrator\AppData\Local\Microsoft\dotnet"
        echo "Installing dotnet to $path"
        ./dotnet-install.ps1 -Channel ${{ parameters.channel }} -NoPath -InstallDir $path
        echo "Exporting path to DOTNET_EXE"
        echo "##vso[task.setvariable variable=DOTNET_EXE]$path\dotnet.exe"
      displayName: install dotnet core sdk ${{ parameters.channel }} 
