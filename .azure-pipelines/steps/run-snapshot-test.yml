parameters:
  - name: 'target'
    type: 'string'

  - name: 'snapshotPrefix'
    type: 'string'

steps:
- script: |
    docker-compose -p ddtrace_$(Build.BuildNumber) run --rm start-test-agent
  env:
    dockerTag: $(dockerTag)
  displayName: docker-compose run start-test-agent
  retryCountOnTaskFailure: 3

- bash: |
    token=$(cat /proc/sys/kernel/random/uuid)
    echo "##vso[task.setvariable variable=snapshot_token]$token"
    endpoint="/test/session/start?test_session_token=$token"
    echo "Starting snapshot session with $endpoint"
    docker-compose -p ddtrace_$(Build.BuildNumber) exec -T test-agent /usr/bin/curl --fail "http://localhost:8126$endpoint"
  displayName: start snapshot session

- script: |
    docker-compose -p ddtrace_$(Build.BuildNumber) run -e dockerTag=$(dockerTag) ${{ parameters.target }}
  env:
    dockerTag: $(dockerTag)
  displayName: docker-compose run ${{ parameters.target }}


- bash: |
    token=$(token)
    endpoint="/test/session/traces?test_session_token=$token"
    echo "Dumping traces with $endpoint"
    docker-compose -p ddtrace_$(Build.BuildNumber) exec -T test-agent /usr/bin/curl -o /debug_snapshots/${{ parameters.snapshotPrefix }}_traces.json "http://localhost:8126$endpoint"
    
    endpoint="/test/session/stats?test_session_token=$token"
    echo "Dumping stats with $endpoint"
    docker-compose -p ddtrace_$(Build.BuildNumber) exec -T test-agent /usr/bin/curl -o /debug_snapshots/${{ parameters.snapshotPrefix }}_stats.json "http://localhost:8126$endpoint"
    
    endpoint="/test/session/requests?test_session_token=$token"
    echo "Dumping all requests with $endpoint"
    docker-compose -p ddtrace_$(Build.BuildNumber) exec -T test-agent /usr/bin/curl -o /debug_snapshots/${{ parameters.snapshotPrefix }}_requests.json "http://localhost:8126$endpoint"
    
    if [ "$(publishFramework)" = "netcoreapp2.1" ]; then
      snapshotfile="${{ parameters.snapshotPrefix }}_snapshots_2_1"
    else
      snapshotfile="${{ parameters.snapshotPrefix }}_snapshots"
    fi
    
    # Fail if the snapshots don't match
    endpoint="/test/session/snapshot?test_session_token=$token&file=/snapshots/$snapshotfile"
    echo "Verifying snapshot session with $endpoint"
    docker-compose -p ddtrace_$(Build.BuildNumber) exec -T test-agent /usr/bin/curl --fail "http://localhost:8126$endpoint"
  displayName: check snapshots

- task: DockerCompose@0
  displayName: dump docker-compose logs for test-agent
  inputs:
    containerregistrytype: Container Registry
    dockerComposeCommand: logs test-agent
    projectName: ddtrace_$(Build.BuildNumber)
  condition: succeededOrFailed()
  continueOnError: true

- task: DockerCompose@0
  displayName: docker-compose stop services
  inputs:
    containerregistrytype: Container Registry
    dockerComposeCommand: down
    projectName: ddtrace_$(Build.BuildNumber)
  condition: succeededOrFailed()
  continueOnError: true