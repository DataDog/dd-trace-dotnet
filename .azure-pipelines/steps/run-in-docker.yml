parameters:
  - name: 'baseImage'
    type: 'string'
    default: debian

  - name: 'target'
    type: 'string'
    default: tester
    
  - name: build
    type: boolean
    default: false
    
  - name: command
    type: string

steps:
- ${{ if eq(parameters.build, true) }}:
  - script: |
      docker build \
        --build-arg DOTNETSDK_VERSION=$(dotnetCoreSdk5Version) \
        --tag dd-trace-dotnet/${{ parameters.baseImage }}-${{ parameters.target }} \
        --target ${{ parameters.target }} \
        --file "$(System.DefaultWorkingDirectory)/build/_build/docker/${{ parameters.baseImage }}.dockerfile" \
        "$(System.DefaultWorkingDirectory)/build/_build"
    displayName: Build ${{ parameters.baseImage }} Docker image
- script: |
    docker run --rm \
        --mount type=bind,source="$(System.DefaultWorkingDirectory)",target=/project \
        --env NugetPackageDirectory=/project/$(relativeNugetPackageDirectory) \
        --env tracerHome=/project/$(relativeTracerHome) \
        --env artifacts=/project/$(relativeArtifacts) \
        --env DD_CLR_ENABLE_NGEN=$(DD_CLR_ENABLE_NGEN) \
        dd-trace-dotnet/${{ parameters.baseImage }}-${{ parameters.target }} \
        dotnet /build/bin/Debug/_build.dll ${{ parameters.command }}
  displayName: Run '${{ parameters.command }}' in Docker