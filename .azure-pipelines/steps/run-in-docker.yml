parameters:
  - name: 'baseImage'
    type: 'string'
    default: debian

  - name: 'target'
    type: 'string'
    default: tester
    
  - name: build
    type: boolean
    default: false

  - name: ddTraceEnabled
    type: boolean
    default: false

  - name: command
    type: string

steps:
- ${{ if eq(parameters.build, true) }}:
  - script: |
      docker build \
        --build-arg DOTNETSDK_VERSION=$(dotnetCoreSdk5Version) \
        --tag dd-trace-dotnet/${{ parameters.baseImage }}-${{ parameters.target }} \
        --target ${{ parameters.target }} \
        --file "$(System.DefaultWorkingDirectory)/build/_build/docker/${{ parameters.baseImage }}.dockerfile" \
        "$(System.DefaultWorkingDirectory)/build/_build"
    displayName: Build ${{ parameters.baseImage }} Docker image
- ${{ if eq(parameters.ddTraceEnabled, 'true') }}:
  - script: |
      docker run --rm \
          --mount type=bind,source="$(System.DefaultWorkingDirectory)",target=/project \
          --env NugetPackageDirectory=/project/$(relativeNugetPackageDirectory) \
          --env tracerHome=/project/$(relativeTracerHome) \
          --env artifacts=/project/$(relativeArtifacts) \
          --env DD_CLR_ENABLE_NGEN=$(DD_CLR_ENABLE_NGEN) \
          --env DD_SERVICE \
          --env DD_ENV \
          --env TF_BUILD \
          --env BUILD_DEFINITIONNAME \
          --env BUILD_BUILDID \
          --env BUILD_SOURCESDIRECTORY \
          --env BUILD_REPOSITORY_URI \
          --env BUILD_SOURCEBRANCH \
          --env BUILD_SOURCEVERSION \
          --env BUILD_SOURCEBRANCH \
          --env BUILD_SOURCEVERSION \
          --env SYSTEM_TEAMFOUNDATIONSERVERURI \
          --env SYSTEM_TEAMPROJECT \
          --env SYSTEM_JOBID \
          --env SYSTEM_TASKINSTANCEID \
          --env SYSTEM_PULLREQUEST_SOURCEREPOSITORYURI \
          --env SYSTEM_PULLREQUEST_SOURCEBRANCH \
          --env SYSTEM_PULLREQUEST_SOURCECOMMITID \
          --env SYSTEM_PULLREQUEST_SOURCECOMMITID \
          dd-trace-dotnet/${{ parameters.baseImage }}-${{ parameters.target }} \
          dd-trace -- dotnet /build/bin/Debug/_build.dll info ${{ parameters.command }}
    displayName: Run dd-trace '${{ parameters.command }}' in Docker
- ${{ if ne(parameters.ddTraceEnabled, 'true') }}:
    - script: |
        docker run --rm \
            --mount type=bind,source="$(System.DefaultWorkingDirectory)",target=/project \
            --env NugetPackageDirectory=/project/$(relativeNugetPackageDirectory) \
            --env tracerHome=/project/$(relativeTracerHome) \
            --env artifacts=/project/$(relativeArtifacts) \
            --env DD_CLR_ENABLE_NGEN=$(DD_CLR_ENABLE_NGEN) \
            dd-trace-dotnet/${{ parameters.baseImage }}-${{ parameters.target }} \
            dotnet /build/bin/Debug/_build.dll ${{ parameters.command }}
      displayName: Run '${{ parameters.command }}' in Docker