#ifndef EVALUATOR_IDS_READER_H
#define EVALUATOR_IDS_READER_H

/* Generated by flatcc 0.6.1 FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif



/**  Each ID represents a String evaluator
 *  Each evaluator ID should be UNIQUE!
 *  IMPORTANT! When adding a new evaluator make sure you add it as the last one (just before the _COUNT entry) */
typedef int8_t dd_wls_StringEvaluators_enum_t;
__flatbuffers_define_integer_type(dd_wls_StringEvaluators, dd_wls_StringEvaluators_enum_t, 8)
#define dd_wls_StringEvaluators_COMPONENT ((dd_wls_StringEvaluators_enum_t)INT8_C(0))
#define dd_wls_StringEvaluators_PROCESS_EXE ((dd_wls_StringEvaluators_enum_t)INT8_C(1))
#define dd_wls_StringEvaluators_PROCESS_EXE_FULL_PATH ((dd_wls_StringEvaluators_enum_t)INT8_C(2))
#define dd_wls_StringEvaluators_PROCESS_BASEDIR_PATH ((dd_wls_StringEvaluators_enum_t)INT8_C(3))
#define dd_wls_StringEvaluators_PROCESS_ARGV ((dd_wls_StringEvaluators_enum_t)INT8_C(4))
#define dd_wls_StringEvaluators_PROCESS_CWD ((dd_wls_StringEvaluators_enum_t)INT8_C(5))
#define dd_wls_StringEvaluators_RUNTIME_LANGUAGE ((dd_wls_StringEvaluators_enum_t)INT8_C(6))
#define dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_FILE ((dd_wls_StringEvaluators_enum_t)INT8_C(7))
#define dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_JAR ((dd_wls_StringEvaluators_enum_t)INT8_C(8))
#define dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_CLASS ((dd_wls_StringEvaluators_enum_t)INT8_C(9))
#define dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_PACKAGE ((dd_wls_StringEvaluators_enum_t)INT8_C(10))
#define dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_MODULE ((dd_wls_StringEvaluators_enum_t)INT8_C(11))
#define dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_SOURCE ((dd_wls_StringEvaluators_enum_t)INT8_C(12))
#define dd_wls_StringEvaluators_RUNTIME_DOPTION ((dd_wls_StringEvaluators_enum_t)INT8_C(13))
#define dd_wls_StringEvaluators_RUNTIME_VERSION ((dd_wls_StringEvaluators_enum_t)INT8_C(14))
#define dd_wls_StringEvaluators_LIBC_FLAVOR ((dd_wls_StringEvaluators_enum_t)INT8_C(15))
#define dd_wls_StringEvaluators_LIBC_VERSION ((dd_wls_StringEvaluators_enum_t)INT8_C(16))
#define dd_wls_StringEvaluators_MACHINE_ARCHITECTURE ((dd_wls_StringEvaluators_enum_t)INT8_C(17))
#define dd_wls_StringEvaluators_HOST_NAME ((dd_wls_StringEvaluators_enum_t)INT8_C(18))
#define dd_wls_StringEvaluators_HOST_IP ((dd_wls_StringEvaluators_enum_t)INT8_C(19))
#define dd_wls_StringEvaluators_OS ((dd_wls_StringEvaluators_enum_t)INT8_C(20))
#define dd_wls_StringEvaluators_OS_DISTRO ((dd_wls_StringEvaluators_enum_t)INT8_C(21))
#define dd_wls_StringEvaluators_OS_DISTRO_VERSION ((dd_wls_StringEvaluators_enum_t)INT8_C(22))
#define dd_wls_StringEvaluators_OS_DISTRO_CODENAME ((dd_wls_StringEvaluators_enum_t)INT8_C(23))
#define dd_wls_StringEvaluators_OS_KERNEL_VERSION ((dd_wls_StringEvaluators_enum_t)INT8_C(24))
#define dd_wls_StringEvaluators_OS_KERNEL_NAME ((dd_wls_StringEvaluators_enum_t)INT8_C(25))
#define dd_wls_StringEvaluators_OS_USER ((dd_wls_StringEvaluators_enum_t)INT8_C(26))
#define dd_wls_StringEvaluators_OS_USER_GROUP ((dd_wls_StringEvaluators_enum_t)INT8_C(27))
#define dd_wls_StringEvaluators_CONTAINER_IMAGE ((dd_wls_StringEvaluators_enum_t)INT8_C(28))
#define dd_wls_StringEvaluators_CONTAINER_ID ((dd_wls_StringEvaluators_enum_t)INT8_C(29))
#define dd_wls_StringEvaluators_ALWAYS_TRUE ((dd_wls_StringEvaluators_enum_t)INT8_C(30))
#define dd_wls_StringEvaluators_ALWAYS_FALSE ((dd_wls_StringEvaluators_enum_t)INT8_C(31))
#define dd_wls_StringEvaluators_ALWAYS_ABSTAIN ((dd_wls_StringEvaluators_enum_t)INT8_C(32))
#define dd_wls_StringEvaluators_STR_EVAL_COUNT ((dd_wls_StringEvaluators_enum_t)INT8_C(33))

static inline const char *dd_wls_StringEvaluators_name(dd_wls_StringEvaluators_enum_t value)
{
    switch (value) {
    case dd_wls_StringEvaluators_COMPONENT: return "COMPONENT";
    case dd_wls_StringEvaluators_PROCESS_EXE: return "PROCESS_EXE";
    case dd_wls_StringEvaluators_PROCESS_EXE_FULL_PATH: return "PROCESS_EXE_FULL_PATH";
    case dd_wls_StringEvaluators_PROCESS_BASEDIR_PATH: return "PROCESS_BASEDIR_PATH";
    case dd_wls_StringEvaluators_PROCESS_ARGV: return "PROCESS_ARGV";
    case dd_wls_StringEvaluators_PROCESS_CWD: return "PROCESS_CWD";
    case dd_wls_StringEvaluators_RUNTIME_LANGUAGE: return "RUNTIME_LANGUAGE";
    case dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_FILE: return "RUNTIME_ENTRY_POINT_FILE";
    case dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_JAR: return "RUNTIME_ENTRY_POINT_JAR";
    case dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_CLASS: return "RUNTIME_ENTRY_POINT_CLASS";
    case dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_PACKAGE: return "RUNTIME_ENTRY_POINT_PACKAGE";
    case dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_MODULE: return "RUNTIME_ENTRY_POINT_MODULE";
    case dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_SOURCE: return "RUNTIME_ENTRY_POINT_SOURCE";
    case dd_wls_StringEvaluators_RUNTIME_DOPTION: return "RUNTIME_DOPTION";
    case dd_wls_StringEvaluators_RUNTIME_VERSION: return "RUNTIME_VERSION";
    case dd_wls_StringEvaluators_LIBC_FLAVOR: return "LIBC_FLAVOR";
    case dd_wls_StringEvaluators_LIBC_VERSION: return "LIBC_VERSION";
    case dd_wls_StringEvaluators_MACHINE_ARCHITECTURE: return "MACHINE_ARCHITECTURE";
    case dd_wls_StringEvaluators_HOST_NAME: return "HOST_NAME";
    case dd_wls_StringEvaluators_HOST_IP: return "HOST_IP";
    case dd_wls_StringEvaluators_OS: return "OS";
    case dd_wls_StringEvaluators_OS_DISTRO: return "OS_DISTRO";
    case dd_wls_StringEvaluators_OS_DISTRO_VERSION: return "OS_DISTRO_VERSION";
    case dd_wls_StringEvaluators_OS_DISTRO_CODENAME: return "OS_DISTRO_CODENAME";
    case dd_wls_StringEvaluators_OS_KERNEL_VERSION: return "OS_KERNEL_VERSION";
    case dd_wls_StringEvaluators_OS_KERNEL_NAME: return "OS_KERNEL_NAME";
    case dd_wls_StringEvaluators_OS_USER: return "OS_USER";
    case dd_wls_StringEvaluators_OS_USER_GROUP: return "OS_USER_GROUP";
    case dd_wls_StringEvaluators_CONTAINER_IMAGE: return "CONTAINER_IMAGE";
    case dd_wls_StringEvaluators_CONTAINER_ID: return "CONTAINER_ID";
    case dd_wls_StringEvaluators_ALWAYS_TRUE: return "ALWAYS_TRUE";
    case dd_wls_StringEvaluators_ALWAYS_FALSE: return "ALWAYS_FALSE";
    case dd_wls_StringEvaluators_ALWAYS_ABSTAIN: return "ALWAYS_ABSTAIN";
    case dd_wls_StringEvaluators_STR_EVAL_COUNT: return "STR_EVAL_COUNT";
    default: return "";
    }
}

static inline int dd_wls_StringEvaluators_is_known_value(dd_wls_StringEvaluators_enum_t value)
{
    switch (value) {
    case dd_wls_StringEvaluators_COMPONENT: return 1;
    case dd_wls_StringEvaluators_PROCESS_EXE: return 1;
    case dd_wls_StringEvaluators_PROCESS_EXE_FULL_PATH: return 1;
    case dd_wls_StringEvaluators_PROCESS_BASEDIR_PATH: return 1;
    case dd_wls_StringEvaluators_PROCESS_ARGV: return 1;
    case dd_wls_StringEvaluators_PROCESS_CWD: return 1;
    case dd_wls_StringEvaluators_RUNTIME_LANGUAGE: return 1;
    case dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_FILE: return 1;
    case dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_JAR: return 1;
    case dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_CLASS: return 1;
    case dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_PACKAGE: return 1;
    case dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_MODULE: return 1;
    case dd_wls_StringEvaluators_RUNTIME_ENTRY_POINT_SOURCE: return 1;
    case dd_wls_StringEvaluators_RUNTIME_DOPTION: return 1;
    case dd_wls_StringEvaluators_RUNTIME_VERSION: return 1;
    case dd_wls_StringEvaluators_LIBC_FLAVOR: return 1;
    case dd_wls_StringEvaluators_LIBC_VERSION: return 1;
    case dd_wls_StringEvaluators_MACHINE_ARCHITECTURE: return 1;
    case dd_wls_StringEvaluators_HOST_NAME: return 1;
    case dd_wls_StringEvaluators_HOST_IP: return 1;
    case dd_wls_StringEvaluators_OS: return 1;
    case dd_wls_StringEvaluators_OS_DISTRO: return 1;
    case dd_wls_StringEvaluators_OS_DISTRO_VERSION: return 1;
    case dd_wls_StringEvaluators_OS_DISTRO_CODENAME: return 1;
    case dd_wls_StringEvaluators_OS_KERNEL_VERSION: return 1;
    case dd_wls_StringEvaluators_OS_KERNEL_NAME: return 1;
    case dd_wls_StringEvaluators_OS_USER: return 1;
    case dd_wls_StringEvaluators_OS_USER_GROUP: return 1;
    case dd_wls_StringEvaluators_CONTAINER_IMAGE: return 1;
    case dd_wls_StringEvaluators_CONTAINER_ID: return 1;
    case dd_wls_StringEvaluators_ALWAYS_TRUE: return 1;
    case dd_wls_StringEvaluators_ALWAYS_FALSE: return 1;
    case dd_wls_StringEvaluators_ALWAYS_ABSTAIN: return 1;
    case dd_wls_StringEvaluators_STR_EVAL_COUNT: return 1;
    default: return 0;
    }
}

/**  Each ID represents a Numeric evaluator
 *  Each evaluator ID should be UNIQUE!
 *  The numeric evaluators are the same for signed and unsigned types.
 *  IMPORTANT! When adding a new evaluator make sure you add it as the last one (just before the _COUNT entry) */
typedef int8_t dd_wls_NumericEvaluators_enum_t;
__flatbuffers_define_integer_type(dd_wls_NumericEvaluators, dd_wls_NumericEvaluators_enum_t, 8)
#define dd_wls_NumericEvaluators_JAVA_HEAP ((dd_wls_NumericEvaluators_enum_t)INT8_C(0))
#define dd_wls_NumericEvaluators_RUNTIME_VERSION_MAJOR ((dd_wls_NumericEvaluators_enum_t)INT8_C(1))
#define dd_wls_NumericEvaluators_RUNTIME_VERSION_MINOR ((dd_wls_NumericEvaluators_enum_t)INT8_C(2))
#define dd_wls_NumericEvaluators_RUNTIME_VERSION_PATCH ((dd_wls_NumericEvaluators_enum_t)INT8_C(3))
#define dd_wls_NumericEvaluators_OS_DISTRO_VERSION_MAJOR ((dd_wls_NumericEvaluators_enum_t)INT8_C(4))
#define dd_wls_NumericEvaluators_OS_DISTRO_VERSION_MINOR ((dd_wls_NumericEvaluators_enum_t)INT8_C(5))
#define dd_wls_NumericEvaluators_OS_DISTRO_VERSION_PATCH ((dd_wls_NumericEvaluators_enum_t)INT8_C(6))
#define dd_wls_NumericEvaluators_OS_KERNEL_VERSION_MAJOR ((dd_wls_NumericEvaluators_enum_t)INT8_C(7))
#define dd_wls_NumericEvaluators_OS_KERNEL_VERSION_MINOR ((dd_wls_NumericEvaluators_enum_t)INT8_C(8))
#define dd_wls_NumericEvaluators_OS_KERNEL_VERSION_PATCH ((dd_wls_NumericEvaluators_enum_t)INT8_C(9))
#define dd_wls_NumericEvaluators_LIBC_VERSION_MAJOR ((dd_wls_NumericEvaluators_enum_t)INT8_C(10))
#define dd_wls_NumericEvaluators_LIBC_VERSION_MINOR ((dd_wls_NumericEvaluators_enum_t)INT8_C(11))
#define dd_wls_NumericEvaluators_LIBC_VERSION_PATCH ((dd_wls_NumericEvaluators_enum_t)INT8_C(12))
#define dd_wls_NumericEvaluators_NUM_EVAL_COUNT ((dd_wls_NumericEvaluators_enum_t)INT8_C(13))

static inline const char *dd_wls_NumericEvaluators_name(dd_wls_NumericEvaluators_enum_t value)
{
    switch (value) {
    case dd_wls_NumericEvaluators_JAVA_HEAP: return "JAVA_HEAP";
    case dd_wls_NumericEvaluators_RUNTIME_VERSION_MAJOR: return "RUNTIME_VERSION_MAJOR";
    case dd_wls_NumericEvaluators_RUNTIME_VERSION_MINOR: return "RUNTIME_VERSION_MINOR";
    case dd_wls_NumericEvaluators_RUNTIME_VERSION_PATCH: return "RUNTIME_VERSION_PATCH";
    case dd_wls_NumericEvaluators_OS_DISTRO_VERSION_MAJOR: return "OS_DISTRO_VERSION_MAJOR";
    case dd_wls_NumericEvaluators_OS_DISTRO_VERSION_MINOR: return "OS_DISTRO_VERSION_MINOR";
    case dd_wls_NumericEvaluators_OS_DISTRO_VERSION_PATCH: return "OS_DISTRO_VERSION_PATCH";
    case dd_wls_NumericEvaluators_OS_KERNEL_VERSION_MAJOR: return "OS_KERNEL_VERSION_MAJOR";
    case dd_wls_NumericEvaluators_OS_KERNEL_VERSION_MINOR: return "OS_KERNEL_VERSION_MINOR";
    case dd_wls_NumericEvaluators_OS_KERNEL_VERSION_PATCH: return "OS_KERNEL_VERSION_PATCH";
    case dd_wls_NumericEvaluators_LIBC_VERSION_MAJOR: return "LIBC_VERSION_MAJOR";
    case dd_wls_NumericEvaluators_LIBC_VERSION_MINOR: return "LIBC_VERSION_MINOR";
    case dd_wls_NumericEvaluators_LIBC_VERSION_PATCH: return "LIBC_VERSION_PATCH";
    case dd_wls_NumericEvaluators_NUM_EVAL_COUNT: return "NUM_EVAL_COUNT";
    default: return "";
    }
}

static inline int dd_wls_NumericEvaluators_is_known_value(dd_wls_NumericEvaluators_enum_t value)
{
    switch (value) {
    case dd_wls_NumericEvaluators_JAVA_HEAP: return 1;
    case dd_wls_NumericEvaluators_RUNTIME_VERSION_MAJOR: return 1;
    case dd_wls_NumericEvaluators_RUNTIME_VERSION_MINOR: return 1;
    case dd_wls_NumericEvaluators_RUNTIME_VERSION_PATCH: return 1;
    case dd_wls_NumericEvaluators_OS_DISTRO_VERSION_MAJOR: return 1;
    case dd_wls_NumericEvaluators_OS_DISTRO_VERSION_MINOR: return 1;
    case dd_wls_NumericEvaluators_OS_DISTRO_VERSION_PATCH: return 1;
    case dd_wls_NumericEvaluators_OS_KERNEL_VERSION_MAJOR: return 1;
    case dd_wls_NumericEvaluators_OS_KERNEL_VERSION_MINOR: return 1;
    case dd_wls_NumericEvaluators_OS_KERNEL_VERSION_PATCH: return 1;
    case dd_wls_NumericEvaluators_LIBC_VERSION_MAJOR: return 1;
    case dd_wls_NumericEvaluators_LIBC_VERSION_MINOR: return 1;
    case dd_wls_NumericEvaluators_LIBC_VERSION_PATCH: return 1;
    case dd_wls_NumericEvaluators_NUM_EVAL_COUNT: return 1;
    default: return 0;
    }
}




#include "flatcc/flatcc_epilogue.h"
#endif /* EVALUATOR_IDS_READER_H */
