#ifndef ACTIONS_READER_H
#define ACTIONS_READER_H

/* Generated by flatcc 0.6.1 FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#ifndef ACTION_IDS_READER_H
#include "action_ids_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif


typedef const struct dd_wls_Action_table *dd_wls_Action_table_t;
typedef struct dd_wls_Action_table *dd_wls_Action_mutable_table_t;
typedef const flatbuffers_uoffset_t *dd_wls_Action_vec_t;
typedef flatbuffers_uoffset_t *dd_wls_Action_mutable_vec_t;
#ifndef dd_wls_Action_file_identifier
#define dd_wls_Action_file_identifier 0
#endif
/* deprecated, use dd_wls_Action_file_identifier */
#ifndef dd_wls_Action_identifier
#define dd_wls_Action_identifier 0
#endif
#define dd_wls_Action_type_hash ((flatbuffers_thash_t)0x177c72b5)
#define dd_wls_Action_type_identifier "\xb5\x72\x7c\x17"
#ifndef dd_wls_Action_file_extension
#define dd_wls_Action_file_extension "bin"
#endif

/**  Max values that can be propogated across languages. */
typedef int16_t dd_wls_ActionMax_enum_t;
__flatbuffers_define_integer_type(dd_wls_ActionMax, dd_wls_ActionMax_enum_t, 16)
/**  The maximum number of values an action can have.
 *  This is used to ensure that the action values do not exceed this limit. */
#define dd_wls_ActionMax_ACTION_VALUES_MAX ((dd_wls_ActionMax_enum_t)INT16_C(255))

static inline const char *dd_wls_ActionMax_name(dd_wls_ActionMax_enum_t value)
{
    switch (value) {
    case dd_wls_ActionMax_ACTION_VALUES_MAX: return "ACTION_VALUES_MAX";
    default: return "";
    }
}

static inline int dd_wls_ActionMax_is_known_value(dd_wls_ActionMax_enum_t value)
{
    switch (value) {
    case dd_wls_ActionMax_ACTION_VALUES_MAX: return 1;
    default: return 0;
    }
}



/**  Represents an action taken post evaluation */
struct dd_wls_Action_table { uint8_t unused__; };

static inline size_t dd_wls_Action_vec_len(dd_wls_Action_vec_t vec)
__flatbuffers_vec_len(vec)
static inline dd_wls_Action_table_t dd_wls_Action_vec_at(dd_wls_Action_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(dd_wls_Action_table_t, vec, i, 0)
__flatbuffers_table_as_root(dd_wls_Action)

/**  An enum representing the type of action to take. */
__flatbuffers_define_scalar_field(0, dd_wls_Action, action, dd_wls_ActionId, dd_wls_ActionId_enum_t, INT8_C(0))
/**  For debugging purposes a description string can be passed  */
__flatbuffers_define_string_field(1, dd_wls_Action, description, 0)
/**  Each action defines the values it accepts\supports. */
__flatbuffers_define_vector_field(2, dd_wls_Action, values, flatbuffers_string_vec_t, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* ACTIONS_READER_H */
