#ifndef NODES_BUILDER_H
#define NODES_BUILDER_H

/* Generated by flatcc 0.6.1 FlatBuffers schema compiler for C by dvide.com */

#ifndef NODES_READER_H
#include "nodes_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#ifndef EVALUATORS_BUILDER_H
#include "evaluators_builder.h"
#endif
#ifndef BOOLEAN_OPERATION_BUILDER_H
#include "boolean_operation_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

typedef flatbuffers_union_ref_t dd_wls_NodeType_union_ref_t;
typedef flatbuffers_union_vec_ref_t dd_wls_NodeType_union_vec_ref_t;
static dd_wls_NodeType_union_ref_t dd_wls_NodeType_clone(flatbuffers_builder_t *B, dd_wls_NodeType_union_t t);

static const flatbuffers_voffset_t __dd_wls_NodeTypeWrapper_required[] = { 0 };
typedef flatbuffers_ref_t dd_wls_NodeTypeWrapper_ref_t;
static dd_wls_NodeTypeWrapper_ref_t dd_wls_NodeTypeWrapper_clone(flatbuffers_builder_t *B, dd_wls_NodeTypeWrapper_table_t t);
__flatbuffers_build_table(flatbuffers_, dd_wls_NodeTypeWrapper, 2)

static const flatbuffers_voffset_t __dd_wls_CompositeNode_required[] = { 0 };
typedef flatbuffers_ref_t dd_wls_CompositeNode_ref_t;
static dd_wls_CompositeNode_ref_t dd_wls_CompositeNode_clone(flatbuffers_builder_t *B, dd_wls_CompositeNode_table_t t);
__flatbuffers_build_table(flatbuffers_, dd_wls_CompositeNode, 3)

static const flatbuffers_voffset_t __dd_wls_EvaluatorNode_required[] = { 0 };
typedef flatbuffers_ref_t dd_wls_EvaluatorNode_ref_t;
static dd_wls_EvaluatorNode_ref_t dd_wls_EvaluatorNode_clone(flatbuffers_builder_t *B, dd_wls_EvaluatorNode_table_t t);
__flatbuffers_build_table(flatbuffers_, dd_wls_EvaluatorNode, 3)

#define __dd_wls_NodeTypeWrapper_formal_args , dd_wls_NodeType_union_ref_t v1
#define __dd_wls_NodeTypeWrapper_call_args , v1
static inline dd_wls_NodeTypeWrapper_ref_t dd_wls_NodeTypeWrapper_create(flatbuffers_builder_t *B __dd_wls_NodeTypeWrapper_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, dd_wls_NodeTypeWrapper, dd_wls_NodeTypeWrapper_file_identifier, dd_wls_NodeTypeWrapper_type_identifier)

#define __dd_wls_CompositeNode_formal_args , flatbuffers_string_ref_t v0, dd_wls_BoolOperation_enum_t v1, dd_wls_NodeTypeWrapper_vec_ref_t v2
#define __dd_wls_CompositeNode_call_args , v0, v1, v2
static inline dd_wls_CompositeNode_ref_t dd_wls_CompositeNode_create(flatbuffers_builder_t *B __dd_wls_CompositeNode_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, dd_wls_CompositeNode, dd_wls_CompositeNode_file_identifier, dd_wls_CompositeNode_type_identifier)

#define __dd_wls_EvaluatorNode_formal_args , flatbuffers_string_ref_t v0, dd_wls_EvaluatorType_union_ref_t v2
#define __dd_wls_EvaluatorNode_call_args , v0, v2
static inline dd_wls_EvaluatorNode_ref_t dd_wls_EvaluatorNode_create(flatbuffers_builder_t *B __dd_wls_EvaluatorNode_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, dd_wls_EvaluatorNode, dd_wls_EvaluatorNode_file_identifier, dd_wls_EvaluatorNode_type_identifier)

static inline dd_wls_NodeType_union_ref_t dd_wls_NodeType_as_NONE(void)
{ dd_wls_NodeType_union_ref_t uref; uref.type = dd_wls_NodeType_NONE; uref.value = 0; return uref; }
static inline dd_wls_NodeType_union_ref_t dd_wls_NodeType_as_EvaluatorNode(dd_wls_EvaluatorNode_ref_t ref)
{ dd_wls_NodeType_union_ref_t uref; uref.type = dd_wls_NodeType_EvaluatorNode; uref.value = ref; return uref; }
static inline dd_wls_NodeType_union_ref_t dd_wls_NodeType_as_CompositeNode(dd_wls_CompositeNode_ref_t ref)
{ dd_wls_NodeType_union_ref_t uref; uref.type = dd_wls_NodeType_CompositeNode; uref.value = ref; return uref; }
__flatbuffers_build_union_vector(flatbuffers_, dd_wls_NodeType)

static dd_wls_NodeType_union_ref_t dd_wls_NodeType_clone(flatbuffers_builder_t *B, dd_wls_NodeType_union_t u)
{
    switch (u.type) {
    case 1: return dd_wls_NodeType_as_EvaluatorNode(dd_wls_EvaluatorNode_clone(B, (dd_wls_EvaluatorNode_table_t)u.value));
    case 2: return dd_wls_NodeType_as_CompositeNode(dd_wls_CompositeNode_clone(B, (dd_wls_CompositeNode_table_t)u.value));
    default: return dd_wls_NodeType_as_NONE();
    }
}

__flatbuffers_build_union_field(1, flatbuffers_, dd_wls_NodeTypeWrapper_node, dd_wls_NodeType, dd_wls_NodeTypeWrapper)
__flatbuffers_build_union_table_value_field(flatbuffers_, dd_wls_NodeTypeWrapper_node, dd_wls_NodeType, EvaluatorNode, dd_wls_EvaluatorNode)
__flatbuffers_build_union_table_value_field(flatbuffers_, dd_wls_NodeTypeWrapper_node, dd_wls_NodeType, CompositeNode, dd_wls_CompositeNode)

static inline dd_wls_NodeTypeWrapper_ref_t dd_wls_NodeTypeWrapper_create(flatbuffers_builder_t *B __dd_wls_NodeTypeWrapper_formal_args)
{
    if (dd_wls_NodeTypeWrapper_start(B)
        || dd_wls_NodeTypeWrapper_node_add_value(B, v1)
        || dd_wls_NodeTypeWrapper_node_add_type(B, v1.type)) {
        return 0;
    }
    return dd_wls_NodeTypeWrapper_end(B);
}

static dd_wls_NodeTypeWrapper_ref_t dd_wls_NodeTypeWrapper_clone(flatbuffers_builder_t *B, dd_wls_NodeTypeWrapper_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (dd_wls_NodeTypeWrapper_start(B)
        || dd_wls_NodeTypeWrapper_node_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, dd_wls_NodeTypeWrapper_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, dd_wls_CompositeNode_description, dd_wls_CompositeNode)
__flatbuffers_build_scalar_field(1, flatbuffers_, dd_wls_CompositeNode_op, dd_wls_BoolOperation, dd_wls_BoolOperation_enum_t, 1, 1, INT8_C(0), dd_wls_CompositeNode)
__flatbuffers_build_table_vector_field(2, flatbuffers_, dd_wls_CompositeNode_children, dd_wls_NodeTypeWrapper, dd_wls_CompositeNode)

static inline dd_wls_CompositeNode_ref_t dd_wls_CompositeNode_create(flatbuffers_builder_t *B __dd_wls_CompositeNode_formal_args)
{
    if (dd_wls_CompositeNode_start(B)
        || dd_wls_CompositeNode_description_add(B, v0)
        || dd_wls_CompositeNode_children_add(B, v2)
        || dd_wls_CompositeNode_op_add(B, v1)) {
        return 0;
    }
    return dd_wls_CompositeNode_end(B);
}

static dd_wls_CompositeNode_ref_t dd_wls_CompositeNode_clone(flatbuffers_builder_t *B, dd_wls_CompositeNode_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (dd_wls_CompositeNode_start(B)
        || dd_wls_CompositeNode_description_pick(B, t)
        || dd_wls_CompositeNode_children_pick(B, t)
        || dd_wls_CompositeNode_op_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, dd_wls_CompositeNode_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, dd_wls_EvaluatorNode_description, dd_wls_EvaluatorNode)
__flatbuffers_build_union_field(2, flatbuffers_, dd_wls_EvaluatorNode_eval, dd_wls_EvaluatorType, dd_wls_EvaluatorNode)
__flatbuffers_build_union_table_value_field(flatbuffers_, dd_wls_EvaluatorNode_eval, dd_wls_EvaluatorType, StrEvaluator, dd_wls_StrEvaluator)
__flatbuffers_build_union_table_value_field(flatbuffers_, dd_wls_EvaluatorNode_eval, dd_wls_EvaluatorType, NumEvaluator, dd_wls_NumEvaluator)
__flatbuffers_build_union_table_value_field(flatbuffers_, dd_wls_EvaluatorNode_eval, dd_wls_EvaluatorType, UNumEvaluator, dd_wls_UNumEvaluator)

static inline dd_wls_EvaluatorNode_ref_t dd_wls_EvaluatorNode_create(flatbuffers_builder_t *B __dd_wls_EvaluatorNode_formal_args)
{
    if (dd_wls_EvaluatorNode_start(B)
        || dd_wls_EvaluatorNode_description_add(B, v0)
        || dd_wls_EvaluatorNode_eval_add_value(B, v2)
        || dd_wls_EvaluatorNode_eval_add_type(B, v2.type)) {
        return 0;
    }
    return dd_wls_EvaluatorNode_end(B);
}

static dd_wls_EvaluatorNode_ref_t dd_wls_EvaluatorNode_clone(flatbuffers_builder_t *B, dd_wls_EvaluatorNode_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (dd_wls_EvaluatorNode_start(B)
        || dd_wls_EvaluatorNode_description_pick(B, t)
        || dd_wls_EvaluatorNode_eval_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, dd_wls_EvaluatorNode_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* NODES_BUILDER_H */
