#ifndef ACTIONS_BUILDER_H
#define ACTIONS_BUILDER_H

/* Generated by flatcc 0.6.1 FlatBuffers schema compiler for C by dvide.com */

#ifndef ACTIONS_READER_H
#include "actions_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#ifndef ACTION_IDS_BUILDER_H
#include "action_ids_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

#define __dd_wls_ActionMax_formal_args , dd_wls_ActionMax_enum_t v0
#define __dd_wls_ActionMax_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, dd_wls_ActionMax, dd_wls_ActionMax_enum_t)

static const flatbuffers_voffset_t __dd_wls_Action_required[] = { 0 };
typedef flatbuffers_ref_t dd_wls_Action_ref_t;
static dd_wls_Action_ref_t dd_wls_Action_clone(flatbuffers_builder_t *B, dd_wls_Action_table_t t);
__flatbuffers_build_table(flatbuffers_, dd_wls_Action, 3)

#define __dd_wls_Action_formal_args , dd_wls_ActionId_enum_t v0, flatbuffers_string_ref_t v1, flatbuffers_string_vec_ref_t v2
#define __dd_wls_Action_call_args , v0, v1, v2
static inline dd_wls_Action_ref_t dd_wls_Action_create(flatbuffers_builder_t *B __dd_wls_Action_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, dd_wls_Action, dd_wls_Action_file_identifier, dd_wls_Action_type_identifier)

__flatbuffers_build_scalar_field(0, flatbuffers_, dd_wls_Action_action, dd_wls_ActionId, dd_wls_ActionId_enum_t, 1, 1, INT8_C(0), dd_wls_Action)
__flatbuffers_build_string_field(1, flatbuffers_, dd_wls_Action_description, dd_wls_Action)
__flatbuffers_build_string_vector_field(2, flatbuffers_, dd_wls_Action_values, dd_wls_Action)

static inline dd_wls_Action_ref_t dd_wls_Action_create(flatbuffers_builder_t *B __dd_wls_Action_formal_args)
{
    if (dd_wls_Action_start(B)
        || dd_wls_Action_description_add(B, v1)
        || dd_wls_Action_values_add(B, v2)
        || dd_wls_Action_action_add(B, v0)) {
        return 0;
    }
    return dd_wls_Action_end(B);
}

static dd_wls_Action_ref_t dd_wls_Action_clone(flatbuffers_builder_t *B, dd_wls_Action_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (dd_wls_Action_start(B)
        || dd_wls_Action_description_pick(B, t)
        || dd_wls_Action_values_pick(B, t)
        || dd_wls_Action_action_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, dd_wls_Action_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* ACTIONS_BUILDER_H */
