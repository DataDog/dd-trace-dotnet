#ifndef EVALUATORS_VERIFIER_H
#define EVALUATORS_VERIFIER_H

/* Generated by flatcc 0.6.1 FlatBuffers schema compiler for C by dvide.com */

#ifndef EVALUATORS_READER_H
#include "evaluators_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#ifndef EVALUATOR_IDS_VERIFIER_H
#include "evaluator_ids_verifier.h"
#endif
#include "flatcc/flatcc_prologue.h"

static int dd_wls_StrEvaluator_verify_table(flatcc_table_verifier_descriptor_t *td);
static int dd_wls_UNumEvaluator_verify_table(flatcc_table_verifier_descriptor_t *td);
static int dd_wls_NumEvaluator_verify_table(flatcc_table_verifier_descriptor_t *td);

static int dd_wls_EvaluatorType_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, dd_wls_StrEvaluator_verify_table); /* StrEvaluator */
    case 2: return flatcc_verify_union_table(ud, dd_wls_NumEvaluator_verify_table); /* NumEvaluator */
    case 3: return flatcc_verify_union_table(ud, dd_wls_UNumEvaluator_verify_table); /* UNumEvaluator */
    default: return flatcc_verify_ok;
    }
}

static int dd_wls_StrEvaluator_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* id */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* cmp */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 2, 0) /* value */)) return ret;
    return flatcc_verify_ok;
}

static inline int dd_wls_StrEvaluator_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, dd_wls_StrEvaluator_identifier, &dd_wls_StrEvaluator_verify_table);
}

static inline int dd_wls_StrEvaluator_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, dd_wls_StrEvaluator_type_identifier, &dd_wls_StrEvaluator_verify_table);
}

static inline int dd_wls_StrEvaluator_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &dd_wls_StrEvaluator_verify_table);
}

static inline int dd_wls_StrEvaluator_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &dd_wls_StrEvaluator_verify_table);
}

static int dd_wls_UNumEvaluator_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* id */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* cmp */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 8, 8) /* value */)) return ret;
    return flatcc_verify_ok;
}

static inline int dd_wls_UNumEvaluator_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, dd_wls_UNumEvaluator_identifier, &dd_wls_UNumEvaluator_verify_table);
}

static inline int dd_wls_UNumEvaluator_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, dd_wls_UNumEvaluator_type_identifier, &dd_wls_UNumEvaluator_verify_table);
}

static inline int dd_wls_UNumEvaluator_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &dd_wls_UNumEvaluator_verify_table);
}

static inline int dd_wls_UNumEvaluator_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &dd_wls_UNumEvaluator_verify_table);
}

static int dd_wls_NumEvaluator_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* id */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* cmp */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 8, 8) /* value */)) return ret;
    return flatcc_verify_ok;
}

static inline int dd_wls_NumEvaluator_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, dd_wls_NumEvaluator_identifier, &dd_wls_NumEvaluator_verify_table);
}

static inline int dd_wls_NumEvaluator_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, dd_wls_NumEvaluator_type_identifier, &dd_wls_NumEvaluator_verify_table);
}

static inline int dd_wls_NumEvaluator_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &dd_wls_NumEvaluator_verify_table);
}

static inline int dd_wls_NumEvaluator_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &dd_wls_NumEvaluator_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* EVALUATORS_VERIFIER_H */
