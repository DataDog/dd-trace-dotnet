#ifndef NODES_VERIFIER_H
#define NODES_VERIFIER_H

/* Generated by flatcc 0.6.1 FlatBuffers schema compiler for C by dvide.com */

#ifndef NODES_READER_H
#include "nodes_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#ifndef EVALUATORS_VERIFIER_H
#include "evaluators_verifier.h"
#endif
#ifndef BOOLEAN_OPERATION_VERIFIER_H
#include "boolean_operation_verifier.h"
#endif
#include "flatcc/flatcc_prologue.h"

static int dd_wls_NodeTypeWrapper_verify_table(flatcc_table_verifier_descriptor_t *td);
static int dd_wls_CompositeNode_verify_table(flatcc_table_verifier_descriptor_t *td);
static int dd_wls_EvaluatorNode_verify_table(flatcc_table_verifier_descriptor_t *td);

static int dd_wls_NodeType_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, dd_wls_EvaluatorNode_verify_table); /* EvaluatorNode */
    case 2: return flatcc_verify_union_table(ud, dd_wls_CompositeNode_verify_table); /* CompositeNode */
    default: return flatcc_verify_ok;
    }
}

static int dd_wls_NodeTypeWrapper_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_union_field(td, 1, 0, &dd_wls_NodeType_union_verifier) /* node */)) return ret;
    return flatcc_verify_ok;
}

static inline int dd_wls_NodeTypeWrapper_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, dd_wls_NodeTypeWrapper_identifier, &dd_wls_NodeTypeWrapper_verify_table);
}

static inline int dd_wls_NodeTypeWrapper_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, dd_wls_NodeTypeWrapper_type_identifier, &dd_wls_NodeTypeWrapper_verify_table);
}

static inline int dd_wls_NodeTypeWrapper_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &dd_wls_NodeTypeWrapper_verify_table);
}

static inline int dd_wls_NodeTypeWrapper_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &dd_wls_NodeTypeWrapper_verify_table);
}

static int dd_wls_CompositeNode_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* description */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* op */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 2, 0, &dd_wls_NodeTypeWrapper_verify_table) /* children */)) return ret;
    return flatcc_verify_ok;
}

static inline int dd_wls_CompositeNode_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, dd_wls_CompositeNode_identifier, &dd_wls_CompositeNode_verify_table);
}

static inline int dd_wls_CompositeNode_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, dd_wls_CompositeNode_type_identifier, &dd_wls_CompositeNode_verify_table);
}

static inline int dd_wls_CompositeNode_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &dd_wls_CompositeNode_verify_table);
}

static inline int dd_wls_CompositeNode_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &dd_wls_CompositeNode_verify_table);
}

static int dd_wls_EvaluatorNode_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* description */)) return ret;
    if ((ret = flatcc_verify_union_field(td, 2, 0, &dd_wls_EvaluatorType_union_verifier) /* eval */)) return ret;
    return flatcc_verify_ok;
}

static inline int dd_wls_EvaluatorNode_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, dd_wls_EvaluatorNode_identifier, &dd_wls_EvaluatorNode_verify_table);
}

static inline int dd_wls_EvaluatorNode_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, dd_wls_EvaluatorNode_type_identifier, &dd_wls_EvaluatorNode_verify_table);
}

static inline int dd_wls_EvaluatorNode_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &dd_wls_EvaluatorNode_verify_table);
}

static inline int dd_wls_EvaluatorNode_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &dd_wls_EvaluatorNode_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* NODES_VERIFIER_H */
