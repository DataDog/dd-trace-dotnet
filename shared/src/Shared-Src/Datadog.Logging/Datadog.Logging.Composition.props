<Project>

  <PropertyGroup>
    <LogCompositionPropsIncluded>true</LogCompositionPropsIncluded>
  </PropertyGroup>
  
  <Import Project="Datadog.Logging.Emission.props" Condition="$(LogEmissionPropsIncluded) == ''" />
  
  <ItemGroup Condition="@(IncludedSharedLogCompositionCompileItem->Count()) == 0">
    <!-- Play a trick with the VS Solution Explorer:                                                                               -->
    <!-- We want all these files to be grouped under a key that is:                                                                -->
    <!-- the name of the immediate subfolder within the "Shared-Src" sources folder.                                               -->
    <!-- For that, we need to create an item group rooted in "Shared-Src" and then exclude all except these files.                 -->

    <!-- *** Cross-project-shared files needed by projects that want to do Log composition/redirection: ***                        -->
    <IncludedSharedLogCompositionCompileItem Include="$(MSBuildThisFileDirectory)..\..\Shared-Src\Datadog.Logging.Composition\internal\ILogSink.cs" />
    <IncludedSharedLogCompositionCompileItem Include="$(MSBuildThisFileDirectory)..\..\Shared-Src\Datadog.Logging.Composition\internal\SimpleConsoleLogSink.cs" />
    <IncludedSharedLogCompositionCompileItem Include="$(MSBuildThisFileDirectory)..\..\Shared-Src\Datadog.Logging.Composition\internal\AggregatedLogSink.cs" />
    <IncludedSharedLogCompositionCompileItem Include="$(MSBuildThisFileDirectory)..\..\Shared-Src\Datadog.Logging.Composition\internal\LogSourceNameCompositionLogSink.cs" />
    <IncludedSharedLogCompositionCompileItem Include="$(MSBuildThisFileDirectory)..\..\Shared-Src\Datadog.Logging.Composition\internal\LogEventHandlersToLogSinkAdapter.cs" />
    <IncludedSharedLogCompositionCompileItem Include="$(MSBuildThisFileDirectory)..\..\Shared-Src\Datadog.Logging.Composition\internal\FileLogSink.cs" />
    <IncludedSharedLogCompositionCompileItem Include="$(MSBuildThisFileDirectory)..\..\Shared-Src\Datadog.Logging.Composition\internal\LogGroupMutex.cs" />
    <IncludedSharedLogCompositionCompileItem Include="$(MSBuildThisFileDirectory)..\..\Shared-Src\Datadog.Logging.Composition\internal\DatadogEnvironmentFileLogSinkFactory.cs" />

    <ExcludedSharedLogCompositionCompileItems Include="$(MSBuildThisFileDirectory)..\..\**\*.cs" Exclude="@(IncludedSharedLogCompositionCompileItem)" />
    <Compile Include="$(MSBuildThisFileDirectory)..\..\**\*.cs" Exclude="@(ExcludedSharedLogCompositionCompileItems)" />
  </ItemGroup>

  <ItemGroup Condition="@(IncludedSharedLogCompositionNoActionItem->Count()) == 0">
    <!-- Same trick as for Shared Compile Items (see above), but for no-build-action inclusions.                                   -->

    <!-- *** Cross-project-shared files needed by projects that want to do Log composition/redirection: ***                        -->
    <IncludedSharedLogCompositionNoActionItem Include="$(MSBuildThisFileDirectory)..\..\Shared-Src\Datadog.Logging.Composition\internal\LogComposer.tt.cs" />

    <ExcludedSharedLogCompositionNoActionItems Include="$(MSBuildThisFileDirectory)..\..\**\*.tt.cs" Exclude="@(IncludedSharedLogCompositionNoActionItem)" />
    <None Include="$(MSBuildThisFileDirectory)..\..\**\*.tt.cs" Exclude="@(ExcludedSharedLogCompositionNoActionItems)" />
  </ItemGroup>

  <ItemGroup Condition="@(T4ServiceGuidIncluded->Count()) == 0">
    <!-- This "service" is required for T4-templating.                                                                             -->
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
    <T4ServiceGuidIncluded Include="true" />
  </ItemGroup>
  
</Project>