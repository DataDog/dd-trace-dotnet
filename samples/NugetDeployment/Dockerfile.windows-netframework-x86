FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build
WORKDIR /src

# For local development purposes only. Copying these files is not needed to consume official Datadog packages
COPY ["nuget.config", "./"]
COPY ["packages", "packages"]

# Copy csproj and restore as distinct layers
COPY ["HttpListenerExample.csproj", "./"]
RUN dotnet restore "HttpListenerExample.csproj" -r win-x86

# Copy everything else and build app
COPY . .
RUN dotnet build "HttpListenerExample.csproj" -c Release -o /app/build -f net48 -r win-x86

# Separate publish stage
FROM build AS publish
RUN dotnet publish "HttpListenerExample.csproj" -c Release -o /app/publish -f net48 -r win-x86

# Final stage/image
# Use Windows Server Core, since Nano Server does not run x86 applications. See https://github.com/dotnet/dotnet-docker/issues/2210#issuecomment-689746778
FROM mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-ltsc2019
WORKDIR /app
COPY --from=publish /app/publish .

# Set environment variables to enable automatic instrumentation
# App is being copied to /app, so Datadog assets are at /app/datadog
ENV COR_ENABLE_PROFILING=1
ENV COR_PROFILER={846F5F1C-F9AE-4B07-969E-05C26BC060D8}
ENV COR_PROFILER_PATH=/app/datadog/win-x86/Datadog.Trace.ClrProfiler.Native.dll
ENV DD_INTEGRATIONS=/app/datadog/integrations.json
ENV DD_DOTNET_TRACER_HOME=/app/datadog

ENTRYPOINT ["HttpListenerExample.exe"]