// <copyright company="Datadog">
// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2 License.
// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2017 Datadog, Inc.
// </copyright>
// <auto-generated/>

#nullable enable

// This file is auto-generated from supported-configurations.json and supported-configurations-docs.yaml
// Do not edit this file directly. The source generator will regenerate it on build.
// NOTE: If you remove keys/products from the JSON, run 'dotnet clean' to remove old generated files.

namespace Datadog.Trace.Configuration;

internal static partial class ConfigurationKeys2
{
    internal static class Exporter
    {
        /// <summary>
        /// Configuration key for the Agent host where the Tracer can send traces.
        /// Overridden by <see cref="Datadog.Trace.Configuration.ExporterSettings.AgentUri"/> if present.
        /// Default value is "localhost".
        /// </summary>
        /// <seealso cref="Datadog.Trace.Configuration.ExporterSettings.AgentUri"/>
        public const string AgentHost = "DD_AGENT_HOST";

        /// <summary>
        /// Used to force a specific port binding for the Trace Agent.
        /// Default value is 8126.
        /// </summary>
        /// <seealso cref="Datadog.Trace.Configuration.ExporterSettings.AgentUri"/>
        public const string ApmReceiverPort = "DD_APM_RECEIVER_PORT";

        /// <summary>
        /// Configuration key for the unix domain socket where the Tracer can send traces.
        /// Default value is <c>null</c>.
        /// </summary>
        /// <seealso cref="Datadog.Trace.Configuration.ExporterSettings.TracesUnixDomainSocketPath"/>
        public const string ApmReceiverSocket = "DD_APM_RECEIVER_SOCKET";

        /// <summary>
        /// Configuration key for the named pipe that DogStatsD binds to.
        /// Default value is <c>null</c>.
        /// </summary>
        /// <seealso cref="Datadog.Trace.Configuration.ExporterSettings.MetricsPipeName"/>
        public const string DogstatsdPipeName = "DD_DOGSTATSD_PIPE_NAME";

        /// <summary>
        /// Configuration key for the DogStatsd port where the Tracer can send metrics.
        /// Default value is 8125.
        /// </summary>
        /// <seealso cref="Datadog.Trace.Configuration.ExporterSettings.DogStatsdPort"/>
        public const string DogstatsdPort = "DD_DOGSTATSD_PORT";

        /// <summary>
        /// Configuration key for the unix domain socket that DogStatsD binds to.
        /// Default value is <c>null</c>.
        /// </summary>
        /// <seealso cref="Datadog.Trace.Configuration.ExporterSettings.MetricsUnixDomainSocketPath"/>
        public const string DogstatsdSocket = "DD_DOGSTATSD_SOCKET";

        /// <summary>
        /// Configuration key for the location where the Tracer can send DogStatsD metrics.
        /// Default value is "udp://127.0.0.1:8125".
        /// </summary>
        /// <seealso cref="Datadog.Trace.Configuration.ExporterSettings.AgentUri"/>
        public const string DogstatsdUrl = "DD_DOGSTATSD_URL";

        /// <summary>
        /// Configuration key for the Agent port where the Tracer can send traces.
        /// Default value is 8126.
        /// </summary>
        /// <seealso cref="Datadog.Trace.Configuration.ExporterSettings.AgentUri"/>
        public const string TraceAgentPort = "DD_TRACE_AGENT_PORT";

        /// <summary>
        /// Configuration key for the Agent URL where the Tracer can send traces.
        /// Default value is "http://localhost:8126".
        /// </summary>
        /// <seealso cref="Datadog.Trace.Configuration.ExporterSettings.AgentUri"/>
        public const string TraceAgentUrl = "DD_TRACE_AGENT_URL";

        /// <summary>
        /// Configuration key to enable sending partial traces to the agent
        /// </summary>
        public const string TracePartialFlushEnabled = "DD_TRACE_PARTIAL_FLUSH_ENABLED";

        /// <summary>
        /// Configuration key to set the minimum number of closed spans in a trace before it's partially flushed
        /// </summary>
        public const string TracePartialFlushMinSpans = "DD_TRACE_PARTIAL_FLUSH_MIN_SPANS";

        /// <summary>
        /// Configuration key for the named pipe where the Tracer can send traces.
        /// Default value is <c>null</c>.
        /// </summary>
        /// <seealso cref="Datadog.Trace.Configuration.ExporterSettings.TracesPipeName"/>
        public const string TracePipeName = "DD_TRACE_PIPE_NAME";

        /// <summary>
        /// Configuration key for setting the timeout in milliseconds for named pipes communication.
        /// Default value is <c>0</c>.
        /// </summary>
        /// <seealso cref="Datadog.Trace.Configuration.ExporterSettings.TracesPipeTimeoutMs"/>
        public const string TracePipeTimeoutMs = "DD_TRACE_PIPE_TIMEOUT_MS";
    }
}
