// <copyright company="Datadog">
// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2 License.
// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2017 Datadog, Inc.
// </copyright>
// <auto-generated/>

#nullable enable

// This file is auto-generated from supported-configurations.json and supported-configurations-docs.yaml
// Do not edit this file directly. The source generator will regenerate it on build.
// NOTE: If you remove keys/products from the JSON, run 'dotnet clean' and remove old generated files.
namespace Datadog.Trace.Configuration;

internal static partial class ConfigurationKeys
{
    internal static class CIVisibility
    {
        /// <summary>
        /// An internal key used to "tell" tracer settings that we're running in CI Visibility mode
        /// </summary>
        public const string IsRunningInCiVisMode = "_DD_INTERNAL_IS_RUNNING_IN_CIVISIBILITY";

        /// <summary>
        /// Configuration key for enabling or disabling Agentless in CI Visibility.
        /// Default value is false (disabled).
        /// </summary>
        public const string AgentlessEnabled = "DD_CIVISIBILITY_AGENTLESS_ENABLED";

        /// <summary>
        /// Configuration key for setting the agentless url endpoint
        /// </summary>
        public const string AgentlessUrl = "DD_CIVISIBILITY_AGENTLESS_URL";

        /// <summary>
        /// Configuration key for setting the code coverage collector path
        /// </summary>
        public const string CodeCoverageCollectorPath = "DD_CIVISIBILITY_CODE_COVERAGE_COLLECTORPATH";

        /// <summary>
        /// Configuration key for enabling or disabling jit optimizations in the Code Coverage
        /// </summary>
        public const string CodeCoverageEnableJitOptimizations = "DD_CIVISIBILITY_CODE_COVERAGE_ENABLE_JIT_OPTIMIZATIONS";

        /// <summary>
        /// Configuration key for enabling or disabling Code Coverage in CI Visibility.
        /// </summary>
        public const string CodeCoverage = "DD_CIVISIBILITY_CODE_COVERAGE_ENABLED";

        /// <summary>
        /// Configuration key for selecting the code coverage mode LineExecution or LineCallCount
        /// </summary>
        public const string CodeCoverageMode = "DD_CIVISIBILITY_CODE_COVERAGE_MODE";

        /// <summary>
        /// Configuration key for setting the code coverage jsons destination path.
        /// </summary>
        public const string CodeCoveragePath = "DD_CIVISIBILITY_CODE_COVERAGE_PATH";

        /// <summary>
        /// Configuration key for re-signing assemblies after the Code Coverage modification.
        /// </summary>
        public const string CodeCoverageSnkFile = "DD_CIVISIBILITY_CODE_COVERAGE_SNK_FILEPATH";

        /// <summary>
        /// Configuration key for a kill-switch that allows to explicitly disable dynamic instrumentation even if the remote setting is enabled.
        /// </summary>
        public const string DynamicInstrumentationEnabled = "DD_CIVISIBILITY_DI_ENABLED";

        /// <summary>
        /// Configuration key for enabling or disabling the early flake detection feature in CI Visibility
        /// </summary>
        public const string EarlyFlakeDetectionEnabled = "DD_CIVISIBILITY_EARLY_FLAKE_DETECTION_ENABLED";

        /// <summary>
        /// Configuration key for enabling or disabling CI Visibility.
        /// Default value is false (disabled).
        /// </summary>
        public const string Enabled = "DD_CIVISIBILITY_ENABLED";

        /// <summary>
        /// Configuration key for setting the external code coverage file path
        /// </summary>
        public const string ExternalCodeCoveragePath = "DD_CIVISIBILITY_EXTERNAL_CODE_COVERAGE_PATH";

        /// <summary>
        /// Configuration key for the maximum number of retry attempts for a single test case.
        /// </summary>
        public const string FlakyRetryCount = "DD_CIVISIBILITY_FLAKY_RETRY_COUNT";

        /// <summary>
        /// Configuration key for a kill-switch that allows to explicitly disable retries even if the remote setting is enabled.
        /// </summary>
        public const string FlakyRetryEnabled = "DD_CIVISIBILITY_FLAKY_RETRY_ENABLED";

        /// <summary>
        /// Configuration key for forcing Agent's EVP Proxy
        /// </summary>
        public const string ForceAgentsEvpProxy = "DD_CIVISIBILITY_FORCE_AGENT_EVP_PROXY";

        /// <summary>
        /// Configuration key for enabling or disabling Datadog.Trace GAC installation
        /// </summary>
        public const string InstallDatadogTraceInGac = "DD_CIVISIBILITY_GAC_INSTALL_ENABLED";

        /// <summary>
        /// Configuration key for enabling or disabling Uploading Git Metadata in CI Visibility
        /// Default Value is false (disabled)
        /// </summary>
        public const string GitUploadEnabled = "DD_CIVISIBILITY_GIT_UPLOAD_ENABLED";

        /// <summary>
        /// Configuration key for enabling Impacted Tests Detection.
        /// </summary>
        public const string ImpactedTestsDetectionEnabled = "DD_CIVISIBILITY_IMPACTED_TESTS_DETECTION_ENABLED";

        /// <summary>
        /// Configuration key for enabling or disabling Intelligent Test Runner in CI Visibility
        /// Default Value is false (disabled)
        /// </summary>
        public const string IntelligentTestRunnerEnabled = "DD_CIVISIBILITY_ITR_ENABLED";

        /// <summary>
        /// Configuration key for enabling or disabling the known tests feature in CI Visibility
        /// </summary>
        public const string KnownTestsEnabled = "DD_CIVISIBILITY_KNOWN_TESTS_ENABLED";

        /// <summary>
        /// Configuration key for enabling or disabling Logs direct submission.
        /// Default value is false (disabled).
        /// </summary>
        public const string Logs = "DD_CIVISIBILITY_LOGS_ENABLED";

        /// <summary>
        /// Configuration key for set the rum flushing wait in milliseconds
        /// </summary>
        public const string RumFlushWaitMillis = "DD_CIVISIBILITY_RUM_FLUSH_WAIT_MILLIS";

        /// <summary>
        /// Configuration key for enabling or disabling Intelligent Test Runner test skipping feature in CI Visibility
        /// </summary>
        public const string TestsSkippingEnabled = "DD_CIVISIBILITY_TESTSSKIPPING_ENABLED";

        /// <summary>
        /// Configuration key for the maximum number of retry attempts for the entire session.
        /// </summary>
        public const string TotalFlakyRetryCount = "DD_CIVISIBILITY_TOTAL_FLAKY_RETRY_COUNT";

        /// <summary>
        /// Configuration key for the number of retries to fix a flaky test.
        /// </summary>
        public const string TestManagementAttemptToFixRetries = "DD_TEST_MANAGEMENT_ATTEMPT_TO_FIX_RETRIES";

        /// <summary>
        /// Configuration key for enabling or disabling the Test Management feature.
        /// </summary>
        public const string TestManagementEnabled = "DD_TEST_MANAGEMENT_ENABLED";

        /// <summary>
        /// Configuration key for set the test session name
        /// </summary>
        public const string TestSessionName = "DD_TEST_SESSION_NAME";
    }
}
