// <copyright company="Datadog">
// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2 License.
// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2017 Datadog, Inc.
// </copyright>
// <auto-generated/>

#nullable enable

using System.Threading;

namespace Datadog.Trace.Telemetry;
internal partial class NullMetricsTelemetryCollector
{

    public void RecordDistributionCIVisibilityEndpointPayloadBytes(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityEndpoints tag, double value)
    {
    }

    public void RecordDistributionCIVisibilityEndpointPayloadRequestsMs(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityEndpoints tag, double value)
    {
    }

    public void RecordDistributionCIVisibilityEndpointPayloadEventsCount(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityEndpoints tag, double value)
    {
    }

    public void RecordDistributionCIVisibilityEndpointEventsSerializationMs(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityEndpoints tag, double value)
    {
    }

    public void RecordDistributionCIVisibilityGitCommandMs(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityCommands tag, double value)
    {
    }

    public void RecordDistributionCIVisibilityGitRequestsSearchCommitsMs(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityResponseCompressed tag, double value)
    {
    }

    public void RecordDistributionCIVisibilityGitRequestsObjectsPackMs(double value)
    {
    }

    public void RecordDistributionCIVisibilityGitRequestsObjectsPackBytes(double value)
    {
    }

    public void RecordDistributionCIVisibilityGitRequestsObjectsPackFiles(double value)
    {
    }

    public void RecordDistributionCIVisibilityGitRequestsSettingsMs(double value)
    {
    }

    public void RecordDistributionCIVisibilityITRSkippableTestsRequestMs(double value)
    {
    }

    public void RecordDistributionCIVisibilityITRSkippableTestsResponseBytes(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityResponseCompressed tag, double value)
    {
    }

    public void RecordDistributionCIVisibilityCodeCoverageFiles(double value)
    {
    }

    public void RecordDistributionCIVisibilityEarlyFlakeDetectionRequestMs(double value)
    {
    }

    public void RecordDistributionCIVisibilityEarlyFlakeDetectionResponseBytes(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityResponseCompressed tag, double value)
    {
    }

    public void RecordDistributionCIVisibilityEarlyFlakeDetectionResponseTests(double value)
    {
    }
}