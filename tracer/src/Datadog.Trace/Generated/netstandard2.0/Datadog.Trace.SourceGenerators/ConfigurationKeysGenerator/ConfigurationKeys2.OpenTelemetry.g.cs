// <copyright company="Datadog">
// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2 License.
// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2017 Datadog, Inc.
// </copyright>
// <auto-generated/>

#nullable enable

// This file is auto-generated from supported-configurations.json and supported-configurations-docs.yaml
// Do not edit this file directly. The source generator will regenerate it on build.
// NOTE: If you remove keys/products from the JSON, run 'dotnet clean' to remove old generated files.

namespace Datadog.Trace.Configuration;

internal static partial class ConfigurationKeys2
{
    internal static class OpenTelemetry
    {
        /// <summary>
        /// Configuration key to set the OTLP endpoint URL (fallback for metrics-specific endpoint).
        /// Used when <see cref="OtelExporterOtlpMetricsEndpoint"/> is not set.
        /// Expects values like `unix:///path/to/socket.sock` for UDS, `\\.\pipename\` for Windows Named Pipes.
        /// Default values: gRPC: http://localhost:4317, HTTP: http://localhost:4318
        /// </summary>
        public const string OtelExporterOtlpEndpoint = "OTEL_EXPORTER_OTLP_ENDPOINT";

        /// <summary>
        /// Configuration key to set custom headers for OTLP export (fallback for metrics-specific headers).
        /// Used when <see cref="OtelExporterOtlpMetricsHeaders"/> is not set.
        /// Format: api-key=key,other=value.
        /// </summary>
        public const string OtelExporterOtlpHeaders = "OTEL_EXPORTER_OTLP_HEADERS";

        /// <summary>
        /// Configuration key to set the OTLP endpoint URL for metrics.
        /// Takes precedence over <see cref="OtelExporterOtlpEndpoint"/>.
        /// This value typically ends with v1/metrics when using OTLP/HTTP.
        /// Expects values like `unix:///path/to/socket.sock` for UDS, `\\.\pipename\` for Windows Named Pipes.
        /// Default values: gRPC: http://localhost:4317, HTTP: http://localhost:4318/v1/metrics
        /// </summary>
        public const string OtelExporterOtlpMetricsEndpoint = "OTEL_EXPORTER_OTLP_METRICS_ENDPOINT";

        /// <summary>
        /// Configuration key to set custom headers for OTLP metrics export.
        /// Takes precedence over <see cref="OtelExporterOtlpHeaders"/>.
        /// Format: api-key=key,other=value.
        /// </summary>
        public const string OtelExporterOtlpMetricsHeaders = "OTEL_EXPORTER_OTLP_METRICS_HEADERS";

        /// <summary>
        /// Configuration key to set the OTLP protocol for metrics export.
        /// Takes precedence over <see cref="OtelExporterOtlpProtocol"/>.
        /// Valid values: grpc, http/protobuf, http/json, defaults to http/protobuf.
        /// </summary>
        public const string OtelExporterOtlpMetricsProtocol = "OTEL_EXPORTER_OTLP_METRICS_PROTOCOL";

        /// <summary>
        /// Configuration key to set the temporality preference for OTLP metrics export.
        /// Supported values: delta, cumulative, lowmemory.
        /// Default value is delta for Datadog.
        /// This deviates from OpenTelemetry specification default of cumulative.
        /// </summary>
        public const string OtelExporterOtlpMetricsTemporalityPreference = "OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE";

        /// <summary>
        /// Configuration key to set the request timeout for OTLP metrics export in milliseconds.
        /// Takes precedence over <see cref="OtelExporterOtlpTimeout"/>.
        /// Default value is 10000ms.
        /// </summary>
        public const string OtelExporterOtlpMetricsTimeout = "OTEL_EXPORTER_OTLP_METRICS_TIMEOUT";

        /// <summary>
        /// Configuration key to set the OTLP protocol (fallback for metrics-specific protocol).
        /// Used when <see cref="OtelExporterOtlpMetricsProtocol"/> is not set.
        /// Valid values: grpc, http/protobuf, http/json, defaults to http/protobuf.
        /// </summary>
        public const string OtelExporterOtlpProtocol = "OTEL_EXPORTER_OTLP_PROTOCOL";

        /// <summary>
        /// Configuration key to set the request timeout for OTLP export (fallback for metrics-specific timeout).
        /// Used when <see cref="OtelExporterOtlpMetricsTimeout"/> is not set.
        /// Default value is 10000ms.
        /// </summary>
        public const string OtelExporterOtlpTimeout = "OTEL_EXPORTER_OTLP_TIMEOUT";

        /// <summary>
        /// Configuration key to set the log level.
        /// </summary>
        public const string OtelLogLevel = "OTEL_LOG_LEVEL";

        /// <summary>
        /// Configuration key to set the export interval for metrics in milliseconds.
        /// Specifies the time interval between the start of two export attempts.
        /// Default value is 10000ms (10s) for Datadog.
        /// This deviates from OpenTelemetry specification default of 60000ms (60s).
        /// </summary>
        public const string OtelMetricExportInterval = "OTEL_METRIC_EXPORT_INTERVAL";

        /// <summary>
        /// Configuration key to set the export timeout for metrics in milliseconds.
        /// Specifies the maximum time allowed for collecting and exporting metrics.
        /// Default value is 7500ms (7.5s) for Datadog.
        /// This deviates from OpenTelemetry specification default of 30000ms (30s).
        /// </summary>
        public const string OtelMetricExportTimeout = "OTEL_METRIC_EXPORT_TIMEOUT";

        /// <summary>
        /// Configuration key to set the exporter for metrics.
        /// We only recognize the values of 'otlp' and 'none', a value of
        /// 'none' disables the emission of metrics which is the
        /// equivalent of setting <see cref="ConfigurationKeys.RuntimeMetricsEnabled"/>
        /// to false.
        /// </summary>
        public const string OtelMetricsExporter = "OTEL_METRICS_EXPORTER";

        /// <summary>
        /// Configuration key for a list of tracing propagators.
        /// Datadog only supports a subset of the OpenTelemetry propagators.
        /// Also, the 'b3' OpenTelemetry propagator is mapped to the
        /// 'b3 single header' Datadog propagator.
        /// </summary>
        public const string OtelPropagators = "OTEL_PROPAGATORS";

        /// <summary>
        /// Configuration key for a list of key-value pairs to be set as
        /// resource attributes. We currently map these to span tags.
        /// </summary>
        public const string OtelResourceAttributes = "OTEL_RESOURCE_ATTRIBUTES";

        /// <summary>
        /// Configuration key for disabling the OpenTelemetry API's.
        /// </summary>
        public const string OtelSdkDisabled = "OTEL_SDK_DISABLED";

        /// <summary>
        /// Configuration key to set the application's default service name.
        /// </summary>
        public const string OtelServiceName = "OTEL_SERVICE_NAME";

        /// <summary>
        /// Configuration key to set the exporter for traces.
        /// We only recognize the value 'none', which is the
        /// equivalent of setting <see cref="ConfigurationKeys.TraceEnabled"/>
        /// to false.
        /// </summary>
        public const string OtelTracesExporter = "OTEL_TRACES_EXPORTER";

        /// <summary>
        /// Configuration key to set the sampler for traces.
        /// to false.
        /// </summary>
        public const string OtelTracesSampler = "OTEL_TRACES_SAMPLER";

        /// <summary>
        /// Configuration key to set an additional argument for the
        /// traces sampler.
        /// to false.
        /// </summary>
        public const string OtelTracesSamplerArg = "OTEL_TRACES_SAMPLER_ARG";
    }
}
