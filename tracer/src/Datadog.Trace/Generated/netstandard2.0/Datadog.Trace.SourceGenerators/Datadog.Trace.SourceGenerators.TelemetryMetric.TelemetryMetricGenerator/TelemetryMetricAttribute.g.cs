// <auto-generated/>
#nullable enable

namespace Datadog.Trace.SourceGenerators;

/// <summary>/
/// Used to designate a property as corresponding to the provided
/// <see cref="MetricType"/>. Should only be used in ITags classes.
/// Used for source generation.
/// </summary>
[System.AttributeUsage(System.AttributeTargets.Enum, AllowMultiple = false)]
internal sealed class TelemetryMetricTypeAttribute : System.Attribute
{
    /// <summary>
    /// Initializes a new instance of the <see cref="TelemetryMetricTypeAttribute"/> class.
    /// </summary>
    /// <param name="metricType">The type of the metric, e.g. Count, Gauge</param>
    public TelemetryMetricTypeAttribute(string metricType) =>
        this.MetricType = metricType;

    /// <summary>
    /// Gets the type of the metric the enum corresponds to
    /// </summary>
    public string MetricType { get; }
}

/// <summary>
/// Used to describe a specific metric defined as a field
/// inside an enum decorated with <see cref="TelemetryMetricTypeAttribute"/>
/// </summary>
[System.AttributeUsage(System.AttributeTargets.Field, AllowMultiple = false)]
internal class TelemetryMetricAttribute : System.Attribute
{
    /// <summary>
    /// Initializes a new instance of the <see cref="TelemetryMetricAttribute"/> class.
    /// </summary>
    /// <param name="metricName">The name of the metric, as reported to Datadog</param>
    /// <param name="tagCount">The number of tags the metric requires</param>
    /// <param name="isCommon">Is the metric a "common" metric, shared across languages?</param>
    /// <param name="nameSpace">The namespace of the metric, if not the default (Tracer)</param>
    public TelemetryMetricAttribute(string metricName, int tagCount, bool isCommon, string nameSpace)
    {
        MetricName = metricName;
        TagCount = tagCount;
        IsCommon = isCommon;
        NameSpace = nameSpace;
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="TelemetryMetricAttribute"/> class.
    /// Uses the default namespace
    /// </summary>
    /// <param name="metricName">The name of the metric, as reported to Datadog</param>
    /// <param name="tagCount">The number of tags the metric requires</param>
    /// <param name="isCommon">Is the metric a "common" metric, shared across languages?</param>
    public TelemetryMetricAttribute(string metricName, int tagCount, bool isCommon)
        : this(metricName, tagCount, isCommon, null!)
    {
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="TelemetryMetricAttribute"/> class.
    /// Uses the default namespace and sets <see cref="IsCommon"/> to <c>true</c>
    /// </summary>
    /// <param name="metricName">The name of the metric, as reported to Datadog</param>
    /// <param name="tagCount">The number of tags the metric requires</param>
    public TelemetryMetricAttribute(string metricName, int tagCount)
        : this(metricName, tagCount, isCommon: true, null!)
    {
    }

    /// <summary>
    /// Gets the name of the metric, as reported to Datadog
    /// </summary>
    public string MetricName { get; }

    /// <summary>
    /// Gets the number of tags the metric requires
    /// </summary>
    public int TagCount { get; }

    /// <summary>
    /// Gets a value indicating whether the metric a "common" metric, shared across languages?
    /// </summary>
    public bool IsCommon { get; }

    /// <summary>
    /// Gets the namespace of the metric, if not the default (Tracer)
    /// </summary>
    public string? NameSpace { get; }

}