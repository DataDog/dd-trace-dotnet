// <copyright company="Datadog">
// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2 License.
// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2017 Datadog, Inc.
// </copyright>
// <auto-generated/>

#nullable enable

namespace Datadog.Trace.Telemetry.Metrics;

/// <summary>
/// Extension methods for <see cref="Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType" />
/// </summary>
internal static partial class IastVulnerabilityTypeExtensions
{
    /// <summary>
    /// The number of members in the enum.
    /// This is a non-distinct count of defined names.
    /// </summary>
    public const int Length = 27;

    /// <summary>
    /// Returns the string representation of the <see cref="Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType"/> value.
    /// If the attribute is decorated with a <c>[Description]</c> attribute, then
    /// uses the provided value. Otherwise uses the name of the member, equivalent to
    /// calling <c>ToString()</c> on <paramref name="value"/>.
    /// </summary>
    /// <param name="value">The value to retrieve the string value for</param>
    /// <returns>The string representation of the value</returns>
    public static string ToStringFast(this Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType value)
        => value switch
        {
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.None => "vulnerability_type:none",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.WeakCipher => "vulnerability_type:weak_cipher",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.WeakHash => "vulnerability_type:weak_hash",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.SqlInjection => "vulnerability_type:sql_injection",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.CommandInjection => "vulnerability_type:command_injection",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.PathTraversal => "vulnerability_type:path_traversal",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.LdapInjection => "vulnerability_type:ldap_injection",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.Ssrf => "vulnerability_type:ssrf",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.UnvalidatedRedirect => "vulnerability_type:unvalidated_redirect",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.InsecureCookie => "vulnerability_type:insecure_cookie",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.NoHttpOnlyCookie => "vulnerability_type:no_httponly_cookie",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.NoSameSiteCookie => "vulnerability_type:no_samesite_cookie",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.WeakRandomness => "vulnerability_type:weak_randomness",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.HardcodedSecret => "vulnerability_type:hardcoded_secret",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.XContentTypeHeaderMissing => "vulnerability_type:xcontenttype_header_missing",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.TrustBoundaryViolation => "vulnerability_type:trust_boundary_violation",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.HstsHeaderMissing => "vulnerability_type:hsts_header_missing",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.HeaderInjection => "vulnerability_type:header_injection",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.StackTraceLeak => "vulnerability_type:stacktrace_leak",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.NoSqlMongoDbInjection => "vulnerability_type:nosql_mongodb_injection",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.XPathInjection => "vulnerability_type:xpath_injection",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.ReflectionInjection => "vulnerability_type:reflection_injection",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.InsecureAuthProtocol => "vulnerability_type:insecure_auth_protocol",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.Xss => "vulnerability_type:xss",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.DirectoryListingLeak => "vulnerability_type:directory_listing_leak",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.SessionTimeout => "vulnerability_type:session_timeout",
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.EmailHtmlInjection => "vulnerability_type:email_html_injection",
            _ => value.ToString(),
        };

    /// <summary>
    /// Retrieves an array of the values of the members defined in
    /// <see cref="Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType" />.
    /// Note that this returns a new array with every invocation, so
    /// should be cached if appropriate.
    /// </summary>
    /// <returns>An array of the values defined in <see cref="Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType" /></returns>
    public static Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType[] GetValues()
        => new []
        {
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.None,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.WeakCipher,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.WeakHash,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.SqlInjection,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.CommandInjection,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.PathTraversal,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.LdapInjection,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.Ssrf,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.UnvalidatedRedirect,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.InsecureCookie,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.NoHttpOnlyCookie,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.NoSameSiteCookie,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.WeakRandomness,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.HardcodedSecret,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.XContentTypeHeaderMissing,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.TrustBoundaryViolation,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.HstsHeaderMissing,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.HeaderInjection,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.StackTraceLeak,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.NoSqlMongoDbInjection,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.XPathInjection,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.ReflectionInjection,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.InsecureAuthProtocol,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.Xss,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.DirectoryListingLeak,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.SessionTimeout,
            Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.EmailHtmlInjection,
        };

    /// <summary>
    /// Retrieves an array of the names of the members defined in
    /// <see cref="Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType" />.
    /// Note that this returns a new array with every invocation, so
    /// should be cached if appropriate.
    /// Ignores <c>[Description]</c> definitions.
    /// </summary>
    /// <returns>An array of the names of the members defined in <see cref="Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType" /></returns>
    public static string[] GetNames()
        => new []
        {
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.None),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.WeakCipher),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.WeakHash),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.SqlInjection),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.CommandInjection),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.PathTraversal),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.LdapInjection),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.Ssrf),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.UnvalidatedRedirect),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.InsecureCookie),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.NoHttpOnlyCookie),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.NoSameSiteCookie),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.WeakRandomness),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.HardcodedSecret),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.XContentTypeHeaderMissing),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.TrustBoundaryViolation),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.HstsHeaderMissing),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.HeaderInjection),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.StackTraceLeak),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.NoSqlMongoDbInjection),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.XPathInjection),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.ReflectionInjection),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.InsecureAuthProtocol),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.Xss),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.DirectoryListingLeak),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.SessionTimeout),
            nameof(Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType.EmailHtmlInjection),
        };

    /// <summary>
    /// Retrieves an array of the names of the members defined in
    /// <see cref="Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType" />.
    /// Note that this returns a new array with every invocation, so
    /// should be cached if appropriate.
    /// Uses <c>[Description]</c> definition if available, otherwise uses the name of the property
    /// </summary>
    /// <returns>An array of the names of the members defined in <see cref="Datadog.Trace.Telemetry.Metrics.MetricTags.IastVulnerabilityType" /></returns>
    public static string[] GetDescriptions()
        => new []
        {
            "vulnerability_type:none",
            "vulnerability_type:weak_cipher",
            "vulnerability_type:weak_hash",
            "vulnerability_type:sql_injection",
            "vulnerability_type:command_injection",
            "vulnerability_type:path_traversal",
            "vulnerability_type:ldap_injection",
            "vulnerability_type:ssrf",
            "vulnerability_type:unvalidated_redirect",
            "vulnerability_type:insecure_cookie",
            "vulnerability_type:no_httponly_cookie",
            "vulnerability_type:no_samesite_cookie",
            "vulnerability_type:weak_randomness",
            "vulnerability_type:hardcoded_secret",
            "vulnerability_type:xcontenttype_header_missing",
            "vulnerability_type:trust_boundary_violation",
            "vulnerability_type:hsts_header_missing",
            "vulnerability_type:header_injection",
            "vulnerability_type:stacktrace_leak",
            "vulnerability_type:nosql_mongodb_injection",
            "vulnerability_type:xpath_injection",
            "vulnerability_type:reflection_injection",
            "vulnerability_type:insecure_auth_protocol",
            "vulnerability_type:xss",
            "vulnerability_type:directory_listing_leak",
            "vulnerability_type:session_timeout",
            "vulnerability_type:email_html_injection",
        };
}