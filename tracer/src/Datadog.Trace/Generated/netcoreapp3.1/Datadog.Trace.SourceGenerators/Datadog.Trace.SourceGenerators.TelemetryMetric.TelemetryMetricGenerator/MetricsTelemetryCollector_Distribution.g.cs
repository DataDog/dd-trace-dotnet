// <auto-generated/>
#nullable enable

using System.Threading;

namespace Datadog.Trace.Telemetry;
internal partial class MetricsTelemetryCollector
{
    private const int DistributionLength = 0;

    /// <summary>
    /// Creates the buffer for the <see cref="Datadog.Trace.Telemetry.Metrics.Distribution" /> values.
    /// </summary>
    private static AggregatedDistribution[] GetDistributionBuffer()
        => new AggregatedDistribution[]
        {
        };

    /// <summary>
    /// Gets an array of metric counts, indexed by integer value of the <see cref="Datadog.Trace.Telemetry.Metrics.Distribution" />.
    /// Each value represents the number of unique entries in the buffer returned by <see cref="GetDistributionBuffer()" />
    /// It is equal to the cardinality of the tag combinations (or 1 if there are no tags)
    /// </summary>
    private static int[] DistributionEntryCounts { get; }
        = new int[]{ };
}