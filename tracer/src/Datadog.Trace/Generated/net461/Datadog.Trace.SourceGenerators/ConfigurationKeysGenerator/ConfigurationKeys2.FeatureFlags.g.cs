// <copyright company="Datadog">
// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2 License.
// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2017 Datadog, Inc.
// </copyright>
// <auto-generated/>

#nullable enable

// This file is auto-generated from supported-configurations.json and supported-configurations-docs.yaml
// Do not edit this file directly. The source generator will regenerate it on build.
// NOTE: If you remove keys/products from the JSON, run 'dotnet clean' and remove old generated files.
namespace Datadog.Trace.Configuration;

internal static partial class ConfigurationKeys2
{
    internal static class FeatureFlags
    {
        /// <summary>
        /// Enables support for collecting and exporting logs generated by the the OpenTelemetry Logs API.
        /// This feature is available starting with .NET 3.1 when using Microsoft.Extensions.Logging
        /// </summary>
        public const string OpenTelemetryLogsEnabled = "DD_LOGS_OTEL_ENABLED";

        /// <summary>
        /// Enables experimental support for exporting OTLP metrics generated by the OpenTelemetry Metrics API.
        /// This feature is only available starting with .NET 6.0, as it relies on the BCL class MeterListener
        /// which is shipped in-box starting with .NET 6.
        /// </summary>
        public const string OpenTelemetryMetricsEnabled = "DD_METRICS_OTEL_ENABLED";

        /// <summary>
        /// List of meters to add to the metrics exporter for the experimental OpenTelemetry Metrics API support.
        /// </summary>
        public const string OpenTelemetryMeterNames = "DD_METRICS_OTEL_METER_NAMES";

        /// <summary>
        /// Enables generating 128-bit trace ids instead of 64-bit trace ids.
        /// Note that a 128-bit trace id may be received from an upstream service or from
        /// an Activity even if we are not generating them ourselves.
        /// Default value is <c>true</c> (enabled).
        /// </summary>
        public const string TraceId128BitGenerationEnabled = "DD_TRACE_128_BIT_TRACEID_GENERATION_ENABLED";

        /// <summary>
        /// Enables injecting 128-bit trace ids into logs as a hexadecimal string.
        /// If disabled, 128-bit trace ids will be truncated to the lower 64 bits,
        /// and injected as decimal strings. 64-bit trace ids are
        /// always injected as decimal strings, regardless of this setting.
        /// If unset, this configuration will take the value of the <see cref="ConfigurationKeys.FeatureFlags.TraceId128BitGenerationEnabled"/> configuration,
        /// which is <c>true</c> by default.
        /// Note: This configuration can be set independently of the <see cref="ConfigurationKeys.FeatureFlags.TraceId128BitGenerationEnabled"/> configuration,
        /// so it's possible to inject 128-bit trace ids into logs even if the application is only generating 64-bit trace ids, since distributed traces from upstream
        /// services may contain 128-bit trace ids.
        /// </summary>
        public const string TraceId128BitLoggingEnabled = "DD_TRACE_128_BIT_TRACEID_LOGGING_ENABLED";

        public const string BypassHttpRequestUrlCachingEnabled = "DD_TRACE_BYPASS_HTTP_REQUEST_URL_CACHING_ENABLED";

        public const string CommandsCollectionEnabled = "DD_TRACE_COMMANDS_COLLECTION_ENABLED";

        /// <summary>
        /// Configuration key to enable or disable the updated WCF instrumentation that delays execution
        /// until later in the WCF pipeline when the WCF server exception handling is established.
        /// </summary>
        /// <seealso cref="Datadog.Trace.Configuration.TracerSettings.DelayWcfInstrumentationEnabled"/>
        public const string DelayWcfInstrumentationEnabled = "DD_TRACE_DELAY_WCF_INSTRUMENTATION_ENABLED";

        /// <summary>
        /// Enables a fix for header tags normalization.
        /// We used to normalize tag names even if they were specified in user configuration, but we should not.
        /// Default value is <c>true</c>.
        /// </summary>
        public const string HeaderTagsNormalizationFixEnabled = "DD_TRACE_HEADER_TAG_NORMALIZATION_FIX_ENABLED";

        public const string InferredProxySpansEnabled = "DD_TRACE_INFERRED_PROXY_SERVICES_ENABLED";

        /// <summary>
        /// Configuration key to enable or disable the injection of the Datadog trace context into stored procedures.
        /// Default value is <c>false</c> (enabled).
        /// When enabled, Datadog trace context will be injected into individual stored procedure calls when the following requirements are met:
        /// <ul>
        ///   <li>The database is Microsoft SQL Server and <see cref="TracerSettings.DbmPropagationMode"/> is set to 
        /// <c>service</c> or 
        /// <c>full</c>.</li>
        ///   <li>The stored procedure call does not have <c>Output</c>, <c>InputOutput</c>, or <c>Return</c> ADO.NET command parameters.</li>
        /// </ul>
        /// </summary>
        public const string InjectContextIntoStoredProceduresEnabled = "DD_TRACE_INJECT_CONTEXT_INTO_STORED_PROCEDURES_ENABLED";

        /// <summary>
        /// Enables beta support for instrumentation via the System.Diagnostics API and the OpenTelemetry SDK.
        /// </summary>
        public const string OpenTelemetryEnabled = "DD_TRACE_OTEL_ENABLED";

        /// <summary>
        /// Feature Flag: enables updated resource names on `aspnet.request`, `aspnet-mvc.request`,
        /// `aspnet-webapi.request`, and `aspnet_core.request` spans. Enables `aspnet_core_mvc.request` spans and
        /// additional features on `aspnet_core.request` spans.
        /// </summary>
        /// <seealso cref="Datadog.Trace.Configuration.TracerSettings.RouteTemplateResourceNamesEnabled"/>
        public const string RouteTemplateResourceNamesEnabled = "DD_TRACE_ROUTE_TEMPLATE_RESOURCE_NAMES_ENABLED";

        /// <summary>
        /// Feature flag to enable obfuscating the <c>LocalPath</c> of a WCF request that goes
        /// into the <c>resourceName</c> of a span.
        /// <para>Note: that this only applies when the WCF action is an empty string.</para>
        /// </summary>
        /// <seealso cref="Datadog.Trace.Configuration.TracerSettings.WcfObfuscationEnabled"/>
        public const string WcfObfuscationEnabled = "DD_TRACE_WCF_RESOURCE_OBFUSCATION_ENABLED";

        /// <summary>
        /// Configuration key to enable or disable improved template-based resource names
        /// when using WCF Web HTTP. Requires <see cref="TracerSettings.DelayWcfInstrumentationEnabled"/> be set
        /// to true. Enabled by default
        /// </summary>
        /// <seealso cref="Datadog.Trace.Configuration.TracerSettings.WcfWebHttpResourceNamesEnabled"/>
        public const string WcfWebHttpResourceNamesEnabled = "DD_TRACE_WCF_WEB_HTTP_RESOURCE_NAMES_ENABLED";
    }
}
