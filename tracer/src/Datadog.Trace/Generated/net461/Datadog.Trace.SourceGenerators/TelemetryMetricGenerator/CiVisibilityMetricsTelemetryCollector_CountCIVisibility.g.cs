// <copyright company="Datadog">
// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2 License.
// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2017 Datadog, Inc.
// </copyright>
// <auto-generated/>

#nullable enable

using System.Threading;

namespace Datadog.Trace.Telemetry;
internal partial class CiVisibilityMetricsTelemetryCollector
{
    private const int CountCIVisibilityLength = 3187;

    /// <summary>
    /// Creates the buffer for the <see cref="Datadog.Trace.Telemetry.Metrics.CountCIVisibility" /> values.
    /// </summary>
    private static AggregatedMetric[] GetCountCIVisibilityBuffer()
        => new AggregatedMetric[]
        {
            // event_created, index = 0
            new(new[] { "test_framework:xunit", "event_type:test" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark" }),
            new(new[] { "test_framework:xunit", "event_type:suite" }),
            new(new[] { "test_framework:xunit", "event_type:module" }),
            new(new[] { "test_framework:xunit", "event_type:session" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner" }),
            new(new[] { "test_framework:nunit", "event_type:test" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark" }),
            new(new[] { "test_framework:nunit", "event_type:suite" }),
            new(new[] { "test_framework:nunit", "event_type:module" }),
            new(new[] { "test_framework:nunit", "event_type:session" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner" }),
            new(new[] { "test_framework:mstest", "event_type:test" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark" }),
            new(new[] { "test_framework:mstest", "event_type:suite" }),
            new(new[] { "test_framework:mstest", "event_type:module" }),
            new(new[] { "test_framework:mstest", "event_type:session" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner" }),
            new(new[] { "test_framework:unknown", "event_type:test" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark" }),
            new(new[] { "test_framework:unknown", "event_type:suite" }),
            new(new[] { "test_framework:unknown", "event_type:module" }),
            new(new[] { "test_framework:unknown", "event_type:session" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner" }),
            // event_finished, index = 40
            new(new[] { "test_framework:xunit", "event_type:test" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_benchmark", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:suite", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:module" }),
            new(new[] { "test_framework:xunit", "event_type:module", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:module", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:xunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_benchmark", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:suite", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:module" }),
            new(new[] { "test_framework:nunit", "event_type:module", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:module", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:nunit", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_benchmark", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:suite", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:module" }),
            new(new[] { "test_framework:mstest", "event_type:module", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:module", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:mstest", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_benchmark", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:suite", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:module", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:benchmarkdotnet", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_benchmark", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:suite", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:module" }),
            new(new[] { "test_framework:unknown", "event_type:module", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:module", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "is_unsupported_ci", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:session", "has_codeowner", "agentless_log_submission_enabled", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:efd", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_quarantined:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true" }),
            new(new[] { "test_framework:unknown", "event_type:test", "is_new:true", "early_flake_detection_abort_reason:slow", "browser_driver:selenium", "is_rum:true", "retry_reason:atr", "is_disabled:true", "is_attempt_to_fix:true", "has_failed_all_retries:true" }),
            // test_session, index = 2740
            new(new[] { "provider:unsupported" }),
            new(new[] { "provider:unsupported", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:unsupported", "auto_injected:true" }),
            new(new[] { "provider:unsupported", "auto_injected:true", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:appveyor" }),
            new(new[] { "provider:appveyor", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:appveyor", "auto_injected:true" }),
            new(new[] { "provider:appveyor", "auto_injected:true", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:azp" }),
            new(new[] { "provider:azp", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:azp", "auto_injected:true" }),
            new(new[] { "provider:azp", "auto_injected:true", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:bitbucket" }),
            new(new[] { "provider:bitbucket", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:bitbucket", "auto_injected:true" }),
            new(new[] { "provider:bitbucket", "auto_injected:true", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:bitrise" }),
            new(new[] { "provider:bitrise", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:bitrise", "auto_injected:true" }),
            new(new[] { "provider:bitrise", "auto_injected:true", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:buildkite" }),
            new(new[] { "provider:buildkite", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:buildkite", "auto_injected:true" }),
            new(new[] { "provider:buildkite", "auto_injected:true", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:circleci" }),
            new(new[] { "provider:circleci", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:circleci", "auto_injected:true" }),
            new(new[] { "provider:circleci", "auto_injected:true", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:codefresh" }),
            new(new[] { "provider:codefresh", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:codefresh", "auto_injected:true" }),
            new(new[] { "provider:codefresh", "auto_injected:true", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:githubactions" }),
            new(new[] { "provider:githubactions", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:githubactions", "auto_injected:true" }),
            new(new[] { "provider:githubactions", "auto_injected:true", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:gitlab" }),
            new(new[] { "provider:gitlab", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:gitlab", "auto_injected:true" }),
            new(new[] { "provider:gitlab", "auto_injected:true", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:jenkins" }),
            new(new[] { "provider:jenkins", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:jenkins", "auto_injected:true" }),
            new(new[] { "provider:jenkins", "auto_injected:true", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:teamcity" }),
            new(new[] { "provider:teamcity", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:teamcity", "auto_injected:true" }),
            new(new[] { "provider:teamcity", "auto_injected:true", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:travisci" }),
            new(new[] { "provider:travisci", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:travisci", "auto_injected:true" }),
            new(new[] { "provider:travisci", "auto_injected:true", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:buddyci" }),
            new(new[] { "provider:buddyci", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:buddyci", "auto_injected:true" }),
            new(new[] { "provider:buddyci", "auto_injected:true", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:aws" }),
            new(new[] { "provider:aws", "agentless_log_submission_enabled:true" }),
            new(new[] { "provider:aws", "auto_injected:true" }),
            new(new[] { "provider:aws", "auto_injected:true", "agentless_log_submission_enabled:true" }),
            // code_coverage_started, index = 2800
            new(new[] { "test_framework:xunit", "library:custom" }),
            new(new[] { "test_framework:xunit", "library:unknown" }),
            new(new[] { "test_framework:nunit", "library:custom" }),
            new(new[] { "test_framework:nunit", "library:unknown" }),
            new(new[] { "test_framework:mstest", "library:custom" }),
            new(new[] { "test_framework:mstest", "library:unknown" }),
            new(new[] { "test_framework:benchmarkdotnet", "library:custom" }),
            new(new[] { "test_framework:benchmarkdotnet", "library:unknown" }),
            new(new[] { "test_framework:unknown", "library:custom" }),
            new(new[] { "test_framework:unknown", "library:unknown" }),
            // code_coverage_finished, index = 2810
            new(new[] { "test_framework:xunit", "library:custom" }),
            new(new[] { "test_framework:xunit", "library:unknown" }),
            new(new[] { "test_framework:nunit", "library:custom" }),
            new(new[] { "test_framework:nunit", "library:unknown" }),
            new(new[] { "test_framework:mstest", "library:custom" }),
            new(new[] { "test_framework:mstest", "library:unknown" }),
            new(new[] { "test_framework:benchmarkdotnet", "library:custom" }),
            new(new[] { "test_framework:benchmarkdotnet", "library:unknown" }),
            new(new[] { "test_framework:unknown", "library:custom" }),
            new(new[] { "test_framework:unknown", "library:unknown" }),
            // manual_api_events, index = 2820
            new(new[] { "event_type:test" }),
            new(new[] { "event_type:suite" }),
            new(new[] { "event_type:module" }),
            new(new[] { "event_type:session" }),
            // events_enqueued_for_serialization, index = 2824
            new(null),
            // endpoint_payload.requests, index = 2825
            new(new[] { "endpoint:test_cycle" }),
            new(new[] { "endpoint:test_cycle", "rq_compressed:true" }),
            new(new[] { "endpoint:code_coverage" }),
            new(new[] { "endpoint:code_coverage", "rq_compressed:true" }),
            // endpoint_payload.requests_errors, index = 2829
            new(new[] { "endpoint:test_cycle", "error_type:timeout" }),
            new(new[] { "endpoint:test_cycle", "error_type:network" }),
            new(new[] { "endpoint:test_cycle", "error_type:status_code" }),
            new(new[] { "endpoint:test_cycle", "error_type:status_code_4xx_response" }),
            new(new[] { "endpoint:test_cycle", "error_type:status_code_5xx_response" }),
            new(new[] { "endpoint:test_cycle", "error_type:status_code_4xx_response", "status_code:400" }),
            new(new[] { "endpoint:test_cycle", "error_type:status_code_4xx_response", "status_code:401" }),
            new(new[] { "endpoint:test_cycle", "error_type:status_code_4xx_response", "status_code:403" }),
            new(new[] { "endpoint:test_cycle", "error_type:status_code_4xx_response", "status_code:404" }),
            new(new[] { "endpoint:test_cycle", "error_type:status_code_4xx_response", "status_code:408" }),
            new(new[] { "endpoint:test_cycle", "error_type:status_code_4xx_response", "status_code:429" }),
            new(new[] { "endpoint:code_coverage", "error_type:timeout" }),
            new(new[] { "endpoint:code_coverage", "error_type:network" }),
            new(new[] { "endpoint:code_coverage", "error_type:status_code" }),
            new(new[] { "endpoint:code_coverage", "error_type:status_code_4xx_response" }),
            new(new[] { "endpoint:code_coverage", "error_type:status_code_5xx_response" }),
            new(new[] { "endpoint:code_coverage", "error_type:status_code_4xx_response", "status_code:400" }),
            new(new[] { "endpoint:code_coverage", "error_type:status_code_4xx_response", "status_code:401" }),
            new(new[] { "endpoint:code_coverage", "error_type:status_code_4xx_response", "status_code:403" }),
            new(new[] { "endpoint:code_coverage", "error_type:status_code_4xx_response", "status_code:404" }),
            new(new[] { "endpoint:code_coverage", "error_type:status_code_4xx_response", "status_code:408" }),
            new(new[] { "endpoint:code_coverage", "error_type:status_code_4xx_response", "status_code:429" }),
            // endpoint_payload.dropped, index = 2851
            new(new[] { "endpoint:test_cycle" }),
            new(new[] { "endpoint:code_coverage" }),
            // git.command, index = 2853
            new(new[] { "command:get_repository" }),
            new(new[] { "command:get_branch" }),
            new(new[] { "command:get_remote" }),
            new(new[] { "command:get_head" }),
            new(new[] { "command:check_shallow" }),
            new(new[] { "command:unshallow" }),
            new(new[] { "command:get_local_commits" }),
            new(new[] { "command:get_objects" }),
            new(new[] { "command:pack_objects" }),
            new(new[] { "command:diff" }),
            new(new[] { "command:verify_branch_exists" }),
            new(new[] { "command:get_symbolic_ref" }),
            new(new[] { "command:show_ref" }),
            new(new[] { "command:build_candidate_list" }),
            new(new[] { "command:merge_base" }),
            new(new[] { "command:rev_list" }),
            new(new[] { "command:ls_remote" }),
            new(new[] { "command:fetch" }),
            // git.command_errors, index = 2871
            new(new[] { "command:get_repository", "exit_code:missing" }),
            new(new[] { "command:get_repository", "exit_code:unknown" }),
            new(new[] { "command:get_repository", "exit_code:-1" }),
            new(new[] { "command:get_repository", "exit_code:1" }),
            new(new[] { "command:get_repository", "exit_code:2" }),
            new(new[] { "command:get_repository", "exit_code:127" }),
            new(new[] { "command:get_repository", "exit_code:128" }),
            new(new[] { "command:get_repository", "exit_code:129" }),
            new(new[] { "command:get_branch", "exit_code:missing" }),
            new(new[] { "command:get_branch", "exit_code:unknown" }),
            new(new[] { "command:get_branch", "exit_code:-1" }),
            new(new[] { "command:get_branch", "exit_code:1" }),
            new(new[] { "command:get_branch", "exit_code:2" }),
            new(new[] { "command:get_branch", "exit_code:127" }),
            new(new[] { "command:get_branch", "exit_code:128" }),
            new(new[] { "command:get_branch", "exit_code:129" }),
            new(new[] { "command:get_remote", "exit_code:missing" }),
            new(new[] { "command:get_remote", "exit_code:unknown" }),
            new(new[] { "command:get_remote", "exit_code:-1" }),
            new(new[] { "command:get_remote", "exit_code:1" }),
            new(new[] { "command:get_remote", "exit_code:2" }),
            new(new[] { "command:get_remote", "exit_code:127" }),
            new(new[] { "command:get_remote", "exit_code:128" }),
            new(new[] { "command:get_remote", "exit_code:129" }),
            new(new[] { "command:get_head", "exit_code:missing" }),
            new(new[] { "command:get_head", "exit_code:unknown" }),
            new(new[] { "command:get_head", "exit_code:-1" }),
            new(new[] { "command:get_head", "exit_code:1" }),
            new(new[] { "command:get_head", "exit_code:2" }),
            new(new[] { "command:get_head", "exit_code:127" }),
            new(new[] { "command:get_head", "exit_code:128" }),
            new(new[] { "command:get_head", "exit_code:129" }),
            new(new[] { "command:check_shallow", "exit_code:missing" }),
            new(new[] { "command:check_shallow", "exit_code:unknown" }),
            new(new[] { "command:check_shallow", "exit_code:-1" }),
            new(new[] { "command:check_shallow", "exit_code:1" }),
            new(new[] { "command:check_shallow", "exit_code:2" }),
            new(new[] { "command:check_shallow", "exit_code:127" }),
            new(new[] { "command:check_shallow", "exit_code:128" }),
            new(new[] { "command:check_shallow", "exit_code:129" }),
            new(new[] { "command:unshallow", "exit_code:missing" }),
            new(new[] { "command:unshallow", "exit_code:unknown" }),
            new(new[] { "command:unshallow", "exit_code:-1" }),
            new(new[] { "command:unshallow", "exit_code:1" }),
            new(new[] { "command:unshallow", "exit_code:2" }),
            new(new[] { "command:unshallow", "exit_code:127" }),
            new(new[] { "command:unshallow", "exit_code:128" }),
            new(new[] { "command:unshallow", "exit_code:129" }),
            new(new[] { "command:get_local_commits", "exit_code:missing" }),
            new(new[] { "command:get_local_commits", "exit_code:unknown" }),
            new(new[] { "command:get_local_commits", "exit_code:-1" }),
            new(new[] { "command:get_local_commits", "exit_code:1" }),
            new(new[] { "command:get_local_commits", "exit_code:2" }),
            new(new[] { "command:get_local_commits", "exit_code:127" }),
            new(new[] { "command:get_local_commits", "exit_code:128" }),
            new(new[] { "command:get_local_commits", "exit_code:129" }),
            new(new[] { "command:get_objects", "exit_code:missing" }),
            new(new[] { "command:get_objects", "exit_code:unknown" }),
            new(new[] { "command:get_objects", "exit_code:-1" }),
            new(new[] { "command:get_objects", "exit_code:1" }),
            new(new[] { "command:get_objects", "exit_code:2" }),
            new(new[] { "command:get_objects", "exit_code:127" }),
            new(new[] { "command:get_objects", "exit_code:128" }),
            new(new[] { "command:get_objects", "exit_code:129" }),
            new(new[] { "command:pack_objects", "exit_code:missing" }),
            new(new[] { "command:pack_objects", "exit_code:unknown" }),
            new(new[] { "command:pack_objects", "exit_code:-1" }),
            new(new[] { "command:pack_objects", "exit_code:1" }),
            new(new[] { "command:pack_objects", "exit_code:2" }),
            new(new[] { "command:pack_objects", "exit_code:127" }),
            new(new[] { "command:pack_objects", "exit_code:128" }),
            new(new[] { "command:pack_objects", "exit_code:129" }),
            new(new[] { "command:diff", "exit_code:missing" }),
            new(new[] { "command:diff", "exit_code:unknown" }),
            new(new[] { "command:diff", "exit_code:-1" }),
            new(new[] { "command:diff", "exit_code:1" }),
            new(new[] { "command:diff", "exit_code:2" }),
            new(new[] { "command:diff", "exit_code:127" }),
            new(new[] { "command:diff", "exit_code:128" }),
            new(new[] { "command:diff", "exit_code:129" }),
            new(new[] { "command:verify_branch_exists", "exit_code:missing" }),
            new(new[] { "command:verify_branch_exists", "exit_code:unknown" }),
            new(new[] { "command:verify_branch_exists", "exit_code:-1" }),
            new(new[] { "command:verify_branch_exists", "exit_code:1" }),
            new(new[] { "command:verify_branch_exists", "exit_code:2" }),
            new(new[] { "command:verify_branch_exists", "exit_code:127" }),
            new(new[] { "command:verify_branch_exists", "exit_code:128" }),
            new(new[] { "command:verify_branch_exists", "exit_code:129" }),
            new(new[] { "command:get_symbolic_ref", "exit_code:missing" }),
            new(new[] { "command:get_symbolic_ref", "exit_code:unknown" }),
            new(new[] { "command:get_symbolic_ref", "exit_code:-1" }),
            new(new[] { "command:get_symbolic_ref", "exit_code:1" }),
            new(new[] { "command:get_symbolic_ref", "exit_code:2" }),
            new(new[] { "command:get_symbolic_ref", "exit_code:127" }),
            new(new[] { "command:get_symbolic_ref", "exit_code:128" }),
            new(new[] { "command:get_symbolic_ref", "exit_code:129" }),
            new(new[] { "command:show_ref", "exit_code:missing" }),
            new(new[] { "command:show_ref", "exit_code:unknown" }),
            new(new[] { "command:show_ref", "exit_code:-1" }),
            new(new[] { "command:show_ref", "exit_code:1" }),
            new(new[] { "command:show_ref", "exit_code:2" }),
            new(new[] { "command:show_ref", "exit_code:127" }),
            new(new[] { "command:show_ref", "exit_code:128" }),
            new(new[] { "command:show_ref", "exit_code:129" }),
            new(new[] { "command:build_candidate_list", "exit_code:missing" }),
            new(new[] { "command:build_candidate_list", "exit_code:unknown" }),
            new(new[] { "command:build_candidate_list", "exit_code:-1" }),
            new(new[] { "command:build_candidate_list", "exit_code:1" }),
            new(new[] { "command:build_candidate_list", "exit_code:2" }),
            new(new[] { "command:build_candidate_list", "exit_code:127" }),
            new(new[] { "command:build_candidate_list", "exit_code:128" }),
            new(new[] { "command:build_candidate_list", "exit_code:129" }),
            new(new[] { "command:merge_base", "exit_code:missing" }),
            new(new[] { "command:merge_base", "exit_code:unknown" }),
            new(new[] { "command:merge_base", "exit_code:-1" }),
            new(new[] { "command:merge_base", "exit_code:1" }),
            new(new[] { "command:merge_base", "exit_code:2" }),
            new(new[] { "command:merge_base", "exit_code:127" }),
            new(new[] { "command:merge_base", "exit_code:128" }),
            new(new[] { "command:merge_base", "exit_code:129" }),
            new(new[] { "command:rev_list", "exit_code:missing" }),
            new(new[] { "command:rev_list", "exit_code:unknown" }),
            new(new[] { "command:rev_list", "exit_code:-1" }),
            new(new[] { "command:rev_list", "exit_code:1" }),
            new(new[] { "command:rev_list", "exit_code:2" }),
            new(new[] { "command:rev_list", "exit_code:127" }),
            new(new[] { "command:rev_list", "exit_code:128" }),
            new(new[] { "command:rev_list", "exit_code:129" }),
            new(new[] { "command:ls_remote", "exit_code:missing" }),
            new(new[] { "command:ls_remote", "exit_code:unknown" }),
            new(new[] { "command:ls_remote", "exit_code:-1" }),
            new(new[] { "command:ls_remote", "exit_code:1" }),
            new(new[] { "command:ls_remote", "exit_code:2" }),
            new(new[] { "command:ls_remote", "exit_code:127" }),
            new(new[] { "command:ls_remote", "exit_code:128" }),
            new(new[] { "command:ls_remote", "exit_code:129" }),
            new(new[] { "command:fetch", "exit_code:missing" }),
            new(new[] { "command:fetch", "exit_code:unknown" }),
            new(new[] { "command:fetch", "exit_code:-1" }),
            new(new[] { "command:fetch", "exit_code:1" }),
            new(new[] { "command:fetch", "exit_code:2" }),
            new(new[] { "command:fetch", "exit_code:127" }),
            new(new[] { "command:fetch", "exit_code:128" }),
            new(new[] { "command:fetch", "exit_code:129" }),
            // git_requests.search_commits, index = 3015
            new(null),
            new(new[] { "rq_compressed:true" }),
            // git_requests.search_commits_errors, index = 3017
            new(new[] { "error_type:timeout" }),
            new(new[] { "error_type:network" }),
            new(new[] { "error_type:status_code" }),
            new(new[] { "error_type:status_code_4xx_response" }),
            new(new[] { "error_type:status_code_5xx_response" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:400" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:401" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:403" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:404" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:408" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:429" }),
            // git_requests.objects_pack, index = 3028
            new(null),
            new(new[] { "rq_compressed:true" }),
            // git_requests.objects_pack_errors, index = 3030
            new(new[] { "error_type:timeout" }),
            new(new[] { "error_type:network" }),
            new(new[] { "error_type:status_code" }),
            new(new[] { "error_type:status_code_4xx_response" }),
            new(new[] { "error_type:status_code_5xx_response" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:400" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:401" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:403" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:404" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:408" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:429" }),
            // git_requests.settings, index = 3041
            new(null),
            new(new[] { "rq_compressed:true" }),
            // git_requests.settings_errors, index = 3043
            new(new[] { "error_type:timeout" }),
            new(new[] { "error_type:network" }),
            new(new[] { "error_type:status_code" }),
            new(new[] { "error_type:status_code_4xx_response" }),
            new(new[] { "error_type:status_code_5xx_response" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:400" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:401" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:403" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:404" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:408" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:429" }),
            // git_requests.settings_response, index = 3054
            new(new[] { "coverage_enabled:true", "itrskip_enabled:true", "known_tests_enabled:true", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:true", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:true", "known_tests_enabled:true", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:true", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:true", "known_tests_enabled:true", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:false", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:true", "known_tests_enabled:true", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:false", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:true", "known_tests_enabled:true", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:true", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:true", "known_tests_enabled:true", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:true", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:true", "known_tests_enabled:true", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:false", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:true", "known_tests_enabled:true", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:false", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:true", "known_tests_enabled:false", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:true", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:true", "known_tests_enabled:false", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:true", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:true", "known_tests_enabled:false", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:false", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:true", "known_tests_enabled:false", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:false", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:true", "known_tests_enabled:false", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:true", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:true", "known_tests_enabled:false", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:true", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:true", "known_tests_enabled:false", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:false", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:true", "known_tests_enabled:false", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:false", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:false", "known_tests_enabled:true", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:true", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:false", "known_tests_enabled:true", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:true", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:false", "known_tests_enabled:true", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:false", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:false", "known_tests_enabled:true", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:false", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:false", "known_tests_enabled:true", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:true", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:false", "known_tests_enabled:true", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:true", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:false", "known_tests_enabled:true", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:false", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:false", "known_tests_enabled:true", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:false", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:false", "known_tests_enabled:false", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:true", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:false", "known_tests_enabled:false", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:true", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:false", "known_tests_enabled:false", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:false", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:false", "known_tests_enabled:false", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:false", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:false", "known_tests_enabled:false", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:true", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:false", "known_tests_enabled:false", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:true", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:false", "known_tests_enabled:false", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:false", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:true", "itrskip_enabled:false", "known_tests_enabled:false", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:false", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:true", "known_tests_enabled:true", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:true", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:true", "known_tests_enabled:true", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:true", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:true", "known_tests_enabled:true", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:false", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:true", "known_tests_enabled:true", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:false", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:true", "known_tests_enabled:true", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:true", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:true", "known_tests_enabled:true", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:true", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:true", "known_tests_enabled:true", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:false", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:true", "known_tests_enabled:true", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:false", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:true", "known_tests_enabled:false", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:true", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:true", "known_tests_enabled:false", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:true", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:true", "known_tests_enabled:false", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:false", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:true", "known_tests_enabled:false", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:false", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:true", "known_tests_enabled:false", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:true", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:true", "known_tests_enabled:false", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:true", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:true", "known_tests_enabled:false", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:false", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:true", "known_tests_enabled:false", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:false", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:false", "known_tests_enabled:true", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:true", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:false", "known_tests_enabled:true", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:true", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:false", "known_tests_enabled:true", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:false", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:false", "known_tests_enabled:true", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:false", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:false", "known_tests_enabled:true", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:true", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:false", "known_tests_enabled:true", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:true", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:false", "known_tests_enabled:true", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:false", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:false", "known_tests_enabled:true", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:false", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:false", "known_tests_enabled:false", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:true", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:false", "known_tests_enabled:false", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:true", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:false", "known_tests_enabled:false", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:false", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:false", "known_tests_enabled:false", "early_flake_detection_enabled:true", "flaky_test_retries_enabled:false", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:false", "known_tests_enabled:false", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:true", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:false", "known_tests_enabled:false", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:true", "test_management_enabled:false" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:false", "known_tests_enabled:false", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:false", "test_management_enabled:true" }),
            new(new[] { "coverage_enabled:false", "itrskip_enabled:false", "known_tests_enabled:false", "early_flake_detection_enabled:false", "flaky_test_retries_enabled:false", "test_management_enabled:false" }),
            // itr_skippable_tests.request, index = 3118
            new(null),
            new(new[] { "rq_compressed:true" }),
            // itr_skippable_tests.request_errors, index = 3120
            new(new[] { "error_type:timeout" }),
            new(new[] { "error_type:network" }),
            new(new[] { "error_type:status_code" }),
            new(new[] { "error_type:status_code_4xx_response" }),
            new(new[] { "error_type:status_code_5xx_response" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:400" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:401" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:403" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:404" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:408" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:429" }),
            // itr_skippable_tests.response_tests, index = 3131
            new(null),
            // itr_skippable_tests.response_suites, index = 3132
            new(null),
            // itr_skipped, index = 3133
            new(new[] { "event_type:test" }),
            new(new[] { "event_type:suite" }),
            new(new[] { "event_type:module" }),
            new(new[] { "event_type:session" }),
            // itr_unskippable, index = 3137
            new(new[] { "event_type:test" }),
            new(new[] { "event_type:suite" }),
            new(new[] { "event_type:module" }),
            new(new[] { "event_type:session" }),
            // itr_forced_run, index = 3141
            new(new[] { "event_type:test" }),
            new(new[] { "event_type:suite" }),
            new(new[] { "event_type:module" }),
            new(new[] { "event_type:session" }),
            // code_coverage.is_empty, index = 3145
            new(null),
            // code_coverage.errors, index = 3146
            new(null),
            // known_tests.request, index = 3147
            new(null),
            new(new[] { "rq_compressed:true" }),
            // known_tests.request_errors, index = 3149
            new(new[] { "error_type:timeout" }),
            new(new[] { "error_type:network" }),
            new(new[] { "error_type:status_code" }),
            new(new[] { "error_type:status_code_4xx_response" }),
            new(new[] { "error_type:status_code_5xx_response" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:400" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:401" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:403" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:404" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:408" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:429" }),
            // impacted_tests_detection.request, index = 3160
            new(null),
            new(new[] { "rq_compressed:true" }),
            // impacted_tests_detection.request_errors, index = 3162
            new(new[] { "error_type:timeout" }),
            new(new[] { "error_type:network" }),
            new(new[] { "error_type:status_code" }),
            new(new[] { "error_type:status_code_4xx_response" }),
            new(new[] { "error_type:status_code_5xx_response" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:400" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:401" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:403" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:404" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:408" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:429" }),
            // impacted_tests_detection.is_modified, index = 3173
            new(null),
            // test_management_tests.request, index = 3174
            new(null),
            new(new[] { "rq_compressed:true" }),
            // test_management_tests.request_errors, index = 3176
            new(new[] { "error_type:timeout" }),
            new(new[] { "error_type:network" }),
            new(new[] { "error_type:status_code" }),
            new(new[] { "error_type:status_code_4xx_response" }),
            new(new[] { "error_type:status_code_5xx_response" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:400" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:401" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:403" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:404" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:408" }),
            new(new[] { "error_type:status_code_4xx_response", "status_code:429" }),
        };

    /// <summary>
    /// Gets an array of metric counts, indexed by integer value of the <see cref="Datadog.Trace.Telemetry.Metrics.CountCIVisibility" />.
    /// Each value represents the number of unique entries in the buffer returned by <see cref="GetCountCIVisibilityBuffer()" />
    /// It is equal to the cardinality of the tag combinations (or 1 if there are no tags)
    /// </summary>
    private static int[] CountCIVisibilityEntryCounts { get; }
        = new int[]{ 40, 2700, 60, 10, 10, 4, 1, 4, 22, 2, 18, 144, 2, 11, 2, 11, 2, 11, 64, 2, 11, 1, 1, 4, 4, 4, 1, 1, 2, 11, 2, 11, 1, 2, 11, };

    public void RecordCountCIVisibilityEventCreated(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityTestFramework tag1, Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityTestingEventTypeWithCodeOwnerAndSupportedCiAndBenchmark tag2, int increment = 1)
    {
        var index = 0 + ((int)tag1 * 8) + (int)tag2;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityEventFinished(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityTestFramework tag1, Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityTestingEventTypeWithCodeOwnerAndSupportedCiAndBenchmarkAndEarlyFlakeDetectionAndRum tag2, Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityTestingEventTypeRetryReason tag3, Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityTestingEventTypeTestManagementQuarantinedOrDisabled tag4, Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityTestingEventTypeTestManagementAttemptToFix tag5, int increment = 1)
    {
        var index = 40 + ((int)tag1 * 540) + ((int)tag2 * 27) + ((int)tag3 * 9) + ((int)tag4 * 3) + (int)tag5;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityTestSession(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityTestSessionProvider tag1, Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityTestSessionType tag2, Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityTestSessionAgentlessLogSubmission tag3, int increment = 1)
    {
        var index = 2740 + ((int)tag1 * 4) + ((int)tag2 * 2) + (int)tag3;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityCodeCoverageStarted(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityTestFramework tag1, Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityCoverageLibrary tag2, int increment = 1)
    {
        var index = 2800 + ((int)tag1 * 2) + (int)tag2;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityCodeCoverageFinished(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityTestFramework tag1, Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityCoverageLibrary tag2, int increment = 1)
    {
        var index = 2810 + ((int)tag1 * 2) + (int)tag2;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityManualApiEvent(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityTestingEventType tag, int increment = 1)
    {
        var index = 2820 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityEventsEnqueueForSerialization(int increment = 1)
    {
        Interlocked.Add(ref _buffer.CountCIVisibility[2824], increment);
    }

    public void RecordCountCIVisibilityEndpointPayloadRequests(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityEndpointAndCompression tag, int increment = 1)
    {
        var index = 2825 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityEndpointPayloadRequestsErrors(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityEndpoints tag1, Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityErrorType tag2, int increment = 1)
    {
        var index = 2829 + ((int)tag1 * 11) + (int)tag2;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityEndpointPayloadDropped(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityEndpoints tag, int increment = 1)
    {
        var index = 2851 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityGitCommand(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityCommands tag, int increment = 1)
    {
        var index = 2853 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityGitCommandErrors(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityCommands tag1, Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityExitCodes tag2, int increment = 1)
    {
        var index = 2871 + ((int)tag1 * 8) + (int)tag2;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityGitRequestsSearchCommits(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityRequestCompressed tag, int increment = 1)
    {
        var index = 3015 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityGitRequestsSearchCommitsErrors(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityErrorType tag, int increment = 1)
    {
        var index = 3017 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityGitRequestsObjectsPack(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityRequestCompressed tag, int increment = 1)
    {
        var index = 3028 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityGitRequestsObjectsPackErrors(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityErrorType tag, int increment = 1)
    {
        var index = 3030 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityGitRequestsSettings(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityRequestCompressed tag, int increment = 1)
    {
        var index = 3041 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityGitRequestsSettingsErrors(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityErrorType tag, int increment = 1)
    {
        var index = 3043 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityGitRequestsSettingsResponse(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilitySettingsResponse_CoverageFeature tag1, Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilitySettingsResponse_ItrSkippingFeature tag2, Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilitySettingsResponse_KnownTestsFeature tag3, Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilitySettingsResponse_EarlyFlakeDetectionFeature tag4, Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilitySettingsResponse_FlakyTestRetriesFeature tag5, Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilitySettingsResponse_TestManagementFeature tag6, int increment = 1)
    {
        var index = 3054 + ((int)tag1 * 32) + ((int)tag2 * 16) + ((int)tag3 * 8) + ((int)tag4 * 4) + ((int)tag5 * 2) + (int)tag6;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityITRSkippableTestsRequest(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityRequestCompressed tag, int increment = 1)
    {
        var index = 3118 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityITRSkippableTestsRequestErrors(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityErrorType tag, int increment = 1)
    {
        var index = 3120 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityITRSkippableTestsResponseTests(int increment = 1)
    {
        Interlocked.Add(ref _buffer.CountCIVisibility[3131], increment);
    }

    public void RecordCountCIVisibilityITRSkippableTestsResponseSuites(int increment = 1)
    {
        Interlocked.Add(ref _buffer.CountCIVisibility[3132], increment);
    }

    public void RecordCountCIVisibilityITRSkipped(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityTestingEventType tag, int increment = 1)
    {
        var index = 3133 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityITRUnskippable(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityTestingEventType tag, int increment = 1)
    {
        var index = 3137 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityITRForcedRun(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityTestingEventType tag, int increment = 1)
    {
        var index = 3141 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityCodeCoverageIsEmpty(int increment = 1)
    {
        Interlocked.Add(ref _buffer.CountCIVisibility[3145], increment);
    }

    public void RecordCountCIVisibilityCodeCoverageErrors(int increment = 1)
    {
        Interlocked.Add(ref _buffer.CountCIVisibility[3146], increment);
    }

    public void RecordCountCIVisibilityKnownTestsRequest(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityRequestCompressed tag, int increment = 1)
    {
        var index = 3147 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityKnownTestsRequestErrors(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityErrorType tag, int increment = 1)
    {
        var index = 3149 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityImpactedTestsDetectionRequest(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityRequestCompressed tag, int increment = 1)
    {
        var index = 3160 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityImpactedTestsDetectionRequestErrors(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityErrorType tag, int increment = 1)
    {
        var index = 3162 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityImpactedTestsIsModified(int increment = 1)
    {
        Interlocked.Add(ref _buffer.CountCIVisibility[3173], increment);
    }

    public void RecordCountCIVisibilityTestManagementTestsRequest(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityRequestCompressed tag, int increment = 1)
    {
        var index = 3174 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }

    public void RecordCountCIVisibilityTestManagementTestsRequestErrors(Datadog.Trace.Telemetry.Metrics.MetricTags.CIVisibilityErrorType tag, int increment = 1)
    {
        var index = 3176 + (int)tag;
        Interlocked.Add(ref _buffer.CountCIVisibility[index], increment);
    }
}