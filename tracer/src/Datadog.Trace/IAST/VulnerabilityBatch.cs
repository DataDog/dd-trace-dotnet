// <copyright file="VulnerabilityBatch.cs" company="Datadog">
// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2 License.
// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2017 Datadog, Inc.
// </copyright>

#nullable enable

using System.Collections.Generic;
using Datadog.Trace.Vendors.Newtonsoft.Json;
using Datadog.Trace.Vendors.Newtonsoft.Json.Serialization;

namespace Datadog.Trace.Iast;

internal class VulnerabilityBatch
{
    private static JsonSerializerSettings _serializerSettings = new JsonSerializerSettings() { NullValueHandling = NullValueHandling.Ignore, ContractResolver = new CamelCasePropertyNamesContractResolver() };
    private string? _vulnerabilitiesJson;

    public List<Vulnerability> Vulnerabilities { get; } = new List<Vulnerability>();

    public List<Source>? Sources { get; private set; } = null;

    public void Add(Vulnerability vulnerability)
    {
        _vulnerabilitiesJson = null;
        var ranges = vulnerability.Evidence.GetRanges();

        if (ranges != null)
        {
            foreach (var range in ranges)
            {
                if (Sources is null)
                {
                    Sources = new List<Source>();
                }

                if (range.Source != null && !Sources.Contains(range.Source))
                {
                    range.Source.SetInternalId(Sources.Count);
                    Sources.Add(range.Source);
                }
            }
        }

        Vulnerabilities.Add(vulnerability);
    }

    public override string ToString()
    {
        return _vulnerabilitiesJson ?? (_vulnerabilitiesJson = JsonConvert.SerializeObject(this, Formatting.Indented, _serializerSettings));
    }
}
