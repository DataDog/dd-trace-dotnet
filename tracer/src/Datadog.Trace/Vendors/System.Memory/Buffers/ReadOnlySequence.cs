//------------------------------------------------------------------------------
// <auto-generated />
// This file was automatically generated by the UpdateVendors tool.
//------------------------------------------------------------------------------
#pragma warning disable CS0618, CS0649, CS1574, CS1580, CS1581, CS1584, CS1591, CS1573, CS8018, SYSLIB0011, SYSLIB0032
#pragma warning disable CS8600, CS8601, CS8602, CS8603, CS8604, CS8618, CS8620, CS8714, CS8762, CS8765, CS8766, CS8767, CS8768, CS8769, CS8612, CS8629, CS8774
#nullable enable
// Decompiled with JetBrains decompiler
// Type: System.Buffers.ReadOnlySequence
// Assembly: System.Memory, Version=4.0.1.2, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
// MVID: 805945F3-27B0-47AD-B8F6-389D9D8F82C3

using System.Runtime.CompilerServices;

namespace Datadog.Trace.VendoredMicrosoftCode.System.Buffers
{
    internal static class ReadOnlySequence
  {
    public const int FlagBitMask = -2147483648;
    public const int IndexBitMask = 2147483647;
    public const int SegmentStartMask = 0;
    public const int SegmentEndMask = 0;
    public const int ArrayStartMask = 0;
    public const int ArrayEndMask = -2147483648;
    public const int MemoryManagerStartMask = -2147483648;
    public const int MemoryManagerEndMask = 0;
    public const int StringStartMask = -2147483648;
    public const int StringEndMask = -2147483648;

    [MethodImpl((MethodImplOptions) 256)]
    public static int SegmentToSequenceStart(int startIndex) => startIndex | 0;

    [MethodImpl((MethodImplOptions) 256)]
    public static int SegmentToSequenceEnd(int endIndex) => endIndex | 0;

    [MethodImpl((MethodImplOptions) 256)]
    public static int ArrayToSequenceStart(int startIndex) => startIndex | 0;

    [MethodImpl((MethodImplOptions) 256)]
    public static int ArrayToSequenceEnd(int endIndex) => endIndex | int.MinValue;

    [MethodImpl((MethodImplOptions) 256)]
    public static int MemoryManagerToSequenceStart(int startIndex) => startIndex | int.MinValue;

    [MethodImpl((MethodImplOptions) 256)]
    public static int MemoryManagerToSequenceEnd(int endIndex) => endIndex | 0;

    [MethodImpl((MethodImplOptions) 256)]
    public static int StringToSequenceStart(int startIndex) => startIndex | int.MinValue;

    [MethodImpl((MethodImplOptions) 256)]
    public static int StringToSequenceEnd(int endIndex) => endIndex | int.MinValue;
  }
}
