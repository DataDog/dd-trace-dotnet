//------------------------------------------------------------------------------
// <auto-generated />
// This file was automatically generated by the UpdateVendors tool.
//------------------------------------------------------------------------------
#pragma warning disable CS0618, CS0649, CS1574, CS1580, CS1581, CS1584, CS1591, CS1573, CS8018, SYSLIB0011, SYSLIB0032
#pragma warning disable CS8600, CS8601, CS8602, CS8603, CS8604, CS8618, CS8620, CS8714, CS8762, CS8765, CS8766, CS8767, CS8768, CS8769, CS8612, CS8629, CS8774
#nullable enable
// Decompiled with JetBrains decompiler
// Type: System.Buffers.MemoryManager`1
// Assembly: System.Memory, Version=4.0.1.2, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
// MVID: 805945F3-27B0-47AD-B8F6-389D9D8F82C3

using System;
using System.Runtime.CompilerServices;

namespace Datadog.Trace.VendoredMicrosoftCode.System.Buffers
{
    internal abstract class MemoryManager<T> : IMemoryOwner<T>, IDisposable, IPinnable
  {
    public virtual Memory<T> Memory => new Memory<T>(this, this.GetSpan().Length);

    public abstract Span<T> GetSpan();

    public abstract MemoryHandle Pin(int elementIndex = 0);

    public abstract void Unpin();

    [MethodImpl((MethodImplOptions) 256)]
    protected Memory<T> CreateMemory(int length) => new Memory<T>(this, length);

    [MethodImpl((MethodImplOptions) 256)]
    protected Memory<T> CreateMemory(int start, int length) => new Memory<T>(this, start, length);

    protected internal virtual bool TryGetArray(out ArraySegment<T> segment)
    {
      segment = new ArraySegment<T>();
      return false;
    }

    void IDisposable.Dispose()
    {
      this.Dispose(true);
      GC.SuppressFinalize((object) this);
    }

    protected abstract void Dispose(bool disposing);
  }
}
