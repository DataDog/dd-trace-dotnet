//------------------------------------------------------------------------------
// <auto-generated />
// This file was automatically generated by the UpdateVendors tool.
//------------------------------------------------------------------------------
#pragma warning disable CS0618, CS0649, CS1574, CS1580, CS1581, CS1584, CS1591, CS1573, CS8018, SYSLIB0011, SYSLIB0032
#pragma warning disable CS8600, CS8601, CS8602, CS8603, CS8604, CS8618, CS8620, CS8714, CS8762, CS8765, CS8766, CS8767, CS8768, CS8769, CS8612, CS8629, CS8774
// Decompiled with JetBrains decompiler
// Type: System.Reflection.Metadata.ICustomAttributeTypeProvider`1
// Assembly: System.Reflection.Metadata, Version=7.0.0.2, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 2EB35F4B-CF50-496F-AFB8-CC6F6F79CB72


#nullable enable
namespace Datadog.Trace.VendoredMicrosoftCode.System.Reflection.Metadata
{
  internal interface ICustomAttributeTypeProvider<TType> : 
    ISimpleTypeProvider<TType>,
    ISZArrayTypeProvider<TType>
  {
    /// <summary>
    /// Gets the TType representation for <see cref="T:System.Type" />.
    /// </summary>
    TType GetSystemType();

    /// <summary>
    /// Returns true if the given type represents <see cref="T:System.Type" />.
    /// </summary>
    bool IsSystemType(TType type);

    /// <summary>
    /// Get the type symbol for the given serialized type name.
    /// The serialized type name is in so-called "reflection notation" (i.e. as understood by <see cref="M:System.Type.GetType(System.String)" />.)
    /// </summary>
    /// <exception cref="T:System.BadImageFormatException">The name is malformed.</exception>
    TType GetTypeFromSerializedName(string name);

    /// <summary>
    /// Gets the underlying type of the given enum type symbol.
    /// </summary>
    /// <exception cref="T:System.BadImageFormatException">The given type symbol does not represent an enum.</exception>
    PrimitiveTypeCode GetUnderlyingEnumType(TType type);
  }
}
