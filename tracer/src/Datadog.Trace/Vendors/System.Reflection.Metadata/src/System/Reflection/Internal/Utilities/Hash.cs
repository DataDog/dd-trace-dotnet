//------------------------------------------------------------------------------
// <auto-generated />
// This file was automatically generated by the UpdateVendors tool.
//------------------------------------------------------------------------------

using System;

#pragma warning disable CS0618, CS0649, CS1574, CS1580, CS1581, CS1584, CS1591, CS1573, CS8018, SYSLIB0011, SYSLIB0032
#pragma warning disable CS8600, CS8601, CS8602, CS8603, CS8604, CS8618, CS8620, CS8714, CS8762, CS8765, CS8766, CS8767, CS8768, CS8769, CS8612, CS8629, CS8774
#nullable enable
// Decompiled with JetBrains decompiler
// Type: System.Reflection.Internal.Hash
// Assembly: System.Reflection.Metadata, Version=7.0.0.2, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 2EB35F4B-CF50-496F-AFB8-CC6F6F79CB72

namespace Datadog.Trace.VendoredMicrosoftCode.System.Reflection.Internal
{
  internal static class Hash
  {
    /// <summary>
    /// The offset bias value used in the FNV-1a algorithm
    /// See http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function
    /// </summary>
    internal const int FnvOffsetBias = -2128831035;
    /// <summary>
    /// The generative factor used in the FNV-1a algorithm
    /// See http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function
    /// </summary>
    internal const int FnvPrime = 16777619;

    internal static int Combine(int newKey, int currentKey) => currentKey * -1521134295 + newKey;

    internal static int Combine(uint newKey, int currentKey) => currentKey * -1521134295 + (int) newKey;

    internal static int Combine(bool newKeyPart, int currentKey) => Hash.Combine(currentKey, newKeyPart ? 1 : 0);

    internal static int GetFNVHashCode(ReadOnlySpan<byte> data)
    {
      int fnvHashCode = -2128831035;
      for (int index = 0; index < data.Length; ++index)
        fnvHashCode = (fnvHashCode ^ (int) data[index]) * 16777619;
      return fnvHashCode;
    }
  }
}
