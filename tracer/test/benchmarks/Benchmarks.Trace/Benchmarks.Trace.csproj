<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFrameworks>net8.0;net7.0;net6.0;netcoreapp3.1;net472</TargetFrameworks>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>

    <!-- benchmarkdotnet only support numberic values, not "latest"-->
    <LangVersion>11</LangVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>

    <!-- Strong name signature -->
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>..\..\..\..\Datadog.Trace.snk</AssemblyOriginatorKeyFile>
    <DelaySign>false</DelaySign>
    <!-- NU* are workaround for Rider bug: https://youtrack.jetbrains.com/issue/RIDER-103207/Cannot-suppress-vulnerable-package-errors -->
    <NoWarn>1591;NU1901;NU1902;NU1903;NU1904</NoWarn>

     <!-- Tell Visual Studio to not create a new launchSettings.json file, even though we have AspNetCore assets -->
    <NoDefaultLaunchSettingsFile>true</NoDefaultLaunchSettingsFile>
    <CheckEolTargetFramework>false</CheckEolTargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="DuckTyping\DuckTypeMethodBenchmark.cs" />
    <Compile Remove="DuckTyping\DuckTypeMethodCallComparisonBenchmark.cs" />
    <Compile Remove="DuckTyping\DuckTypeStructCopyValueTypePropertyBenchmark.cs" />
    <Compile Remove="DuckTyping\DuckTypeValueTypeFieldBenchmark.cs" />
    <Compile Remove="DuckTyping\DuckTypeValueTypePropertyBenchmark.cs" />
    <Compile Remove="DuckTyping\ObscureObject.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="..\..\..\src\Datadog.Trace\AppSec\Waf\ConfigFiles\rule-set.json">
      <Link>rule-set.json</Link>
    </Content>
    <Content Update="Asm\rule-set.1.10.0.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="BenchmarkDotNet" Version="0.13.5" />
    <PackageReference Include="JetBrains.Profiler.SelfApi" Version="2.4.2" />
    <PackageReference Include="log4net" Version="2.0.12" />
    <PackageReference Include="NLog" Version="5.2.0" />
    <PackageReference Include="Serilog" Version="2.10.0" />
    <PackageReference Include="System.Net.Http" Version="4.3.4" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="3.1.18" />
    <PackageReference Include="System.Diagnostics.DiagnosticSource" Version="7.0.0" />
  </ItemGroup>

  <PropertyGroup>
    <!-- System.Diagnostics.DiagnosticSource doesn't support netcoreapp3.1-->
    <!-- https://andrewlock.net/stop-lying-about-netstandard-2-support/ -->
    <SuppressTfmSupportBuildWarnings>true</SuppressTfmSupportBuildWarnings>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\..\src\Datadog.Trace.BenchmarkDotNet\Datadog.Trace.BenchmarkDotNet.csproj" />
    <ProjectReference Include="..\..\..\src\Datadog.Trace.Manual\Datadog.Trace.Manual.csproj" Aliases="DatadogTraceManual" />
    <ProjectReference Include="..\..\..\src\Datadog.Trace\Datadog.Trace.csproj" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFrameworkIdentifier)' == '.NETCoreApp' ">
    <!--
    This reference allows us to build the code without precompiler directives,
    but the logic at runtime will never try to use the Registry if it's not available
    -->
    <PackageReference Include="Microsoft.AspNetCore.TestHost" Version="3.1.14" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="microbenchmarks\.gitignore" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\..\Datadog.Trace.Security.Unit.Tests\IAST\CustomSettingsForTests.cs" Link="Iast\CustomSettingsForTests.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Include="DuckTyping\DuckTypeMethodBenchmark.cs" />
    <None Include="DuckTyping\DuckTypeMethodCallComparisonBenchmark.cs" />
    <None Include="DuckTyping\DuckTypeStructCopyValueTypePropertyBenchmark.cs" />
    <None Include="DuckTyping\DuckTypeValueTypeFieldBenchmark.cs" />
    <None Include="DuckTyping\DuckTypeValueTypePropertyBenchmark.cs" />
    <None Include="DuckTyping\ObscureObject.cs" />
  </ItemGroup>

</Project>
