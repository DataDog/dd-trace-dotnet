<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <IsPackable>false</IsPackable>
    <OutputType>Library</OutputType>
    <ApiVersion Condition="'$(ApiVersion)' == ''">2.4.2</ApiVersion>
    <MicrosoftTestSDKVersion>16.7.1</MicrosoftTestSDKVersion>
    <MicrosoftTestSDKVersion Condition="$(ApiVersion.StartsWith('2.3'))">16.2.0</MicrosoftTestSDKVersion>
    <MicrosoftTestSDKVersion Condition="$(ApiVersion.StartsWith('2.2'))">15.9.0</MicrosoftTestSDKVersion>
    <VsAdapterApiVersion>$(ApiVersion)</VsAdapterApiVersion>
    <VsAdapterApiVersion Condition="'$(VsAdapterApiVersion)'&gt;='2.5.3'">2.5.3</VsAdapterApiVersion>

    <!-- Required to build multiple projects with the same Configuration|Platform -->
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
    <GenerateRuntimeConfigurationFiles>true</GenerateRuntimeConfigurationFiles>
    <GenerateProgramFile>false</GenerateProgramFile>

    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <CopyDebugSymbolFilesFromPackages>true</CopyDebugSymbolFilesFromPackages>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="$(MicrosoftTestSDKVersion)" />
    <PackageReference Include="xunit" Version="$(ApiVersion)" />
    <PackageReference Include="xunit.runner.visualstudio" Version="$(VsAdapterApiVersion)">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector" Version="6.0.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <None Update="xunit.runner.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="CodeCoverageFixTarget" AfterTargets="Build" Condition=" '$(OS)' == 'Windows_NT' AND '$(TargetFramework)' != '' ">
    <Message Importance="High" Text="Fixing Code Coverage: $(TargetFramework)" />
    <CallTarget Targets="ComputeFilesToPublish" />
    <CallTarget Targets="CopyCoverletDataCollectorFiles" />

    <!-- Because we don't publish on windows, we just move the code coverage binaries from the publish folder to the actual build bin folder-->
    <ItemGroup>
      <PublishedTraceDataCollectorArtifacts Include="$(PublishDir)**\*.*" />
    </ItemGroup>
    <Move SourceFiles="@(PublishedTraceDataCollectorArtifacts)" DestinationFolder="$(OutputPath)\%(RecursiveDir)" />
  </Target>
  
</Project>
