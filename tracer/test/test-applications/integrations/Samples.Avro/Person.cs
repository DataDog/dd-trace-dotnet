// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.12.0+8c27801dc8d42ccc00997f25c0b8f45f8d4a233e
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Samples.Avro
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	/// <summary>
	/// IF THE AVSC FILE IS CHANGED, SOURCES NEED TO BE REGENERATED
	/// To do so, install avro tools with
	/// `dotnet tool install Apache.Avro.Tools --create-manifest-if-needed`
	/// and then generate the files by running
	/// `dotnet avrogen -s tracer/test/test-applications/integrations/Samples.Avro/sample.avsc tracer/test/test-applications/integrations/Samples.Avro/ --skip-directories`
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.12.0+8c27801dc8d42ccc00997f25c0b8f45f8d4a233e")]
	public partial class Person : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""Person"",""doc"":""IF THE AVSC FILE IS CHANGED, SOURCES NEED TO BE REGENERATED\n To do so, install avro tools with\n `dotnet tool install Apache.Avro.Tools --create-manifest-if-needed`\n and then generate the files by running\n `dotnet avrogen -s tracer/test/test-applications/integrations/Samples.Avro/sample.avsc tracer/test/test-applications/integrations/Samples.Avro/ --skip-directories`"",""namespace"":""Samples.Avro"",""fields"":[{""name"":""name"",""type"":""string""},{""name"":""email"",""default"":null,""type"":[""null"",""string""]},{""name"":""phoneNumbers"",""type"":{""type"":""array"",""items"":{""type"":""record"",""name"":""PhoneNumber"",""namespace"":""Samples.Avro"",""fields"":[{""name"":""number"",""type"":""string""},{""name"":""type"",""type"":{""type"":""enum"",""name"":""PhoneType"",""namespace"":""Samples.Avro"",""symbols"":[""MOBILE"",""HOME"",""WORK""]}}]}}}]}");
		private string _name;
		private string _email;
		private IList<Samples.Avro.PhoneNumber> _phoneNumbers;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return Person._SCHEMA;
			}
		}
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				this._name = value;
			}
		}
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				this._email = value;
			}
		}
		public IList<Samples.Avro.PhoneNumber> phoneNumbers
		{
			get
			{
				return this._phoneNumbers;
			}
			set
			{
				this._phoneNumbers = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.name;
			case 1: return this.email;
			case 2: return this.phoneNumbers;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.name = (System.String)fieldValue; break;
			case 1: this.email = (System.String)fieldValue; break;
			case 2: this.phoneNumbers = (IList<Samples.Avro.PhoneNumber>)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
