@*<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>
<%@ taglib prefix="spring" uri="http://www.springframework.org/tags"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>*@


<html>

  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    
    <title>Datadog Sample Project</title>
  </head>
  
<body>

	<!-- Page Content -->
    <div class="container">
      <div class="row">
        <div class="col-lg-12 text-center">
          <ul class="list-unstyled">
          <h1 class="mt-5">Reflected XSS</h1>
          
          <p class="lead">
			Cross-site Scripting (XSS) attacks are a type of injection in which malicious scripts are injected into otherwise benign and trusted websites.
		 </p>
		   <p class="lead">
			In particular Reflected XSS occurs when vulnerable parts can be injected in the JSON response from the server. Many client MVC frameworks include protections against XSS attacks but they are not fully protected.
		</p>
		<p class="lead">
			XSS attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser-side script, to a different end user. Flaws that allow these attacks to succeed are quite widespread and occur anywhere a web application uses input from a user within the output it generates without validating or encoding it. An attacker can use XSS to send a malicious script to an unsuspecting user. The end user's browser has no way of knowing that the script should not be trusted and will execute the script. Because it thinks the script came from a trusted source, the malicious script can access any cookies, session tokens, or other sensitive information retained by the browser and used with that site. These scripts can even rewrite the content of the HTML page.
         </p>      
            
          </ul>
        </div>
      </div>
    </div>

	<div class="form-group">
		<p>
			<label>RAW Value : </label>
			<label>@Html.Raw(ViewData["XSS"])</label>
		</p>
		<p>
			<label>Escaped Value : </label>
			<label>@Html.Label(ViewData["XSS"].ToString())</label>
		</p>
	</div>

</body>
</html>