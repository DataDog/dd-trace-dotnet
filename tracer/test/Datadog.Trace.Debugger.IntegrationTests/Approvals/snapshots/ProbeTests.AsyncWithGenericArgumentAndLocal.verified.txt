[
  {
    "dd.span_id": "ScrubbedValue",
    "dd.trace_id": "ScrubbedValue",
    "ddsource": "dd_debugger",
    "ddtags": "Unknown",
    "debugger": {
      "snapshot": {
        "captures": {
          "entry": {
            "arguments": {
              "generic": {
                "fields": {
                  "_stateArray": {
                    "fields": null,
                    "type": "State[][]",
                    "value": "null"
                  },
                  "BaseMessage": {
                    "fields": {
                      "Message": {
                        "fields": null,
                        "type": "String",
                        "value": "Hello"
                      }
                    },
                    "type": "Generic",
                    "value": "Generic"
                  },
                  "Generic": {
                    "fields": {
                      "Message": {
                        "fields": null,
                        "type": "String",
                        "value": "AsyncWithGenericArgumentAndLocal"
                      }
                    },
                    "type": "Generic",
                    "value": "Generic"
                  }
                },
                "type": "NestedAsyncGenericClass`1",
                "value": "NestedAsyncGenericClass`1"
              },
              "input": {
                "fields": null,
                "type": "String",
                "value": ".RunAsync"
              }
            },
            "fields": {
              "_stateArray": {
                "fields": null,
                "type": "State[][]",
                "value": "null"
              },
              "BaseMessage": {
                "fields": {
                  "Message": {
                    "fields": null,
                    "type": "String",
                    "value": "Hello"
                  }
                },
                "type": "Generic",
                "value": "Generic"
              },
              "Generic": {
                "fields": null,
                "type": "Generic",
                "value": "null"
              }
            }
          },
          "return": {
            "arguments": {
              "generic": {
                "fields": {
                  "_stateArray": {
                    "Collection": [
                      {
                        "Collection": [
                          {
                            "fields": null,
                            "type": "State",
                            "value": "Array"
                          }
                        ],
                        "type": "State[]",
                        "value": "count: 1"
                      }
                    ],
                    "type": "State[][]",
                    "value": "count: 1"
                  },
                  "BaseMessage": {
                    "fields": {
                      "Message": {
                        "fields": null,
                        "type": "String",
                        "value": "Hello"
                      }
                    },
                    "type": "Generic",
                    "value": "Generic"
                  },
                  "Generic": {
                    "fields": {
                      "Message": {
                        "fields": null,
                        "type": "String",
                        "value": "AsyncWithGenericArgumentAndLocal"
                      }
                    },
                    "type": "Generic",
                    "value": "Generic"
                  }
                },
                "type": "NestedAsyncGenericClass`1",
                "value": "NestedAsyncGenericClass`1"
              },
              "input": {
                "fields": null,
                "type": "String",
                "value": ".RunAsync"
              }
            },
            "fields": {
              "_stateArray": {
                "Collection": [
                  {
                    "Collection": [
                      {
                        "fields": null,
                        "type": "State",
                        "value": "Array"
                      }
                    ],
                    "type": "State[]",
                    "value": "count: 1"
                  }
                ],
                "type": "State[][]",
                "value": "count: 1"
              },
              "BaseMessage": {
                "fields": {
                  "Message": {
                    "fields": null,
                    "type": "String",
                    "value": "Hello"
                  }
                },
                "type": "Generic",
                "value": "Generic"
              },
              "Generic": {
                "fields": null,
                "type": "Generic",
                "value": "null"
              }
            },
            "locals": {
              "@return": {
                "fields": null,
                "type": "String",
                "value": "AsyncWithGenericArgumentAndLocal.RunAsync.Hello.MethodSamples.Probes.Shared.Generic - Array"
              },
              "list": {
                "Collection": [
                  {
                    "fields": {
                      "Message": {
                        "fields": null,
                        "type": "String",
                        "value": "Hello"
                      }
                    },
                    "type": "Generic",
                    "value": "Generic"
                  }
                ],
                "type": "List`1",
                "value": "count: 1"
              },
              "output": {
                "fields": null,
                "type": "String",
                "value": "AsyncWithGenericArgumentAndLocal.RunAsync.Hello."
              }
            }
          }
        },
        "duration": "ScrubbedValue",
        "id": "ScrubbedValue",
        "language": "dotnet",
        "probe": {
          "id": "ScrubbedValue",
          "location": {
            "method": "Method",
            "type": "Samples.Probes.SmokeTests.AsyncWithGenericArgumentAndLocal+NestedAsyncGenericClass`1[[Samples.Probes.Shared.Generic, Samples.Probes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=def86d061d0d2eeb]]"
          }
        },
        "stack": [],
        "timestamp": "ScrubbedValue"
      }
    },
    "logger": {
      "method": "Method",
      "name": "Samples.Probes.SmokeTests.AsyncWithGenericArgumentAndLocal+NestedAsyncGenericClass`1[[Samples.Probes.Shared.Generic, Samples.Probes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=def86d061d0d2eeb]]",
      "thread_id": "ScrubbedValue",
      "thread_name": "ScrubbedValue",
      "version": "2"
    },
    "message": "AsyncWithGenericArgumentAndLocal+NestedAsyncGenericClass`1+<Method>d__6.MoveNext(generic=NestedAsyncGenericClass`1, input=.RunAsync): AsyncWithGenericArgumentAndLocal.RunAsync.Hello.MethodSamples.Probes.Shared.Generic - Array\r\n@return=AsyncWithGenericArgumentAndLocal.RunAsync.Hello.MethodSamples.Probes.Shared.Generic - Array, list=count: 1, output=AsyncWithGenericArgumentAndLocal.RunAsync.Hello.",
    "service": "probes"
  }
]