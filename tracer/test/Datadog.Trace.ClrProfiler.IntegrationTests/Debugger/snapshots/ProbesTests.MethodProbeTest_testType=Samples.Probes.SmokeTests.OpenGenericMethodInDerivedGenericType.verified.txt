{
  captures: {
    entry: {
      arguments: {
        gen: {
          fields: {
            Message: {
              type: String,
              value: Hello
            }
          },
          type: Generic,
          value: Generic
        },
        gen2: {
          type: OpenGenericMethodInDerivedGenericType,
          value: OpenGenericMethodInDerivedGenericType
        },
        k: {
          fields: {
            Message: {
              type: String,
              value: Hello
            }
          },
          type: Generic,
          value: Generic
        }
      },
      fields: {
        type: Test2`1,
        value: Test2`1
      }
    },
    return: {
      arguments: {
        gen: {
          fields: {
            Message: {
              type: String,
              value: Hello
            }
          },
          type: Generic,
          value: Generic
        },
        gen2: {
          type: OpenGenericMethodInDerivedGenericType,
          value: OpenGenericMethodInDerivedGenericType
        },
        k: {
          fields: {
            Message: {
              type: String,
              value: Hello
            }
          },
          type: Generic,
          value: Generic
        }
      },
      fields: {
        type: Test2`1,
        value: Test2`1
      },
      locals: {
        @return: {
          type: String,
          value: Samples.Probes.Shared.GenericSamples.Probes.SmokeTests.OpenGenericMethodInDerivedGenericTypeSamples.Probes.Shared.Generic
        },
        local_0: {
          type: String,
          value: Samples.Probes.SmokeTests.OpenGenericMethodInDerivedGenericType
        },
        local_1: {
          type: String,
          value: Samples.Probes.Shared.Generic
        }
      }
    }
  },
  id: Guid_Empty,
  language: dotnet,
  probe: {
    id: Guid_Empty,
    location: {
      method: Method,
      type: Samples.Probes.SmokeTests.OpenGenericMethodInDerivedGenericType+Test2`1
    }
  },
  span id: Guid_Empty,
  stack: [
    {
      fileName: OpenGenericMethodInDerivedGenericType.cs,
      method: Samples.Probes.SmokeTests.OpenGenericMethodInDerivedGenericType+Test2`1.Method
    },
    {
      fileName: OpenGenericMethodInDerivedGenericType.cs,
      method: Samples.Probes.SmokeTests.OpenGenericMethodInDerivedGenericType.Run
    },
    {
      method: Program.RunTest
    },
    {
      method: Program.Main
    },
    {
      method: Program.<Main>
    }
  ],
  thread: {
    id: 1,
    name: null
  },
  trace id: Guid_Empty,
  version: 1.0.0
}