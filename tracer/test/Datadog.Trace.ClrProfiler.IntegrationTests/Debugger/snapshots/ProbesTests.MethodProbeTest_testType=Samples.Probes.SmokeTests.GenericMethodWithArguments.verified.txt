{
  ddsource: dd_debugger,
  ddtags: Unknown,
  debugger: {
    snapshot: {
      captures: {
        entry: {
          arguments: {
            genericParam: {
              fields: {
                Address: {
                  fields: {
                    City: {
                      fields: {
                        Name: {
                          fields: null,
                          type: String,
                          value: null
                        },
                        Type: {
                          fields: null,
                          type: PlaceType,
                          value: City
                        }
                      },
                      type: Place,
                      value: Place
                    },
                    HomeType: {
                      fields: null,
                      type: BuildingType,
                      value: Duplex
                    },
                    Number: {
                      fields: null,
                      type: Int32,
                      value: 5
                    },
                    Street: {
                      fields: null,
                      type: String,
                      value: Elsewhere
                    }
                  },
                  type: Address,
                  value: Address
                },
                Age: {
                  fields: null,
                  type: Double,
                  value: 30
                },
                Children: {
                  fields: null,
                  type: List`1,
                  value: null
                },
                Id: {
                  fields: null,
                  type: Guid,
                  value: Guid_1
                },
                Name: {
                  fields: null,
                  type: String,
                  value: Alfred Hitchcock
                },
                _shouldCloned: {
                  fields: null,
                  type: Int32,
                  value: 30
                }
              },
              type: Person,
              value: Person
            }
          },
          fields: {
            Prop: {
              fields: null,
              type: String,
              value: GenericMethodWithArguments
            }
          }
        },
        return: {
          arguments: {
            genericParam: {
              fields: {
                Address: {
                  fields: {
                    City: {
                      fields: {
                        Name: {
                          fields: null,
                          type: String,
                          value: null
                        },
                        Type: {
                          fields: null,
                          type: PlaceType,
                          value: City
                        }
                      },
                      type: Place,
                      value: Place
                    },
                    HomeType: {
                      fields: null,
                      type: BuildingType,
                      value: Duplex
                    },
                    Number: {
                      fields: null,
                      type: Int32,
                      value: 5
                    },
                    Street: {
                      fields: null,
                      type: String,
                      value: Elsewhere
                    }
                  },
                  type: Address,
                  value: Address
                },
                Age: {
                  fields: null,
                  type: Double,
                  value: 30
                },
                Children: {
                  fields: null,
                  type: List`1,
                  value: null
                },
                Id: {
                  fields: null,
                  type: Guid,
                  value: Guid_1
                },
                Name: {
                  fields: null,
                  type: String,
                  value: Alfred Hitchcock
                },
                _shouldCloned: {
                  fields: null,
                  type: Int32,
                  value: 30
                }
              },
              type: Person,
              value: Person
            }
          },
          fields: {
            Prop: {
              fields: null,
              type: String,
              value: GenericMethodWithArguments
            }
          },
          locals: {
            @return: {
              fields: null,
              type: String,
              value: Alfred Hitchcock (30)
            }
          }
        }
      },
      language: dotnet,
      probe: {
        id: Guid_Empty,
        location: {
          method: Method,
          type: Samples.Probes.SmokeTests.GenericMethodWithArguments
        }
      },
      stack: [
        {
          fileName: GenericMethodWithArgumentsAndLocals.cs,
          function: Samples.Probes.SmokeTests.GenericMethodWithArguments.Method,
        },
        {
          fileName: GenericMethodWithArgumentsAndLocals.cs,
          function: Samples.Probes.SmokeTests.GenericMethodWithArguments.Run,
        },
        {
          function: Program.RunTest,
        },
        {
          function: Program.Main,
        },
        {
          function: Program.<Main>,
        }
      ]
    }
  },
  logger: {
    method: Samples.Probes.SmokeTests.GenericMethodWithArguments,
    name: Method,
    thread_id: 1,
    thread_name: null,
    version: 2
  },
  service: Unknown,
  span_id: null,
  trace_id: null
}