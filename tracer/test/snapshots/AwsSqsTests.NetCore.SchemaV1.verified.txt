[
  {
    TraceId: Id_1,
    SpanId: Id_2,
    Name: async-methods,
    Resource: async-methods,
    Service: Samples.AWS.SQS,
    Tags: {
      env: integration_tests,
      language: dotnet,
      runtime-id: Guid_1,
      _dd.p.dm: -0
    },
    Metrics: {
      process_id: 0,
      _dd.agent_psr: 1.0,
      _dd.top_level: 1.0,
      _dd.tracer_kr: 1.0,
      _sampling_priority_v1: 1.0
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_3,
    Name: aws.sqs.request,
    Resource: SQS.CreateQueue,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: CreateQueue,
      aws.queue.name: MyAsyncSQSQueue,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/,
      peer.service: MyAsyncSQSQueue,
      span.kind: client,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_4,
    Name: aws.sqs.request,
    Resource: SQS.CreateQueue,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: CreateQueue,
      aws.queue.name: MyAsyncSQSQueue2,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/,
      peer.service: MyAsyncSQSQueue2,
      span.kind: client,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_5,
    Name: http.client.request,
    Resource: POST localhost:00000/,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      component: HttpMessageHandler,
      env: integration_tests,
      http-client-handler-type: System.Net.Http.HttpClientHandler,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/,
      out.host: aws_sqs,
      peer.service: aws_sqs,
      span.kind: client,
      _dd.peer.service.source: out.host
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_6,
    Name: http.client.request,
    Resource: POST localhost:00000/,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      component: HttpMessageHandler,
      env: integration_tests,
      http-client-handler-type: System.Net.Http.HttpClientHandler,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/,
      out.host: aws_sqs,
      peer.service: aws_sqs,
      span.kind: client,
      _dd.peer.service.source: out.host
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_7,
    Name: http.client.request,
    Resource: POST localhost:00000/,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      component: HttpMessageHandler,
      env: integration_tests,
      http-client-handler-type: System.Net.Http.HttpClientHandler,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/,
      out.host: aws_sqs,
      peer.service: aws_sqs,
      span.kind: client,
      _dd.peer.service.source: out.host
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_8,
    Name: http.client.request,
    Resource: POST localhost:00000/?/MyAsyncSQSQueue,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      component: HttpMessageHandler,
      env: integration_tests,
      http-client-handler-type: System.Net.Http.HttpClientHandler,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      out.host: aws_sqs,
      peer.service: aws_sqs,
      span.kind: client,
      _dd.peer.service.source: out.host
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_9,
    Name: http.client.request,
    Resource: POST localhost:00000/?/MyAsyncSQSQueue2,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      component: HttpMessageHandler,
      env: integration_tests,
      http-client-handler-type: System.Net.Http.HttpClientHandler,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      out.host: aws_sqs,
      peer.service: aws_sqs,
      span.kind: client,
      _dd.peer.service.source: out.host
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_10,
    Name: aws.sqs.send,
    Resource: SQS.SendMessage,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: SendMessage,
      aws.queue.name: MyAsyncSQSQueue,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      peer.service: MyAsyncSQSQueue,
      span.kind: producer,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_11,
    Name: aws.sqs.process,
    Resource: SQS.ReceiveMessage,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: ReceiveMessage,
      aws.queue.name: MyAsyncSQSQueue,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      language: dotnet,
      span.kind: consumer
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_12,
    Name: aws.sqs.request,
    Resource: SQS.DeleteMessage,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: DeleteMessage,
      aws.queue.name: MyAsyncSQSQueue,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      peer.service: MyAsyncSQSQueue,
      span.kind: client,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_13,
    Name: aws.sqs.send,
    Resource: SQS.SendMessageBatch,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: SendMessageBatch,
      aws.queue.name: MyAsyncSQSQueue2,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      peer.service: MyAsyncSQSQueue2,
      span.kind: producer,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_14,
    Name: aws.sqs.process,
    Resource: SQS.ReceiveMessage,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: ReceiveMessage,
      aws.queue.name: MyAsyncSQSQueue2,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      language: dotnet,
      span.kind: consumer
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_15,
    Name: aws.sqs.request,
    Resource: SQS.DeleteMessageBatch,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: DeleteMessageBatch,
      aws.queue.name: MyAsyncSQSQueue,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      peer.service: MyAsyncSQSQueue,
      span.kind: client,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_16,
    Name: aws.sqs.send,
    Resource: SQS.SendMessage,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: SendMessage,
      aws.queue.name: MyAsyncSQSQueue,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      peer.service: MyAsyncSQSQueue,
      span.kind: producer,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_17,
    Name: aws.sqs.process,
    Resource: SQS.ReceiveMessage,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: ReceiveMessage,
      aws.queue.name: MyAsyncSQSQueue,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      language: dotnet,
      span.kind: consumer
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_18,
    Name: aws.sqs.request,
    Resource: SQS.DeleteMessage,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: DeleteMessage,
      aws.queue.name: MyAsyncSQSQueue,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      peer.service: MyAsyncSQSQueue,
      span.kind: client,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_19,
    Name: aws.sqs.send,
    Resource: SQS.SendMessageBatch,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: SendMessageBatch,
      aws.queue.name: MyAsyncSQSQueue2,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      peer.service: MyAsyncSQSQueue2,
      span.kind: producer,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_20,
    Name: aws.sqs.process,
    Resource: SQS.ReceiveMessage,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: ReceiveMessage,
      aws.queue.name: MyAsyncSQSQueue2,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      language: dotnet,
      span.kind: consumer
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_21,
    Name: aws.sqs.request,
    Resource: SQS.DeleteMessageBatch,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: DeleteMessageBatch,
      aws.queue.name: MyAsyncSQSQueue,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      peer.service: MyAsyncSQSQueue,
      span.kind: client,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_22,
    Name: aws.sqs.send,
    Resource: SQS.SendMessage,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: SendMessage,
      aws.queue.name: MyAsyncSQSQueue,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      peer.service: MyAsyncSQSQueue,
      span.kind: producer,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_23,
    Name: aws.sqs.send,
    Resource: SQS.SendMessage,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: SendMessage,
      aws.queue.name: MyAsyncSQSQueue,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      peer.service: MyAsyncSQSQueue,
      span.kind: producer,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_24,
    Name: aws.sqs.process,
    Resource: SQS.ReceiveMessage,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: ReceiveMessage,
      aws.queue.name: MyAsyncSQSQueue,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      language: dotnet,
      span.kind: consumer
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_25,
    Name: aws.sqs.request,
    Resource: SQS.DeleteMessage,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: DeleteMessage,
      aws.queue.name: MyAsyncSQSQueue,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      peer.service: MyAsyncSQSQueue,
      span.kind: client,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_26,
    Name: aws.sqs.process,
    Resource: SQS.ReceiveMessage,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: ReceiveMessage,
      aws.queue.name: MyAsyncSQSQueue,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      language: dotnet,
      span.kind: consumer
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_27,
    Name: aws.sqs.request,
    Resource: SQS.DeleteMessage,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: DeleteMessage,
      aws.queue.name: MyAsyncSQSQueue,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      peer.service: MyAsyncSQSQueue,
      span.kind: client,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_28,
    Name: aws.sqs.send,
    Resource: SQS.SendMessageBatch,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: SendMessageBatch,
      aws.queue.name: MyAsyncSQSQueue2,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      peer.service: MyAsyncSQSQueue2,
      span.kind: producer,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_29,
    Name: aws.sqs.send,
    Resource: SQS.SendMessageBatch,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: SendMessageBatch,
      aws.queue.name: MyAsyncSQSQueue2,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      peer.service: MyAsyncSQSQueue2,
      span.kind: producer,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_30,
    Name: aws.sqs.process,
    Resource: SQS.ReceiveMessage,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: ReceiveMessage,
      aws.queue.name: MyAsyncSQSQueue2,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      language: dotnet,
      span.kind: consumer
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_31,
    Name: aws.sqs.request,
    Resource: SQS.DeleteMessageBatch,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: DeleteMessageBatch,
      aws.queue.name: MyAsyncSQSQueue2,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      peer.service: MyAsyncSQSQueue2,
      span.kind: client,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_32,
    Name: aws.sqs.process,
    Resource: SQS.ReceiveMessage,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: ReceiveMessage,
      aws.queue.name: MyAsyncSQSQueue2,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      language: dotnet,
      span.kind: consumer
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_33,
    Name: aws.sqs.request,
    Resource: SQS.DeleteMessageBatch,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: DeleteMessageBatch,
      aws.queue.name: MyAsyncSQSQueue2,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      peer.service: MyAsyncSQSQueue2,
      span.kind: client,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_34,
    Name: aws.sqs.request,
    Resource: SQS.DeleteQueue,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: DeleteQueue,
      aws.queue.name: MyAsyncSQSQueue,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue,
      peer.service: MyAsyncSQSQueue,
      span.kind: client,
      _dd.peer.service.source: aws.queue.name
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_35,
    Name: aws.sqs.request,
    Resource: SQS.DeleteQueue,
    Service: Samples.AWS.SQS,
    Type: http,
    ParentId: Id_2,
    Tags: {
      aws.agent: dotnet-aws-sdk,
      aws.operation: DeleteQueue,
      aws.queue.name: MyAsyncSQSQueue2,
      aws.queue.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      aws.requestId: Guid_Empty,
      aws.service: SQS,
      component: aws-sdk,
      env: integration_tests,
      http.method: POST,
      http.status_code: 200,
      http.url: http://localhost:00000/000000000000/MyAsyncSQSQueue2,
      peer.service: MyAsyncSQSQueue2,
      span.kind: client,
      _dd.peer.service.source: aws.queue.name
    }
  }
]