[
  {
    TraceId: Id_1,
    SpanId: Id_2,
    Name: aspnet_core.request,
    Resource: GET /graphql,
    Service: Samples.GraphQL,
    Type: web,
    Tags: {
      component: aspnet_core,
      env: integration_tests,
      http.method: GET,
      http.request.headers.host: localhost:00000,
      http.status_code: 200,
      http.url: http://localhost:00000/graphql?query=query%7Bhero%7Bname+appearsIn%7D%7D,
      http.useragent: testhelper,
      language: dotnet,
      runtime-id: Guid_1,
      span.kind: server,
      version: 1.0.0,
      _dd.p.dm: -0
    },
    Metrics: {
      process_id: 0,
      _dd.agent_psr: 1.0,
      _dd.top_level: 1.0,
      _dd.tracer_kr: 1.0,
      _sampling_priority_v1: 1.0
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_3,
    Name: graphql.validate,
    Resource: graphql.validate,
    Service: Samples.GraphQL,
    Type: graphql,
    ParentId: Id_2,
    Tags: {
      component: GraphQL,
      env: integration_tests,
      graphql.source: query{hero{name appearsIn}},
      language: dotnet,
      span.kind: server,
      version: 1.0.0
    }
  },
  {
    TraceId: Id_1,
    SpanId: Id_4,
    Name: graphql.execute,
    Resource: Query operation,
    Service: Samples.GraphQL,
    Type: graphql,
    ParentId: Id_2,
    Tags: {
      component: GraphQL,
      env: integration_tests,
      graphql.operation.type: Query,
      graphql.source: query{hero{name appearsIn}},
      language: dotnet,
      span.kind: server,
      version: 1.0.0
    }
  },
  {
    TraceId: Id_5,
    SpanId: Id_6,
    Name: aspnet_core.request,
    Resource: POST /graphql,
    Service: Samples.GraphQL,
    Type: web,
    Tags: {
      component: aspnet_core,
      env: integration_tests,
      http.method: POST,
      http.request.headers.host: localhost:00000,
      http.status_code: 200,
      http.url: http://localhost:00000/graphql,
      http.useragent: testhelper,
      language: dotnet,
      runtime-id: Guid_1,
      span.kind: server,
      version: 1.0.0,
      _dd.p.dm: -0
    },
    Metrics: {
      process_id: 0,
      _dd.agent_psr: 1.0,
      _dd.top_level: 1.0,
      _dd.tracer_kr: 1.0,
      _sampling_priority_v1: 1.0
    }
  },
  {
    TraceId: Id_7,
    SpanId: Id_8,
    Name: aspnet_core.request,
    Resource: POST /graphql,
    Service: Samples.GraphQL,
    Type: web,
    Tags: {
      component: aspnet_core,
      env: integration_tests,
      http.method: POST,
      http.request.headers.host: localhost:00000,
      http.status_code: 200,
      http.url: http://localhost:00000/graphql,
      http.useragent: testhelper,
      language: dotnet,
      runtime-id: Guid_1,
      span.kind: server,
      version: 1.0.0,
      _dd.p.dm: -0
    },
    Metrics: {
      process_id: 0,
      _dd.agent_psr: 1.0,
      _dd.top_level: 1.0,
      _dd.tracer_kr: 1.0,
      _sampling_priority_v1: 1.0
    }
  },
  {
    TraceId: Id_9,
    SpanId: Id_10,
    Name: aspnet_core.request,
    Resource: POST /graphql,
    Service: Samples.GraphQL,
    Type: web,
    Tags: {
      component: aspnet_core,
      env: integration_tests,
      http.method: POST,
      http.request.headers.host: localhost:00000,
      http.status_code: 200,
      http.url: http://localhost:00000/graphql,
      http.useragent: testhelper,
      language: dotnet,
      runtime-id: Guid_1,
      span.kind: server,
      version: 1.0.0,
      _dd.p.dm: -0
    },
    Metrics: {
      process_id: 0,
      _dd.agent_psr: 1.0,
      _dd.top_level: 1.0,
      _dd.tracer_kr: 1.0,
      _sampling_priority_v1: 1.0
    }
  },
  {
    TraceId: Id_11,
    SpanId: Id_12,
    Name: aspnet_core.request,
    Resource: POST /graphql,
    Service: Samples.GraphQL,
    Type: web,
    Tags: {
      component: aspnet_core,
      env: integration_tests,
      http.method: POST,
      http.request.headers.host: localhost:00000,
      http.status_code: 200,
      http.url: http://localhost:00000/graphql,
      http.useragent: testhelper,
      language: dotnet,
      runtime-id: Guid_1,
      span.kind: server,
      version: 1.0.0,
      _dd.p.dm: -0
    },
    Metrics: {
      process_id: 0,
      _dd.agent_psr: 1.0,
      _dd.top_level: 1.0,
      _dd.tracer_kr: 1.0,
      _sampling_priority_v1: 1.0
    }
  },
  {
    TraceId: Id_13,
    SpanId: Id_14,
    Name: aspnet_core.request,
    Resource: POST /graphql,
    Service: Samples.GraphQL,
    Type: web,
    Tags: {
      component: aspnet_core,
      env: integration_tests,
      http.method: POST,
      http.request.headers.host: localhost:00000,
      http.status_code: 200,
      http.url: http://localhost:00000/graphql,
      http.useragent: testhelper,
      language: dotnet,
      runtime-id: Guid_1,
      span.kind: server,
      version: 1.0.0,
      _dd.p.dm: -0
    },
    Metrics: {
      process_id: 0,
      _dd.agent_psr: 1.0,
      _dd.top_level: 1.0,
      _dd.tracer_kr: 1.0,
      _sampling_priority_v1: 1.0
    }
  },
  {
    TraceId: Id_5,
    SpanId: Id_15,
    Name: graphql.validate,
    Resource: graphql.validate,
    Service: Samples.GraphQL,
    Type: graphql,
    ParentId: Id_6,
    Tags: {
      component: GraphQL,
      env: integration_tests,
      graphql.source: query HeroQuery{hero {name appearsIn}},
      language: dotnet,
      span.kind: server,
      version: 1.0.0
    }
  },
  {
    TraceId: Id_5,
    SpanId: Id_16,
    Name: graphql.execute,
    Resource: Query HeroQuery,
    Service: Samples.GraphQL,
    Type: graphql,
    ParentId: Id_6,
    Tags: {
      component: GraphQL,
      env: integration_tests,
      graphql.operation.name: HeroQuery,
      graphql.operation.type: Query,
      graphql.source: query HeroQuery{hero {name appearsIn}},
      language: dotnet,
      span.kind: server,
      version: 1.0.0
    }
  },
  {
    TraceId: Id_7,
    SpanId: Id_17,
    Name: graphql.validate,
    Resource: graphql.validate,
    Service: Samples.GraphQL,
    Type: graphql,
    ParentId: Id_8,
    Tags: {
      component: GraphQL,
      env: integration_tests,
      graphql.source: mutation AddBobaFett($human:HumanInput!){createHuman(human: $human){id name}},
      language: dotnet,
      span.kind: server,
      version: 1.0.0
    }
  },
  {
    TraceId: Id_7,
    SpanId: Id_18,
    Name: graphql.execute,
    Resource: Mutation AddBobaFett,
    Service: Samples.GraphQL,
    Type: graphql,
    ParentId: Id_8,
    Tags: {
      component: GraphQL,
      env: integration_tests,
      graphql.operation.name: AddBobaFett,
      graphql.operation.type: Mutation,
      graphql.source: mutation AddBobaFett($human:HumanInput!){createHuman(human: $human){id name}},
      language: dotnet,
      span.kind: server,
      version: 1.0.0
    }
  },
  {
    TraceId: Id_9,
    SpanId: Id_19,
    Name: graphql.validate,
    Resource: graphql.validate,
    Service: Samples.GraphQL,
    Type: graphql,
    ParentId: Id_10,
    Tags: {
      component: GraphQL,
      env: integration_tests,
      graphql.source: subscription HumanAddedSub{humanAdded{name}},
      language: dotnet,
      span.kind: server,
      version: 1.0.0
    }
  },
  {
    TraceId: Id_9,
    SpanId: Id_20,
    Name: graphql.execute,
    Resource: Subscription HumanAddedSub,
    Service: Samples.GraphQL,
    Type: graphql,
    ParentId: Id_10,
    Tags: {
      component: GraphQL,
      env: integration_tests,
      graphql.operation.name: HumanAddedSub,
      graphql.operation.type: Subscription,
      graphql.source: subscription HumanAddedSub{humanAdded{name}},
      language: dotnet,
      span.kind: server,
      version: 1.0.0
    }
  },
  {
    TraceId: Id_11,
    SpanId: Id_21,
    Name: graphql.validate,
    Resource: graphql.validate,
    Service: Samples.GraphQL,
    Type: graphql,
    ParentId: Id_12,
    Error: 1,
    Tags: {
      component: GraphQL,
      env: integration_tests,
      error.msg: 2 error(s),
      error.stack:
errors: [
{
"message": "Argument "id" has invalid value 1.\nExpected type "String", found 1.",
"code": "5.3.3.1",
"locations": [
{
"line": 1,
"column": 24
},
]
},
{
"message": "Cannot query field "apearsIn" on type "Human". Did you mean 'appearsIn'?",
"code": "5.2.1",
"locations": [
{
"line": 1,
"column": 35
},
]
},
]
,
      error.type: GraphQL.Validation.ValidationError,
      graphql.source: query HumanError{human(id:1){name apearsIn}},
      language: dotnet,
      span.kind: server,
      version: 1.0.0
    }
  },
  {
    TraceId: Id_13,
    SpanId: Id_22,
    Name: graphql.validate,
    Resource: graphql.validate,
    Service: Samples.GraphQL,
    Type: graphql,
    ParentId: Id_14,
    Tags: {
      component: GraphQL,
      env: integration_tests,
      graphql.source: subscription NotImplementedSub{throwNotImplementedException{name}},
      language: dotnet,
      span.kind: server,
      version: 1.0.0
    }
  },
  {
    TraceId: Id_13,
    SpanId: Id_23,
    Name: graphql.execute,
    Resource: Subscription NotImplementedSub,
    Service: Samples.GraphQL,
    Type: graphql,
    ParentId: Id_14,
    Error: 1,
    Tags: {
      component: GraphQL,
      env: integration_tests,
      error.msg: 1 error(s),
      error.stack:
errors: [
{
"message": "Error trying to resolve throwNotImplementedException.",
"path": "System.String[]",
"code": "NOT_IMPLEMENTED",
"locations": [
{
"line": 1,
"column": 32
},
]
},
]
,
      error.type: GraphQL.ExecutionError,
      graphql.operation.name: NotImplementedSub,
      graphql.operation.type: Subscription,
      graphql.source: subscription NotImplementedSub{throwNotImplementedException{name}},
      language: dotnet,
      span.kind: server,
      version: 1.0.0
    }
  }
]