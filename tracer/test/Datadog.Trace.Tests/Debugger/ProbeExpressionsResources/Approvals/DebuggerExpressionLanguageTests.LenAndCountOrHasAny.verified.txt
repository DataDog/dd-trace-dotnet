Condition:
Json:{
  "dsl": "len(ref String) > 2 || count(ref CollectionLocal) > 2 || hasAny(filter(ref CollectionLocal {@it > 4}) { @it == hello})",
  "json": {
    "and": [
      {
        "gt": [
          {
            "len": [
              {
                "ref": "String"
              }
            ]
          },
          2
        ]
      },
      {
        "or": [
          {
            "gt": [
              {
                "count": [
                  {
                    "ref": "CollectionLocal"
                  }
                ]
              },
              2
            ]
          },
          {
            "hasAny": [
              {
                "filter": [
                  {
                    "ref": "CollectionLocal"
                  },
                  {
                    "gt": [
                      {
                        "len": "@it"
                      },
                      4
                    ]
                  }
                ]
              },
              {
                "eq": [
                  "@it",
                  "hello"
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "ignored": true
}
Expression: (scopeMember, scopeMemberArray) =>
{
    var this = (DebuggerExpressionLanguageTests.TestStruct)scopeMember.Value;
    var IntLocal = (int)scopeMemberArray[0].Value;
    var DoubleLocal = (double)scopeMemberArray[1].Value;
    var StringLocal = (string)scopeMemberArray[2].Value;
    var CollectionLocal = (List<string>)scopeMemberArray[3].Value;
    var NestedObjectLocal = (DebuggerExpressionLanguageTests.TestStruct.NestedObject)scopeMemberArray[4].Value;
    var IntArg = (int)scopeMemberArray[5].Value;
    var DoubleArg = (double)scopeMemberArray[6].Value;
    var StringArg = (string)scopeMemberArray[7].Value;
    var CollectionArg = (List<string>)scopeMemberArray[8].Value;
    var NestedObjectArg = (DebuggerExpressionLanguageTests.TestStruct.NestedObject)scopeMemberArray[9].Value;
    var $result = (this.String.Length > 2) && ((CollectionLocal.Count > 2) || CollectionLocal
        .Where(string1 => string1.Length > 4)
        .ToList()
        .Any(string2 => string2 == "hello"));

    return $result;
}
Result: True
