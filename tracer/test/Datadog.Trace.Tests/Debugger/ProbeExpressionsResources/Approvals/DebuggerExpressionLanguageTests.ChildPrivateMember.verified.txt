Template:
Segments: 

{
  "eq": [
    {
      "getmember": [
        {
          "ref": "ParentAsChildNested"
        },
        "_childPrivateMember"
      ]
    },
    "Hello from child private member"
  ]
}
Expressions: 
(
    scopeMember,
    scopeMember,
    scopeMember,
    exception,
    scopeMemberArray) =>
{
    string $dd_el_result;
    var this = (DebuggerExpressionLanguageTests.TestStruct)scopeMember.Value;
    var @return = (string)scopeMember.Value;
    var @duration = (TimeSpan)scopeMember.Value;
    var @exception = exception;
    var IntLocal = (int)scopeMemberArray[0].Value;
    var DoubleLocal = (double)scopeMemberArray[1].Value;
    var StringLocal = (string)scopeMemberArray[2].Value;
    var CollectionLocal = (List<string>)scopeMemberArray[3].Value;
    var ArrayLocal = (string[])scopeMemberArray[4].Value;
    var CustomArrayLocal = (DebuggerExpressionLanguageTests.TestStruct.NestedObject[])scopeMemberArray[5].Value;
    var DictionaryLocal = (Dictionary<string, string>)scopeMemberArray[6].Value;
    var NestedObjectLocal = (DebuggerExpressionLanguageTests.TestStruct.NestedObject)scopeMemberArray[7].Value;
    var NullLocal = (DebuggerExpressionLanguageTests.TestStruct.NestedObject)scopeMemberArray[8].Value;
    var BooleanValue = (bool)scopeMemberArray[9].Value;
    var Char = (char)scopeMemberArray[10].Value;
    var AnotherChar = (char)scopeMemberArray[11].Value;
    var NullableNotNullValueLocal = (Guid?)scopeMemberArray[12].Value;
    var NullableNullValueLocal = (Guid?)scopeMemberArray[13].Value;
    var IntArg = (int)scopeMemberArray[14].Value;
    var DoubleArg = (double)scopeMemberArray[15].Value;
    var StringArg = (string)scopeMemberArray[16].Value;
    var CollectionArg = (List<string>)scopeMemberArray[17].Value;
    var NestedObjectArg = (DebuggerExpressionLanguageTests.TestStruct.NestedObject)scopeMemberArray[18].Value;

    return "UndefinedValue";
}
Result: The result of the expression is: UndefinedValue
Errors:
EvaluationError { Expression = this.ParentAsChildNested._childPrivateMember, Message = The property or field does not exist in Datadog.Trace.Tests.Debugger.DebuggerExpressionLanguageTests+TestStruct+NestedObject }
