Json: {
  "dsl": "hasAll(#CollectionLocal, { len(@it) > 3 })",
  "json": {
    "hasAll": [
      "#CollectionLocal",
      {
        "gt": [
          { "len": "@it" },
          3
        ]
      }
    ]
  },
  "ignored": true
}
Expression: (scopeMember, scopeMemberArray) =>
{
    var this = (DebuggerExpressionLanguageTests.TestStruct)scopeMember.Value;
    var IntLocal = (int)scopeMemberArray[0].Value;
    var DoubleLocal = (double)scopeMemberArray[1].Value;
    var StringLocal = (string)scopeMemberArray[2].Value;
    var CollectionLocal = (List<string>)scopeMemberArray[3].Value;
    var NestedObjectLocal = (DebuggerExpressionLanguageTests.TestStruct.NestedObject)scopeMemberArray[4].Value;
    var IntArg = (int)scopeMemberArray[5].Value;
    var DoubleArg = (double)scopeMemberArray[6].Value;
    var StringArg = (string)scopeMemberArray[7].Value;
    var CollectionArg = (List<string>)scopeMemberArray[8].Value;
    var NestedObjectArg = (DebuggerExpressionLanguageTests.TestStruct.NestedObject)scopeMemberArray[9].Value;
    var $result = CollectionLocal.All(@string => @string.Length > 3);

    return $result;
}
Result: True