<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <LangVersion>latest</LangVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <AssemblyName>Datadog.AutoInstrumentation.Profiler.Managed</AssemblyName>
    <Platforms>AnyCPU;x64;x86</Platforms>
  </PropertyGroup>

  <PropertyGroup>
    <SharedAssetsBaseDir>$([System.IO.Path]::GetFullPath( $(EnlistmentRoot)\shared\ ))</SharedAssetsBaseDir>
    <SharedSrcBaseDir>$([System.IO.Path]::GetFullPath( $(SharedAssetsBaseDir)\src\managed-src\ ))</SharedSrcBaseDir>
    <SharedSrcBaseLabel>Shared-Src</SharedSrcBaseLabel>
  </PropertyGroup>

  <PropertyGroup>
      <SignAssembly>true</SignAssembly>
      <AssemblyOriginatorKeyFile>$(SharedAssetsBaseDir)\resources\Datadog.Trace.snk</AssemblyOriginatorKeyFile>
      <DelaySign>false</DelaySign>
  </PropertyGroup>

  <!-- Datadog.Logging.Emission.props is required for emitting logs: -->
  <Import Project="$(SharedSrcBaseDir)\Datadog.Logging\Datadog.Logging.Emission.props" Condition="$(LogEmissionPropsIncluded) == ''" />

  <!-- Datadog.Logging.Composition.props is required for composing logs and chosing a log sink: -->
  <Import Project="$(SharedSrcBaseDir)\Datadog.Logging\Datadog.Logging.Composition.props" Condition="$(LogCompositionPropsIncluded) == ''" />

  <ItemGroup>
    <!-- The files in this section are shared across projects and are located outside the root folder of this project.              -->
    <!-- To ensure that this is clearly visible to the user, we group these files in a virtual folder named 'Shared-Src'.           -->
    <!-- See the $(SharedSrcBaseLabel) definition. We use the 'Link' property to place them into that folder.                       -->
    <!-- (We do not use 'LinkBase' because we use the same approach in classic project files and they do not support 'LinkBase'.)   -->
    <!-- The virtual subfolder is calculated using their relative file location within $(SharedSrcBaseDir).                         -->
    <!-- Note that we could also use a direct approach and avoid the doubly-negated item lists. E.g.:                               -->
    <!--     <Compile Link="$(SharedSrcBaseLabel)\Datadog.Package.Name\internal\%(Filename)%(Extension)"                            -->
    <!--              Include="$(SharedSrcBaseDir)\Datadog.Package.Name\internal\SourceFileName.cs" />                              -->
    <!-- The current approach is used to avoid redundantly specifying the relative path.                                            -->

    <IncludedSharedCompileItem Include="$(SharedSrcBaseDir)\Datadog.Util\internal\Format.cs" />
    <IncludedSharedCompileItem Include="$(SharedSrcBaseDir)\Datadog.Util\internal\Validate.cs" />
    <IncludedSharedCompileItem Include="$(SharedSrcBaseDir)\Datadog.Util\internal\Converter.cs" />
	  <IncludedSharedCompileItem Include="$(SharedSrcBaseDir)\Datadog.Util\internal\Concurrent.cs" />
    <IncludedSharedCompileItem Include="$(SharedSrcBaseDir)\Datadog.Util\internal\HResult.cs" />
    <IncludedSharedCompileItem Include="$(SharedSrcBaseDir)\Datadog.Util\internal\ExceptionExtensions.cs" />
    <IncludedSharedCompileItem Include="$(SharedSrcBaseDir)\Datadog.Util\internal\ExceptionAggregator.cs" />
    <IncludedSharedCompileItem Include="$(SharedSrcBaseDir)\Datadog.Util\internal\RuntimeEnvironmentInfo.cs" />
    <IncludedSharedCompileItem Include="$(SharedSrcBaseDir)\Datadog.Util\internal\CurrentProcess.cs" />
    <IncludedSharedCompileItem Include="$(SharedSrcBaseDir)\Datadog.Collections\internal\GrowingCollection.cs" />

    <ExcludedSharedCompileItems Link="ExcludedSharedCompileItems\%(RecursiveDir)\%(Filename)%(Extension)" Include="$(SharedSrcBaseDir)\**\*.cs" Exclude="@(IncludedSharedCompileItem)" />
    <Compile Link="$(SharedSrcBaseLabel)\%(RecursiveDir)\%(Filename)%(Extension)" Include="$(SharedSrcBaseDir)\**\*.cs" Exclude="@(ExcludedSharedCompileItems)" />

    <!-- This ensures that ExcludedSharedCompileItems is not rendered in the Solution Explorer for Classic Projects:                -->
    <ExcludedSharedCompileItems Remove="$(SharedSrcBaseDir)\**\*" />
  </ItemGroup>

  <PropertyGroup>
    <DebugPrintSharedItemGroups>false</DebugPrintSharedItemGroups>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Google.Protobuf" Version="3.7.0" />
  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('net4')) ">
    <Reference Include="System.Web" />
  </ItemGroup>

  <ItemGroup>
	<!-- This "service" is required for T4-templating. -->
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />

	<!-- Make sure the value of SharedSrcBaseDir is available in the T4 template: -->
    <T4ParameterValues Include="SharedSrcBaseDir">
      <Value>$(SharedSrcBaseDir)</Value>
    </T4ParameterValues>

    <None Update="Profiler\Log.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Log.cs</LastGenOutput>
    </None>

    <Compile Update="Profiler\Log.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Log.tt</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <!-- LogComposer.tt is a T4 template that refers to the LogComposer.tt.cs template referenced in Datadog.Logging.Composition.props.  -->
    <!-- It ensures that the Log Composition API is correctly generated.                                                                 -->
    <None Update="Logging.Composition\LogComposer.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>LogComposer.cs</LastGenOutput>
    </None>
    <Compile Update="Logging.Composition\LogComposer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>LogComposer.tt</DependentUpon>
    </Compile>
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net45|AnyCPU'">
    <!-- <RunAnalyzersDuringBuild>false</RunAnalyzersDuringBuild> -->
    <!--<AllowUnsafeBlocks>false</AllowUnsafeBlocks>-->
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net45|x86'" />

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net45|x64'" />

  <Target Name="DisplayMessages" AfterTargets="Compile" Condition="'$(DebugPrintSharedItemGroups)' ==  'true'">

    <Message Text=" " Importance="high" />
    <Message Text="----------- MSBuildProjectName='$(MSBuildProjectName)' (Configuration='$(Configuration)', TargetFramework='$(TargetFramework)', Platform='$(Platform)') {" Importance="high" />

    <Message Text="-- SharedSrcBaseDir = '$(SharedSrcBaseDir)'" Importance="high" />

	<Message Text="-- IncludedSharedCompileItem (@(IncludedSharedCompileItem-&gt;Count())) {" Importance="high" />
	<Message Text="    %(IncludedSharedCompileItem.Identity)" Importance="high" />
	<!-- <Message Text="    %(IncludedSharedCompileItem.FullPath) (%(IncludedSharedCompileItem.Identity))" Importance="high" /> -->
	<Message Text="-- }" Importance="high" />

	<Message Text="-- ExcludedSharedCompileItems (@(ExcludedSharedCompileItems-&gt;Count())) {" Importance="high" />
	<Message Text="    %(ExcludedSharedCompileItems.Identity)" Importance="high" />
	<!-- <Message Text="    %(ExcludedSharedCompileItems.FullPath) (%(ExcludedSharedCompileItems.Identity))" Importance="high" /> -->
	<Message Text="-- }" Importance="high" />

	<Message Text="-- Compile (@(Compile-&gt;Count())) {" Importance="high" />
	<Message Text="    %(Compile.Identity)" Importance="high" />
	<!-- <Message Text="    %(Compile.FullPath) (%(Compile.Identity))" Importance="high" /> -->
	<Message Text="-- }" Importance="high" />

	<Message Text="----------- } MSBuildProjectName='$(MSBuildProjectName)' (Configuration='$(Configuration)', TargetFramework='$(TargetFramework)', Platform='$(Platform)')" Importance="high" />
	<Message Text=" " Importance="high" />
  </Target>

</Project>