.setup:
  script:
    - mkdir -p ~/.aws
    - /app/bp-infra/tools/fetch-ssm-parameter.sh $AWS_EPHEMERAL_INFRA_PROFILE_SSM_PARAMETER > ~/.aws/config || exit $?
    - export AWS_PROFILE=ephemeral-infra-ci
    - export BP_INFRA_KEY_PAIR_NAME=$(cat ~/.aws/key-pair-name.txt)
    - export BP_INFRA_KEY_PAIR_PRIVATE_KEY_PATH=~/.aws/key-pair-private-key.pem

stages:
  - build
  - benchmarks

build-dd-trace-dotnet-microbenchmarks-ami:
  stage: build
  tags: ["arch:amd64"]
  timeout: 3h
  allow_failure: true
  image: registry.ddbuild.io/images/benchmarking-platform-tools-ubuntu:dd-trace-dotnet-micro
  # id_tokens:
  #   DDOCTOSTS_ID_TOKEN:
  #     aud: dd-octo-sts
  variables:
    AWS_REGION: "us-east-1"
    PROVISION_FILE: "platform/ephemeral-infra/ami.yaml"
    CLEANUP: "true"
    GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  # before_script:
  #   - |
  #     set +e
  #     error_output=$({ dd-octo-sts token --scope DataDog/dd-trace-dotnet --policy gitlab.github-access.read > "/tmp/github-token"; } 2>&1)
  #     exit_code=$?
  #     if [ $exit_code -ne 0 ]; then
  #       echo "ERROR: Failed to retrieve a GitHub token with dd-octo-sts gitlab.github-access.read policy."
  #       echo "Original error: $error_output"
  #       echo "Continuing execution anyway..."
  #     fi
  #     set -e
  script:
    - |
      if [ -z "$GITHUB_TOKEN" ]; then
        GITHUB_TOKEN=$(cat /tmp/github-token)
      fi
      echo "GITHUB_TOKEN=$GITHUB_TOKEN" > .env
    - RESULTS_BUCKET="s3://windows-benchmarking-results/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}/${CI_JOB_ID}"
    - CLEANUP_ARG=$([[ "$CLEANUP" == "false" ]] && echo "--no-cleanup" || echo "")
    - |
      bp-infra launch --region "${AWS_REGION}" --os "windows" \
        --provision "${PROVISION_FILE}" \
        --s3-bucket "${RESULTS_BUCKET}" \
        --bypass-stack-destroy \
        --env .env \
        $CLEANUP_ARG
  after_script:
    # Makes sure the instance is cleaned up.
    # Note: This does not clean up the created AMI.
    - |
      if [ "$CLEANUP" == "true" ]; then
        bp-infra cleanup --region "${AWS_REGION}" --os "windows" \
          --provision "${PROVISION_FILE}" \
          --bypass-stack-destroy
      else 
        echo "'CLEANUP' is set to 'false'. Will not cleanup."
      fi

run-benchmarks:
  stage: benchmarks
  tags: ["arch:amd64"]
  timeout: 2h
  # Image created in the following job https://gitlab.ddbuild.io/DataDog/benchmarking-platform-tools/-/jobs/869830045
  image: registry.ddbuild.io/images/benchmarking-platform-tools-ubuntu:dd-trace-dotnet-micro

  script:
    - git clone --branch dd-trace-dotnet/micro https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ddbuild.io/DataDog/benchmarking-platform platform
    - AWS_REGION=${AWS_REGION} ./platform/steps/launch-instance.sh
  after_script:
    - |
      bp-infra cleanup --provision ./platform/ephemeral-infra/ephemeral-instance-main.yaml \
        --region "${AWS_REGION}" \
        --bypass-stack-destroy
    - ./platform/steps/post-pr-comment.sh
    # Temporarily commented out pending issue resolution with sending files to backend
    # - ./platform/steps/upload-to-bp-ui.sh
    
  rules:
    - when: on_success
  variables:
    AWS_REGION: "us-east-1"

upload-to-bp-ui:
  stage: benchmarks
  tags: ["arch:amd64"]
  timeout: 1h
  # Image created in the following job https://gitlab.ddbuild.io/DataDog/benchmarking-platform-tools/-/jobs/869830045
  image: registry.ddbuild.io/images/benchmarking-platform-tools-ubuntu:dotnet-microbenchmarks

  script:
    - git clone --branch fayssal/test-micro-delivery https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ddbuild.io/DataDog/benchmarking-platform platform
    # - ./platform/steps/launch-instance.sh
    # - ./platform/steps/post-pr-comment.sh
    # Temporarely commented out pending issue resolution with sending files to backend
    - ./platform/steps/upload-to-bp-ui.sh

  artifacts:
    name: "artifacts"
    when: always
    paths:
      - candidate-results/
    expire_in: 3 months
    
  rules:
    - when: manual
  variables:
    AWS_REGION: "us-east-1"
    CLEANUP: "false"
    AWS_EPHEMERAL_INFRA_PROFILE_SSM_PARAMETER: "ci.dd-trace-dotnet.ephemeral-infra-ci.dd-trace-dotnet-profile"
    AWS_EPHEMERAL_INFRA_PROFILE_NAME: "ephemeral-infra-ci"
    AWS_EPHEMERAL_INFRA_ARTIFACTS_BUCKET_URI: "s3://windows-benchmarking-results/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME/$CI_JOB_ID"
    AWS_EPHEMERAL_INFRA_REGION: "us-east-1"
