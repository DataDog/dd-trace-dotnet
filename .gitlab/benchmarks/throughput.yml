.setup:
  script:
    - mkdir -p ~/.aws
    - /app/infra/tools/fetch-ssm-parameter.sh $AWS_EPHEMERAL_INFRA_PROFILE_SSM_PARAMETER > ~/.aws/config || exit $?
    - export AWS_PROFILE=ephemeral-infra-ci
    - export BP_INFRA_KEY_PAIR_NAME=$(cat ~/.aws/key-pair-name.txt)
    - export BP_INFRA_KEY_PAIR_PRIVATE_KEY_PATH=~/.aws/key-pair-private-key.pem

variables:
  BASE_CI_IMAGE: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/benchmarking-platform:dd-trace-dotnet-dsm

stages:
  - infra-update
  - benchmarks

check_azure_pipeline:
  stage: check-azure-pipeline
  image: $BASE_CI_IMAGE
  script:
    - git clone --branch dd-trace-dotnet/macro https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ddbuild.io/DataDog/benchmarking-platform platform && cd platform
    - ./wait-for-pipeline.sh
  artifacts:
    name: "artifacts"
    when: always
    paths:
      - artifacts/
      - build-id.txt
    expire_in: 3 months
  tags: ["arch:amd64"]
  timeout: 1h
  rules:
    - when: on_success

update-bp-infra:
  stage: infra-update
  tags: ["arch:amd64"]
  timeout: 3h
  allow_failure: true
  # Image created in the following job https://gitlab.ddbuild.io/DataDog/benchmarking-platform-tools/-/jobs/869830045
  image: registry.ddbuild.io/images/benchmarking-platform-tools-ubuntu:dotnet-microbenchmarks-2

  script:
    - git clone --branch dd-trace-dotnet/macro https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ddbuild.io/DataDog/benchmarking-platform platform
    - mkdir -p ~/.aws
    - /app/infra/tools/fetch-ssm-parameter.sh $AWS_EPHEMERAL_INFRA_PROFILE_SSM_PARAMETER >> ~/.aws/config || exit $?
    - aws ssm get-parameter --region "$AWS_REGION" --name "ci.${CI_PROJECT_NAME}.ephemeral-infra-ci.windows-benchmarking-key-pair-name" --with-decryption --query "Parameter.Value" --out text >> ~/.aws/key-pair-name.txt
    - aws ssm get-parameter --region "$AWS_REGION" --name "ci.${CI_PROJECT_NAME}.ephemeral-infra-ci.windows-benchmarking-key-private-key" --with-decryption --query "Parameter.Value" --out text >> ~/.aws/key-pair-private-key.pem
    - export AWS_PROFILE=ephemeral-infra-ci
    - export BP_INFRA_KEY_PAIR_NAME=$(cat ~/.aws/key-pair-name.txt)
    - export BP_INFRA_KEY_PAIR_PRIVATE_KEY_PATH=~/.aws/key-pair-private-key.pem
    - infra launch --no-cleanup --provision ./platform/ephemeral-infra/provisions/macrobenchmark-ami.yaml --region "${AWS_REGION}" --bypass-stack-destroy
  after_script:
    - !reference [.setup, script]
    - |
      infra cleanup --provision ./platform/ephemeral-infra/provisions/macrobenchmark-ami.yaml \
        --region "${AWS_REGION}" \
        --bypass-stack-destroy
  rules:
    - when: manual
  variables:
    FF_USE_LEGACY_KUBERNETES_EXECUTION_STRATEGY: "true"
    AWS_REGION: "us-east-1"
    CLEANUP: "false"
    AWS_EPHEMERAL_INFRA_PROFILE_SSM_PARAMETER: "ci.dd-trace-dotnet.ephemeral-infra-ci.dd-trace-dotnet-profile"
    AWS_EPHEMERAL_INFRA_PROFILE_NAME: "ephemeral-infra-ci"
    AWS_EPHEMERAL_INFRA_ARTIFACTS_BUCKET_URI: "s3://windows-benchmarking-results/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME/$CI_JOB_ID"
    AWS_EPHEMERAL_INFRA_REGION: "us-east-1"

throughput:
  stage: benchmarks
  when: on_success
  tags: ["runner:apm-k8s-same-cpu"]
  needs: ["check_azure_pipeline"]
  image: $BASE_CI_IMAGE
  interruptible: true
  timeout: 1h
  script:
    - export ARTIFACTS_DIR="$(pwd)/artifacts" && (mkdir "${ARTIFACTS_DIR}" || :)
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ddbuild.io/DataDog/".insteadOf "https://github.com/DataDog/"
    - git clone --branch dd-trace-dotnet/data-streams-monitoring https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ddbuild.io/DataDog/benchmarking-platform platform && cd platform
    - ./steps/setup-sut.sh
    - bp-runner bp-runner.yml --debug
  artifacts:
    name: "artifacts"
    when: always
    paths:
      - artifacts/
    expire_in: 3 months
  variables:
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: dd-trace-dotnet
    FF_USE_LEGACY_KUBERNETES_EXECUTION_STRATEGY: "true"
    NATIVE_PROFILER_PATH: "dd-trace-dotnet/tracer/tracer-home-linux/linux-x64/Datadog.Trace.ClrProfiler.Native.so"
    TRACER_HOME_PATH: "dd-trace-dotnet/tracer/tracer-home-linux"