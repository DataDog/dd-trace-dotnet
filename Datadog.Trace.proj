<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <BuildInParallel Condition="'$(BuildInParallel)' == ''">true</BuildInParallel>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <TracerHomeDirectory Condition="'$(TracerHomeDirectory)' == ''">$(MSBuildThisFileDirectory)src\bin\windows-tracer-home</TracerHomeDirectory>
  </PropertyGroup>

  <ItemGroup>
    <CsharpProject Include="src\**\*.csproj" Exclude="src/Datadog.Trace.Tools.Runner/*.csproj" />
    <CsharpUnitTestProject Include="test\**\*.Tests.csproj"/>
    <CsharpIntegrationTestProject Include="test\*.IntegrationTests\*.IntegrationTests.csproj"/>
    <CsharpIntegrationTestRegressionProject Include="test\tests-applications\regression\*.IntegrationTests.csproj" />
    <RazorPagesProject Include="test/test-applications/**/Samples.AspNetCoreRazorPages.csproj" />
    <ExcludeExpenseItDemoProject Remove="test/test-applications/regression/**/ExpenseItDemo*.csproj" />
    <ExcludeEF6DemoProject Remove="test/test-applications/regression/**/EntityFramework6x*.csproj" />
    <ExcludeLegacyRedisProject Remove="test/test-applications/regression/**/StackExchange.Redis.AssemblyConflict.LegacyProject.csproj" />
    <CsharpTestHelperProject Include="test\**\*.TestHelpers.csproj"/>
    <CppProject Include="src\**\*.vcxproj"/>
    <CppTestProject Include="test\**\*.vcxproj"/>
    <VbSampleLibProject Include="test\test-applications\integrations\**\*.vbproj" />
    <SampleLibProject Include="test\test-applications\integrations\dependency-libs\**\*.csproj" Exclude="test\test-applications\integrations\dependency-libs\**\Samples.MultiDomainHost.App.*.csproj" />
    <RegressionSampleLibProject Include="test\test-applications\regression\dependency-libs\**\Datadog.StackExchange.Redis*.csproj" />
  </ItemGroup>

  <ItemGroup>
    <FrameworkReproduction Include="test\test-applications\regression\EntityFramework6x.MdTokenLookupFailure\EntityFramework6x.MdTokenLookupFailure.csproj" />
    <FrameworkReproduction Include="test\test-applications\regression\StackExchange.Redis.AssemblyConflict.LegacyProject\StackExchange.Redis.AssemblyConflict.LegacyProject.csproj" />
  </ItemGroup>

  <!--  Used by CompileManagedSrc-->
  <Target Name="BuildCsharpSrc">
    <MSBuild Targets="Build" Projects="@(CsharpProject)" Properties="Platform=AnyCPU">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <!--  Used by CompileManagedTestHelpers-->
  <Target Name="BuildCsharpTestHelpers">
    <MSBuild Targets="Build" Projects="@(CsharpTestHelperProject)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <!--  Used by CompileManagedUnitTests-->
  <Target Name="BuildCsharpUnitTests">
    <MSBuild Targets="Build" Projects="@(CsharpTestHelperProject);@(CsharpUnitTestProject)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <!-- Used by CompileIntegrationTests-->
  <Target Name="BuildCsharpIntegrationTests">
    <MSBuild Targets="Build" Projects="@(RazorPagesProject);@(CsharpIntegrationTestProject);@(CsharpIntegrationTestRegressionProject);@(ExcludeExpenseItDemoProject);@(ExcludeEF6DemoProject);@(ExcludeLegacyRedisProject)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <!--  Used by CompileNativeSrcWindows-->
  <Target Name="BuildCppSrc">
    <MSBuild Targets="Build" Projects="@(CppProject)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <!--  Used by CompileDependencyLibs-->
  <Target Name="BuildDependencyLibs">
    <MSBuild Targets="Build" Projects="@(SampleLibProject);@(VbSampleLibProject)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <!--  Used by CompileRegressionDependencyLibs-->
  <Target Name="BuildRegressionDependencyLibs">
    <MSBuild Targets="Build" Projects="@(RegressionSampleLibProject)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <!--  Used by CompileFrameworkReproductions-->
  <Target Name="BuildFrameworkReproductions">
    <MSBuild Targets="Build" Projects="@(FrameworkReproduction)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <!--  Used by CompileNativeTestsWindows-->
  <Target Name="BuildCppTests">
    <MSBuild Targets="Build" Projects="@(CppTestProject)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <!-- Used by CompileMultiApiPackageVersionSamples -->
  <Target Name="RestoreSamplesForPackageVersionsOnly" Condition="'$(TestAllPackageVersions)'=='true'">
    <!-- Filter the sample projects by TargetFramework -->
    <ItemGroup>
      <PackageVersionSampleCompile Include="@(PackageVersionSample)" Condition="'%(PackageVersionSample.TargetFramework)' == '' or '%(PackageVersionSample.TargetFramework)'=='$(TargetFramework)'" />
    </ItemGroup>

    <!-- Build the sample projects concurrently -->
    <MSBuild Targets="Restore" Projects="@(PackageVersionSampleCompile)" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <!-- Used by CompileMultiApiPackageVersionSamples -->
  <Target Name="RestoreAndBuildSamplesForPackageVersionsOnly" Condition="'$(TestAllPackageVersions)'=='true'" DependsOnTargets="RestoreSamplesForPackageVersionsOnly">

    <!-- Assumes that the core C# projects are already built first -->
    <!-- Filter the sample projects by TargetFramework -->
    <ItemGroup>
      <PackageVersionSampleCompile Include="@(PackageVersionSample)" Condition="'%(PackageVersionSample.TargetFramework)' == '' or '%(PackageVersionSample.TargetFramework)'=='$(TargetFramework)'" />
    </ItemGroup>

    <!-- Build the sample projects concurrently -->
    <MSBuild Targets="Publish" Projects="@(PackageVersionSampleCompile)" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput"/>
    </MSBuild>
  </Target>

  <Import Condition="'$(PerformComprehensiveTesting)'=='true'" Project="build\PackageVersionsComprehensive.g.props" />
  <Import Condition="'$(PerformComprehensiveTesting)'!='true'" Project="build\PackageVersionsLatestMinors.g.props" />

</Project>